(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     53523,       1144]
NotebookOptionsPosition[     52404,       1101]
NotebookOutlinePosition[     52739,       1116]
CellTagsIndexPosition[     52696,       1113]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", "the", " ", "co"}], "-", "basis"}], ",", " ", 
    RowBox[{"with", " ", "periodic", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"hp", "[", 
    RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F0", "=", 
        RowBox[{"Fibonacci", "[", "n", "]"}]}], ",", 
       RowBox[{"F1", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], ",", 
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tblw", ",", "tbls", ",", 
       "ar"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tblw", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F0"}]}], "}"}], "\[Rule]", "tw"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tbls", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F1"}]}], "}"}], "\[Rule]", "ts"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F0"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"tblw", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}], "+", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbls", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.626500989913364*^9, 3.6265010439825687`*^9}, {
   3.6265010838140287`*^9, 3.6265011556879473`*^9}, {3.626501188073691*^9, 
   3.626501251376388*^9}, {3.626501282361532*^9, 3.626501308767273*^9}, {
   3.6265013837286673`*^9, 3.626501388405682*^9}, {3.6297117308094873`*^9, 
   3.629711744441989*^9}, {3.629712260739542*^9, 3.6297122613888474`*^9}, {
   3.629712372304244*^9, 3.629712372429983*^9}, 3.6313353026608963`*^9, {
   3.6418878421894217`*^9, 3.641887846253098*^9}, {3.641887908349964*^9, 
   3.641887912829296*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{"in", " ", "the", " ", "normal", " ", "basis"}], ",", " ", 
    RowBox[{"with", " ", "free", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"\[Omega]", "=", 
     RowBox[{"N", " ", "[", 
      FractionBox[
       RowBox[{
        RowBox[{"Sqrt", "[", "5", "]"}], "-", "1"}], "2"], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"if", " ", "rot", " ", "is", " ", "modified"}], ",", " ", 
     RowBox[{
     "conum", " ", "should", " ", "be", " ", "modified", " ", "in", " ", 
      "consequence"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"rot", "=", "0"}], ";"}], " ", 
   RowBox[{"(*", " ", 
    RowBox[{
    "rotate", " ", "the", " ", "sequence", " ", "of", " ", "couplings"}], " ",
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"fib", "[", "n_", "]"}], ":=", 
     RowBox[{
      RowBox[{"IntegerPart", "[", 
       RowBox[{"\[Omega]", 
        RowBox[{"(", " ", 
         RowBox[{"n", "+", "1", "+", "rot"}], ")"}]}], "]"}], "-", 
      RowBox[{"IntegerPart", "[", 
       RowBox[{"\[Omega]", " ", 
        RowBox[{"(", 
         RowBox[{"n", "+", "rot"}], ")"}]}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"jump", "[", 
      RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"fib", "[", 
         RowBox[{"n", "-", "1"}], "]"}], "<", "1"}], ",", "ts", ",", "tw"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
     RowBox[{"in", " ", "the", " ", "normal", " ", "basis"}], ",", " ", 
     RowBox[{"with", " ", "periodic", " ", "bc"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hpn", "[", 
     RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"F2", "=", 
         RowBox[{"Fibonacci", "[", 
          RowBox[{"n", "+", "2"}], "]"}]}], ",", "tbl", ",", "ar"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"tbl", "=", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"i", ",", 
             RowBox[{"i", "+", "1"}]}], "}"}], "\[Rule]", 
           RowBox[{"jump", "[", 
            RowBox[{"i", ",", "tw", ",", "ts"}], "]"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"F2", "-", "1"}]}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"AppendTo", "[", 
        RowBox[{"tbl", ",", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"1", ",", "F2"}], "}"}], "\[Rule]", "tw"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"ar", "=", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbl", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Normal", "[", 
        RowBox[{"ar", "+", 
         RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6418881505074663`*^9, 3.641888159868703*^9}, {
  3.6419007934609747`*^9, 3.6419008026157618`*^9}, {3.6419008504077578`*^9, 
  3.641900870760375*^9}}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"idos", 
    RowBox[{"(", 
     RowBox[{"p", ",", "q"}], ")"}]}], "=", 
   RowBox[{
    SubscriptBox["pF", 
     RowBox[{"n", "-", "1"}]], "+", 
    SubscriptBox["qF", "n"]}]}], TraditionalForm]]]], "Text",
 CellChangeTimes->{{3.642147346900807*^9, 3.642147359462512*^9}, {
  3.6421474048715353`*^9, 3.6421474083586597`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Rho]", "=", "0.5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"n", "=", "17"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ham", "=", 
   RowBox[{"hp", "[", 
    RowBox[{
     RowBox[{"n", "-", "2"}], ",", "\[Rho]", ",", "1."}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"val", ",", "vec"}], "}"}], "=", 
   RowBox[{"Eigensystem", "[", "ham", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ord", "=", 
   RowBox[{"Ordering", "[", "val", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vec", "=", 
   RowBox[{"vec", "[", 
    RowBox[{"[", "ord", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"val", "=", 
    RowBox[{"val", "[", 
     RowBox[{"[", "ord", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "translate", " ", "and", " ", "scale", " ", "spectrum", " ", "btw", " ", 
    "0", " ", "and", " ", "1"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"val", "=", 
   FractionBox[
    RowBox[{"val", "-", 
     RowBox[{"val", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], 
    RowBox[{
     RowBox[{"val", "[", 
      RowBox[{"[", 
       RowBox[{"-", "1"}], "]"}], "]"}], "-", 
     RowBox[{"val", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}]]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"idos", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"val", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"i", "/", 
         RowBox[{"Fibonacci", "[", "n", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Fibonacci", "[", "n", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"p", " ", "=", " ", 
     RowBox[{"-", "1"}]}], ",", " ", 
    RowBox[{"q", " ", "=", " ", "1"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"p1", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"val", "[", 
         RowBox[{"[", "#", "]"}], "]"}], ",", "#"}], "}"}], "&"}], "[", 
     RowBox[{
      RowBox[{"Fibonacci", "[", 
       RowBox[{"n", "-", "2"}], "]"}], "+", "1"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"p", " ", "=", " ", "1"}], ",", " ", 
    RowBox[{"q", " ", "=", " ", "0"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p2", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"val", "[", 
        RowBox[{"[", "#", "]"}], "]"}], ",", "#"}], "}"}], "&"}], "[", 
    RowBox[{"Fibonacci", "[", 
     RowBox[{"n", "-", "1"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{"idos", ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.641887828950322*^9, 3.6418878806008787`*^9}, {
   3.6418879167284822`*^9, 3.641887998439549*^9}, {3.6418881794033403`*^9, 
   3.641888265273324*^9}, {3.641891224428965*^9, 3.641891238427397*^9}, {
   3.64189317846213*^9, 3.641893181645722*^9}, {3.6421407658291397`*^9, 
   3.6421407879393682`*^9}, {3.642140818884097*^9, 3.642140823555292*^9}, {
   3.642140871299985*^9, 3.642140986729102*^9}, {3.642141190213936*^9, 
   3.642141209093405*^9}, {3.6421412438134604`*^9, 3.64214126812096*^9}, {
   3.6421413056066303`*^9, 3.6421413074616003`*^9}, {3.6421417414778767`*^9, 
   3.642141798647564*^9}, {3.6421418384872*^9, 3.642141916038484*^9}, 
   3.642144819624406*^9, {3.6421448621376*^9, 3.6421448949396057`*^9}, {
   3.642147289151368*^9, 3.642147333385335*^9}, {3.642147416298966*^9, 
   3.6421474332436123`*^9}, {3.64214748056905*^9, 3.6421474864582987`*^9}, {
   3.6421479569287252`*^9, 3.6421479570557947`*^9}, {3.642148806336993*^9, 
   3.642148806463408*^9}, {3.642168476448707*^9, 3.6421684925449963`*^9}, {
   3.64217318334496*^9, 3.642173219071289*^9}, {3.64552513519632*^9, 
   3.645525147730657*^9}, {3.645527469216261*^9, 3.645527506483512*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
     0.0055000000000000005`], AbsoluteThickness[1.6], LineBox[CompressedData["

1:eJw0m3dcje8bx2WFSAgZGVnZZIs+lBlRoSJfEUIhCRkhRPZqEIUoRHsqWe29
9zqjec5pkJn5u57z3L/vP9/Xm87Vc57nfu77uj6fj5GWtsY7O3bo0GFh1w4d
uP///7+pWR3uxDovgchmiGEn8zs6PK/HjrNzAg08UnVSZpwRD0zZgkERa26E
nypif78Dv+x3W7c6iHROdPiwQOK3B/9CGp6fj/7Efn4/aoaNeLdpxXedS+Ej
loz6Yofjh/+Ylhu2s88fgnun/yzPCbuiqF4oMervgFv28b371iiCr3cMerM/
xZYa98LIwT43nGY7YvT2tq1X3XuDr38KE/ZLQ6+p9kHU05B7JS+d4Cb4q9Si
NhL87zuDuTkDfwm6aWDz+5vN+xecw1y7urU6bhrgf78zZt3w7/TEYAw6lh9Y
1DXrPGb4rt2WmDiGXY8LonIHzv3nqInnnw1dvf+7iGij4s9Zvcaz67uESQOm
D3XuMAFrek2vn9lyGYemXgiesn4Wu96r+HHUfeeu6ln4MrbPvMxT19Am3FQe
ajGbXf91jL1e6DgoaQ4MHv1IClW8Cf1DbWZfes1l3+cm5g+f3PXsSG2MCNxt
+2ftLQS+OW1ce06bfb9bWDHwzYX+dxbgc0yp2sq7t3F/qIfesSc67Pu6wr9v
5u7NdkBy8op4N6ErRPc6ZG7ptIh9fzc0p50L+LNtETwLXtkINd2x8HH+0vG2
i9j9cEd789mDMScMsVeo2X+SnQfSlx8ZvuaCIbs/d6CB2i2H4wyB5rtvHWLu
wGbcPZWzXYzY/bqL9ZpYZ2NkhL4/u+1OUPCEVWSxok2aEbt/niiItjx8erIx
6roe69Nb/x4yJjkZz1hpzO7nPTTM22duNG49XvWTxG66fR+NU6c+WL5oPbu/
XpClxH1LzluPyyM27nha7oX8vBIcHLyB3W9veE5drALbDfhvclqvNo0HmD54
7N1uI0zZ/X+ATXv6+2+wN8W0+fOiF9o8xP2kpqMz7puy5/EITz67f281MMPZ
J+tDEjc+gv7jeQZ/d5qx5/MIST2S/YZUmEHm3/O89M8jKBns+VT90Yw9Lx94
mY3XHd5nIzbQp1Ue+6Dti2+R78Ud7Pn54Em7gWrlvR14G+U4Zfayx9iTU5hZ
FbCDPc/HsL8ze0py4w5ovpnZabOUWOFKvOO3Hez5PoFZ8GwscNmJWwlNJWeu
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
gXV3bnYMaanAF81uzy4T83ouXXfyhJW/iUfcHUcTYyVKR2Yeg24l03crcbPK
ZmcSsfw4G1gJTVcHtZF6lUzvrcS2HiqdBi2tRKwn16BWIu1XYcA5Yl7/rUSf
AzvqkldU4uK9pqb4RZV47x/g5rKykunBlbjx63DhBPr/Bq793VAJXWm3Uo91
lUwfroSVUK+LE/25htdgbuTAj1MON8ebVjK9uBJxFb10TmyqBKfeGJ2qREqv
DpJe5pVMP67E+PPzhkzfTT/HdZ+3K/FX88aCVmJeT66Eio7zvXibSlx+wDV0
lZgwZ4hgmW0l05cr0f+RnXqoXSVMHx5ZLXhdCeOdi8Tj6ffyenMlpt/avlD5
SCVGy+U1ut5jS+YeIOZft0oc+nBhn+RxJT498v3QWFuJLiaNsfOeVDI9uhKh
PU92sfWrxFsfbcd97ZXo9dLTbgBdB69PV+FBzcsGA/9KXHmcP7utVxWit5eM
UQuuZHp1FdoUZ8+voOvcKG+AqrD87dXgyrBKpl9XITTx7u6BsZUY69uBO1JQ
kj4pLJmY17Or8KpE4PTnTSU++96xclpVhR+LC7arvKtk+nYV3mfGGk55T8/N
b8pI6nGh9mfxllfCSqZ3V+GN5gC7WFEluMV56VAViqejeIu4kunfdH3VW//e
qauE+bPNHsqXqrDU5Pvf6fWVTA+vwpVCRdEwKa0recNQhT7hw9d+JOb18Spo
WFqGnG6qxFfqZtTCqiDVnKa582sl08urMGDerQfe3yrBPQ2v5CqoKF459vR7
JdPPqzApQMs+ie4rv31UYWh6uLLGz0qmp1fh1pF5my/8o3ov12o/ba1Cu2la
fQUxr69XIVAp/kV7hypMCKj/Sh/BnnJvw0Udq5jeXg3zU43V7cTfuXZDrRoO
Y7yv+dBz4/X3amzNvqc1pHMVEgNVbWZOrsaA1Ds6WsS8Hl+N2ONx4ZHjBLgV
9HJMzOJq1H4sPpZOzOvz1Wh6efX4Dk0B5OOJSTVO5eTW1hPzen01Nhy3/eQ7
XoBJIWX34q3p9+27X/lwooDp99WIiT25s2SSAO0hBzbQGY5o2YEeKycLmJ5P
13NjjU3QdAGSOTnDtRq7LlX9GKolYPp+Na5o2gttZgrAqbM0QiNqV8yPLbME
TO+vRkmLnv3B2QLIp8u4amiU/PrzfomA6f/V0M2yjNJZJsAUufxZjfYa1UND
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
meUVpdgauNjvakQzBnJxryFSRI8p2ZpPzOcXpdAxMnWwimrGqaSP6WPHSuEx
aIL+VWI+zyjFdrVp76ZEUz3Ofp4mxYsTlRe2EPP5RimCtHq4XydeJRfgqC8+
/XbK2sZmlnekOar/4YiTxKHLuI5ZimavZae8ifn8oxTC4wnOqyTNUEsZRkek
FBeVrkw+QMznIYmtulZflVI9bjnTnHFL31w9m5jPR0pRvcV2trmM6qVwARAp
WlM8/0xsaWZ5SZpbxpRlZxCvli8YmotvT1pg0trM8pNSBEs3Rez5SPW44++o
FBrjLg30JObzlFJsOX4jLPpLMwat5BQQKSwD7JvbiPl8pRQDNvR0zv9K9dJq
bN9elaJS8Ypr/bdmlreU4vLygAKf71SPa5fvSKGeYvfQ4kczy1/S3LzXrONH
YoP04xP0fKRIULJX6dXezPKYUpz6mmaj37UF4frcDaY5/cCtMVuJ+XymFJov
Ziu3Ew+WCzxSHBHMibZRbGF5TSnqla7P6tKtBU6rOEVbirUn+4Xf7t7C8ptS
fOqtM8ewB9XLeP5wdboU4keRDW7EfJ5TChPvBZ3P9mzBGvk/z5Hi7KzwNSHE
fL5Tiokn69de6kX15PEdKYYeC83MI+bznlI0DZs4TF25BUPkFyTFl/qsPSMH
tLD8pxQ7nR/UbCWWy/efpWh7/XvsJWI+DyqFm59VndHAFjQacA4l3V/fJ/0c
iPl8qAwzpp+/skutBWu59CnNDedSfYw8ifm8qAxvdStefyeW233Ut498O8tc
eUgLy4/KkL+xs4oJ8VAuTjhUhr7/bYy4TcznSWUwe6r8Vnko1VvLJRCoL1IW
l4wi5vOlMrj7zhdvUm+BhIsHTJPBqLWD2n5iPm8qw5Zo1b5BxIbyAIMMLyv8
f34j5vOnMpwZkao9YhjVy9X6t3spzR2t+/cvJebzqDIkDMmx3EqsbnRq88u1
MnhqSR13EvP5VBnWDM7y8lZuhXy72ShDzq7OZY+I+bwqzQW9jEpfEUuNuMCo
DFkhuVpZxHx+VYazt/bVSYkN5QM3/b1J0YT5vVtZnlWGlF/H1WyI5e3JURkm
XOjyxZGYz7fKUF1rMneqSiuG0fT1/awMxyVTUhYR83lXmmsqRvx4QMydHvOu
ybDSNvdjEjGff6X7sdZoQRuxjBtn7sgwwMoxckG/VpaHlWGsz/RDJ4iN1pcv
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
EvXE9j6uQ5+uwvBesMx3oI768+T/3/8Bhm+l2w==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 1.}, {0, 1.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6421407690872927`*^9, 3.642140788707848*^9}, {
   3.642140931049192*^9, 3.64214098786348*^9}, {3.642141192387828*^9, 
   3.642141210358729*^9}, {3.642141246548739*^9, 3.6421412693166637`*^9}, 
   3.642141308486841*^9, {3.6421417907590437`*^9, 3.6421417998932953`*^9}, {
   3.642141843068386*^9, 3.6421418546071243`*^9}, 3.642144820872575*^9, {
   3.6421448683156757`*^9, 3.642144896070232*^9}, 3.6421473377688217`*^9, 
   3.642147615997795*^9, 3.6421480005750847`*^9, 3.642148807769302*^9, 
   3.642168244982992*^9, {3.6421684775009613`*^9, 3.642168494313734*^9}, 
   3.642168560545936*^9, {3.6421731871789494`*^9, 3.642173221349539*^9}, {
   3.645525140208673*^9, 3.645525150765615*^9}, {3.64552748036572*^9, 
   3.6455275090768843`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{"\"\<~/idos_rho_05.pdf\>\"", ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.642168515308072*^9, 3.642168556216201*^9}, {
  3.6421732330547543`*^9, 3.642173233573063*^9}, {3.645614562655344*^9, 
  3.645614600161394*^9}}],

Cell[BoxData["\<\"~/idos_rho_05.pdf\"\>"], "Output",
 CellChangeTimes->{3.6456146011085052`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<idoslog.pdf\>\""}], 
   ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.642168515308072*^9, 3.642168556216201*^9}, {
  3.6421732330547543`*^9, 3.642173233573063*^9}, {3.645614562655344*^9, 
  3.645614573801375*^9}}],

Cell[BoxData["\<\"/home/nicolas/git/talks/Fractals LPS june \
2015/idoslog.pdf\"\>"], "Output",
 CellChangeTimes->{3.6421685617109957`*^9, 3.642173234274189*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"p", " ", "=", " ", "4"}], ",", " ", 
    RowBox[{"q", " ", "=", " ", 
     RowBox[{"-", "2"}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"lab1", "=", 
     RowBox[{
      RowBox[{"4", 
       RowBox[{"Fibonacci", "[", 
        RowBox[{"n", "-", "1"}], "]"}]}], "-", 
      RowBox[{"2", 
       RowBox[{"Fibonacci", "[", "n", "]"}]}], "+", "1"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p1", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"val", "[", 
          RowBox[{"[", "#", "]"}], "]"}], ",", "#"}], "}"}], "&"}], "[", 
      "lab1", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"p", " ", "=", " ", 
      RowBox[{"-", "4"}]}], ",", " ", 
     RowBox[{"q", " ", "=", " ", "3"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   
   RowBox[{
    RowBox[{"lab2", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], 
       RowBox[{"Fibonacci", "[", 
        RowBox[{"n", "-", "1"}], "]"}]}], "+", 
      RowBox[{"3", 
       RowBox[{"Fibonacci", "[", "n", "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"p2", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"val", "[", 
          RowBox[{"[", "#", "]"}], "]"}], ",", "#"}], "}"}], "&"}], "[", 
      "lab2", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"idos", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{
         RowBox[{"Fibonacci", "[", 
          RowBox[{"n", "-", "2"}], "]"}], "+", "1"}], ";;", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "-", "1"}], "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6421449176491003`*^9, 3.642144952358494*^9}, {
  3.642147518696862*^9, 3.6421475395472727`*^9}, {3.642147590715989*^9, 
  3.642147704587816*^9}, {3.642147774171307*^9, 3.642147800506261*^9}, {
  3.642147849803643*^9, 3.642147870634235*^9}, {3.642168483257167*^9, 
  3.6421684834237223`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.007333333333333334], 
     AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw10Xk4lekfx3GR6VSS1tGuTUepQcvQoo9WWlGhZUpJKcpRU2ib05ztOStt
0qKQolRolcmkXYvGDGEIp0VRTZmWQVp+53dd3+/zz3O9rue67+f+3u++y8J9
g83NzMyiW5iZ/f/dIWqV9lVc+Xiz/z+2Mrg98ejynm0ng4v92Dfd95LFMjT9
5/DOh+0kw7fdJ0QxbFcZvHP2jGtmQ4b7cS3nLYgne8oQ27lH/Ua2twzyt77h
U/aTA2S4CVHXFexAGXx77fjJ7gA5RIa/LbTbN7MlMqy9dynoBTtKhjdPDIXf
HyZLZegy7vaSNLYgQ2MXx4oP7FgZXkZpXq1MIsfL8PbgquQkdqIMT1t0flqe
TE6TQZK60az7EXKmDM6h4YVb2dky+IvSj5pnkvNkwG9HW2xj58uQVxh87wO7
UIaWD3KHBZwhl5nm79C6VQrbKMP1MZcc/zxPrjX9/2THlRMukOtN9/9eUr75
IrlRhow/SqOscshmcnQ2fxXb9jeySI4zGYfFd9k2chQ5d6u6fZn7y7HI//Xz
V2w7OW58qZS+Lub+cqRsXH3e7iH3l8PcqSFwYAn3l2OEc41xayn3l8PT99GD
4jLuL0dLmWROcTn3l6Na0yllwyPuL8fSqWNENexAOT5PTv166hn3l6N9zZbh
bWq4vxxTZpQ29H/B/eWwSC3+bngt95ej+3H1zDV13F+OnpHS993ecn858l1m
jnSt5/5ytJ7fJTqXnSjHsMP77Fu95/5y1FuKJ89hZ8pxucTnwO8fuL8cYUu7
TWrxkfvL8XRMXPsgdr4c1yWfTuZ7V1B/0/5X873H+pDL5Oi2tmBsBtsox4uI
l3+MmEOulWPyzDDvGHa9HO0MAyf4+ZMb5RgTc9PuM9tMgZ368d6X55NFCsze
f8w6eTHZRoHK0FXHNwSSbRVwgqi2finZToG9+9ttn76cLFZg1szy6cfZTgr0
HNs8cWok2VWB9E0XR95iQ4E9mWnLPkWTPRXo12dM2J0tZG8FCjK7bBnwCznA
tJ949NTP28mBCmRvb/PNVU4OUeBZl3dNOWyJAk/sT5z9GEeOUiBLkXLCby9Z
qsCVJdY9r+0jCwq01p2qmniAHKvAIjvJlV4J5HgFbHXfzeieTE5UYILH6jHl
R8hppnlm/TNNmkLOVGCG26Iq9zRytgI/F1glx7PzFPgud0RKtxPkfAU+iEWp
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
u9CAtBdH72jZZQb8D5Ic8Nc=
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.4128195897571729, 592.2},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0.41546143164112076`, 0.5845393122137823}, {611., 987.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6421449248125353`*^9, 3.642144954205306*^9}, 
   3.642147541411914*^9, {3.642147596848611*^9, 3.642147702593012*^9}, {
   3.642147786809216*^9, 3.642147801075461*^9}, 3.64214787251961*^9, 
   3.642148006847699*^9, 3.642148810005725*^9, 3.642168245045514*^9, {
   3.6421684838550673`*^9, 3.642168496545868*^9}, 3.642168547947488*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<idos2.pdf\>\""}], ",",
    "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.642168515308072*^9, 3.642168544021456*^9}}],

Cell[BoxData["\<\"/home/nicolas/git/talks/Fractals LPS june \
2015/idos2.pdf\"\>"], "Output",
 CellChangeTimes->{3.642168549358754*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"idos", "[", 
    RowBox[{"[", 
     RowBox[{"lab1", ";;", "lab2"}], "]"}], "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "True"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6421449176491003`*^9, 3.642144952358494*^9}, {
  3.6421478069689713`*^9, 3.642147822345002*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], LineBox[CompressedData["
1:eJw10X9M1HUcx/EDdR0cHLiYOYeG5I8z0Ijilxa9gII7UQZswZ2aHb88EM47
j6ZyhXOYfT+fr1SmwlBQ0HDdZvErRWCuTt0SfzDx57kM75I7wzBHSxaKzXB7
fz7be589/nj/837OL7TklvgrFArD1Lz4++ynfzy52P2e4sVrkOAdu1V1UbhF
wsPjtfZiDdkhYfuVQe994Q4JH9otf7cuIfdIKDA3/tYcRXZK6O2rLnFFk/sl
nBq1BuqWkgclzPo6q7ztTfJtCSY+NBEeS/ZI2K2p9JS/TR6R0G3qnVgfRx6T
4HqUVmmLJ09IiHRN/ud8n6xgSB0o7E5OJysZng6HfRKeQQ5l+N4aeLgskzyb
4cnvQyELV5EjGCw189eXZZM1DDUBpxIyc8gxDB2N/yb9kktOZPigasGweSMZ
DH2vxG0dLydrGX7oD3QazeRshoMz5bLlm8l6hrCg1sMKG9nIUO2aFpdqJ5cy
KIMjjqR8SrYy7E0bmK7cTt7GoF79U9uSneQdDLVLE/Yv2kVmDKcjJy37viDv
YVg9EP5oDRP9GXb9fPnOAeEWBldTy1ub7or+DNc/jj12Rrhj6p7P7dM3eUR/
hry7dYnt90R/hq5DaQ8CfKI/Q07tspBLI6I/Q4PG2/rnqOjPcD/lccGFh6I/
Q9HOG59lTYr+DIagzcvDnon+DJJ7hiVd4aH+DEf/svcY/cgKjvq12i6HP1nJ
EW9r2pofQA7l2D83t7M+kDyb48vLUfUxKnIEx+gl24zhYLKG43zxPSfU5BgO
d0NWjiqUnMjRva6z3SgMDnPukyNuYS1Hm2pvReMKcvbU/vNkP+U7ZD2H7pb6
hE3YyHHIi8or75JLORaMF0TOSyZbOS60fzeZlULexvHsQN3Vq8I7OPYZjBNv
pJEZR0JzRfCxdPIejtTX+c0/MsgNHFUr3N/4tOQWDpWjt6hoJdnB4al2jDcJ
d3Dc1L100plH7uFYZrqep8gnOzm2nDurnqcn93NEz2l++XMDeZCj+lqif9ca
8m2Oi6Y636vryB6ORYY7x5M+Io9wHN2yeKZdeIzD6vd0yFcs+nN89TjjjLpE
9Jcx0OZqDNog+svIVuvOfSscKuNXT8mI3iT6y6h9MC0zvkz0l1G4e63ymrBG
xsKIf0pVG0V/GSFna/JXlov+MqI23DhvEoaMOb5OnVdYK2OW+bUkZYXoL2Nu
64nYaGG9jP8BA9vVkQ==
      "]]}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0.48638609886176476`, 750.6000000000001},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0.4867986922489923, 0.5132046690315551}, {755., 843.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.642147812942683*^9, 3.64214782347334*^9}, 
   3.642147875089015*^9, 3.6421480091580963`*^9, 3.6421488117500143`*^9, 
   3.642168245090309*^9, 3.642168500977886*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<idos3.pdf\>\""}], ",",
    "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.642168515308072*^9, 3.642168536935382*^9}}],

Cell[BoxData["\<\"/home/nicolas/git/talks/Fractals LPS june \
2015/idos3.pdf\"\>"], "Output",
 CellChangeTimes->{3.6421685376461773`*^9}]
}, Open  ]]
},
WindowSize->{1920, 1021},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.1 for Linux x86 (64-bit) (March 23, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 2626, 68, 165, "Input"],
Cell[3187, 90, 3589, 100, 354, "Input"],
Cell[6779, 192, 385, 11, 33, "Text"],
Cell[CellGroupData[{
Cell[7189, 207, 4171, 110, 380, "Input"],
Cell[11363, 319, 28215, 473, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39615, 797, 272, 5, 32, "Input"],
Cell[39890, 804, 96, 1, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40023, 810, 336, 8, 32, "Input"],
Cell[40362, 820, 161, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40560, 827, 2257, 67, 187, "Input"],
Cell[42820, 896, 6012, 108, 236, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48869, 1009, 234, 6, 32, "Input"],
Cell[49106, 1017, 135, 2, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49278, 1024, 381, 9, 32, "Input"],
Cell[49662, 1035, 2315, 48, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52014, 1088, 234, 6, 32, "Input"],
Cell[52251, 1096, 137, 2, 32, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
