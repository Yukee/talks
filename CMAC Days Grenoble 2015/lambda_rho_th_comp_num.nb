(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    395104,       8383]
NotebookOptionsPosition[    389336,       8197]
NotebookOutlinePosition[    389672,       8212]
CellTagsIndexPosition[    389629,       8209]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Styling", " ", "of", " ", "the", " ", "text"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"s", "=", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"FontSize", "\[Rule]", "Large"}], ",", 
       RowBox[{"FontFamily", "\[Rule]", "\"\<Linux Libertine Display\>\""}]}],
       "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"st", "[", "text_", "]"}], ":=", 
     RowBox[{"Style", "[", 
      RowBox[{"text", ",", "s"}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.649674623836038*^9, 3.6496746261865187`*^9}, {
  3.651902682404711*^9, 3.651902684269533*^9}, {3.651902778046664*^9, 
  3.6519027900775547`*^9}, {3.6571943291367493`*^9, 3.657194337609771*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BostonBlue", "=", 
   RowBox[{"RGBColor", "[", "\"\<#00688B\>\"", "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"comp", "=", 
   RowBox[{"RGBColor", "[", "\"\<#8B2300\>\"", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6496750371396923`*^9, 3.649675037158482*^9}}],

Cell[CellGroupData[{

Cell["Hamiltonians", "Section",
 CellChangeTimes->{{3.629712555829027*^9, 3.629712557652924*^9}, {
  3.650529701640504*^9, 3.650529711404598*^9}}],

Cell[CellGroupData[{

Cell["Definitions", "Subsection",
 CellChangeTimes->{{3.632041721549465*^9, 3.632041723101447*^9}, {
  3.6358312356676207`*^9, 3.635831252179337*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", "the", " ", "co"}], "-", "basis"}], ",", " ", 
    RowBox[{"with", " ", "periodic", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"hp", "[", 
    RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F0", "=", 
        RowBox[{"Fibonacci", "[", "n", "]"}]}], ",", 
       RowBox[{"F1", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], ",", 
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tblw", ",", "tbls", ",", 
       "ar"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tblw", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F0"}]}], "}"}], "\[Rule]", "tw"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tbls", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F1"}]}], "}"}], "\[Rule]", "ts"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F0"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"tblw", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}], "+", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbls", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.626500989913364*^9, 3.6265010439825687`*^9}, {
   3.6265010838140287`*^9, 3.6265011556879473`*^9}, {3.626501188073691*^9, 
   3.626501251376388*^9}, {3.626501282361532*^9, 3.626501308767273*^9}, {
   3.6265013837286673`*^9, 3.626501388405682*^9}, {3.6297117308094873`*^9, 
   3.629711744441989*^9}, {3.629712260739542*^9, 3.6297122613888474`*^9}, {
   3.629712372304244*^9, 3.629712372429983*^9}, 3.6313353026608963`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", "the", " ", "co"}], "-", "basis"}], ",", " ", 
    RowBox[{"with", " ", "antiperiodic", " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ha", "[", 
    RowBox[{"n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F0", "=", 
        RowBox[{"Fibonacci", "[", "n", "]"}]}], ",", 
       RowBox[{"F1", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], ",", 
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tblw", ",", "tbls", ",", 
       "ar"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tblw", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F0"}]}], "}"}], "\[Rule]", "tw"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "F1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tbls", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F1"}]}], "}"}], "\[Rule]", "ts"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F0"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"PrependTo", "[", 
       RowBox[{"tblw", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"1", "+", "F0"}]}], "}"}], "\[Rule]", 
         RowBox[{"-", "tw"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"tblw", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}], "+", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbls", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"Transpose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.626500989913364*^9, 3.6265010439825687`*^9}, {
  3.6265010838140287`*^9, 3.6265011556879473`*^9}, {3.626501188073691*^9, 
  3.626501251376388*^9}, {3.626501282361532*^9, 3.626501308767273*^9}, {
  3.6265013837286673`*^9, 3.626501388405682*^9}, {3.6297117308094873`*^9, 
  3.629711744441989*^9}, {3.629712260739542*^9, 3.629712288374743*^9}, {
  3.6297123335518017`*^9, 3.629712368126628*^9}, {3.62971244612885*^9, 
  3.6297124945286303`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"Fibonacci", " ", "Hamiltonian"}], ",", " ", 
    RowBox[{
     RowBox[{"in", " ", "the", " ", "co"}], "-", "basis"}], ",", " ", 
    RowBox[{"with", " ", 
     SuperscriptBox["e", "ik"], " ", "bc"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"hk", "[", 
    RowBox[{"k_", ",", "n_", ",", "tw_", ",", "ts_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"F0", "=", 
        RowBox[{"Fibonacci", "[", "n", "]"}]}], ",", 
       RowBox[{"F1", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "1"}], "]"}]}], ",", 
       RowBox[{"F2", "=", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ",", "tblw", ",", "tbls", ",", 
       "ar"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tblw", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F0"}]}], "}"}], "\[Rule]", "tw"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "2", ",", "F1"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"tbls", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{"i", ",", 
            RowBox[{"i", "+", "F1"}]}], "}"}], "\[Rule]", "ts"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "F0"}], "}"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"PrependTo", "[", 
       RowBox[{"tblw", ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"1", "+", "F0"}]}], "}"}], "\[Rule]", 
         RowBox[{
          RowBox[{"Exp", "[", 
           RowBox[{"I", " ", "k"}], "]"}], "tw"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ar", "=", 
       RowBox[{
        RowBox[{"SparseArray", "[", 
         RowBox[{"tblw", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}], "+", 
        RowBox[{"SparseArray", "[", 
         RowBox[{"tbls", ",", 
          RowBox[{"{", 
           RowBox[{"F2", ",", "F2"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Normal", "[", 
       RowBox[{"ar", "+", 
        RowBox[{"ConjugateTranspose", "[", "ar", "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.626500989913364*^9, 3.6265010439825687`*^9}, {
  3.6265010838140287`*^9, 3.6265011556879473`*^9}, {3.626501188073691*^9, 
  3.626501251376388*^9}, {3.626501282361532*^9, 3.626501308767273*^9}, {
  3.6265013837286673`*^9, 3.626501388405682*^9}, {3.6297117308094873`*^9, 
  3.629711744441989*^9}, {3.629712260739542*^9, 3.629712288374743*^9}, {
  3.6297123335518017`*^9, 3.629712368126628*^9}, {3.62971244612885*^9, 
  3.6297124945286303`*^9}, {3.6342799382942677`*^9, 3.6342799433882017`*^9}, {
  3.634279999836821*^9, 3.6342800047344503`*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\[Rho] dependance of \[Lambda] and \[Lambda]b", "Section",
 CellChangeTimes->{{3.65675281975525*^9, 3.65675282949114*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Omega]", "=", 
    RowBox[{
     FractionBox[
      RowBox[{
       SqrtBox["5"], "-", "1"}], "2"], "//", "N"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"interference", " ", "factor"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"gam", "[", 
     RowBox[{"\[Rho]_", ",", "q_"}], "]"}], ":=", 
    FractionBox["1", 
     RowBox[{"1", "+", 
      SuperscriptBox["\[Rho]", 
       RowBox[{"q", " "}]]}]]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "molecular", " ", "and", " ", "atomic", " ", "renormalization", " ", 
    "factors"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"lamb", "[", "\[Rho]_", "]"}], ":=", 
   RowBox[{"(", 
    FractionBox[
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"gam", "[", 
        RowBox[{"\[Rho]", ",", "1."}], "]"}], 
       SuperscriptBox["\[Rho]", "2"]}], "-", 
      SqrtBox[
       RowBox[{"1", "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"gam", "[", 
            RowBox[{"\[Rho]", ",", "1."}], "]"}], 
           SuperscriptBox["\[Rho]", "2"]}], ")"}], "2"]}]]}], 
     RowBox[{"2", 
      RowBox[{"gam", "[", 
       RowBox[{"\[Rho]", ",", "1."}], "]"}], 
      SuperscriptBox["\[Rho]", "2"]}]], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"barlamb", "[", "\[Rho]_", "]"}], ":=", 
   RowBox[{"(", 
    FractionBox[
     RowBox[{
      SqrtBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"1", "+", 
           SuperscriptBox["\[Rho]", "2"]}], ")"}], "4"], "+", 
        RowBox[{"4", 
         SuperscriptBox["\[Rho]", "4"]}]}]], "-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["\[Rho]", "2"]}], ")"}], "2"]}], 
     RowBox[{"2", 
      SuperscriptBox["\[Rho]", "4"]}]], ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6567528630595703`*^9, 3.656752874507416*^9}, {
  3.656766228918612*^9, 3.656766239846713*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]b", "[", "\[Rho]_", "]"}], ":=", 
   RowBox[{"2", "/", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"\[Rho]", "^", "2"}]}], ")"}], "^", "2"}], "+", 
      RowBox[{"Sqrt", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"\[Rho]", "^", "2"}]}], ")"}], "^", "4"}], "+", 
        RowBox[{"4", 
         RowBox[{"\[Rho]", "^", "4"}]}]}], "]"}]}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]", "[", 
    RowBox[{"\[Rho]_", ",", "q_"}], "]"}], ":=", 
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       RowBox[{"\[Rho]", "^", "2"}], 
       RowBox[{"gam", "[", 
        RowBox[{"\[Rho]", ",", "q"}], "]"}]}], "+", 
      RowBox[{"Sqrt", "[", 
       RowBox[{"1", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Rho]", "^", "2"}], 
           RowBox[{"gam", "[", 
            RowBox[{"\[Rho]", ",", "q"}], "]"}]}], ")"}], "^", "2"}]}], 
       "]"}]}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]", "[", "\[Rho]_", "]"}], ":=", 
   RowBox[{"\[Lambda]", "[", 
    RowBox[{"\[Rho]", ",", "1."}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6567529394776154`*^9, 3.656753052227532*^9}, {
  3.656766264622725*^9, 3.6567662693185673`*^9}, {3.65676653238299*^9, 
  3.656766549086735*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]b", "[", "\[Rho]", "]"}], ",", 
     RowBox[{"\[Lambda]", "[", "\[Rho]", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", "\"\<\[Rho]\>\"", "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"st", "/@", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*OverscriptBox[\(\[Lambda]\), \(_\)]\)(\[Rho])\>\"", ",", 
       "\"\<\[Lambda](\[Rho])\>\""}], "}"}]}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", "comp"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<CMU Serif\>\""}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.656752834474546*^9, 3.656752835150638*^9}, {
  3.656752877763186*^9, 3.656752900955337*^9}, {3.656752999235758*^9, 
  3.656753001963564*^9}, {3.656753055499773*^9, 3.656753062340069*^9}, {
  3.656753152331917*^9, 3.656753152444121*^9}, {3.656753188284192*^9, 
  3.656753322324*^9}, {3.656766278742939*^9, 3.656766287654729*^9}, {
  3.656824958163636*^9, 3.656824958355193*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[2], 
        RGBColor[0.368417, 0.506779, 0.709798]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[2], 
        RGBColor[0.5450980392156862, 0.13725490196078433`, 0.]], 
       LineBox[CompressedData["
1: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
Wa9ISeL/KS2fnJ+nEX73299ULlP4P4nh8UQ=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Rho]\"", TraditionalForm], None}, AxesOrigin -> {0, 0.2}, 
     AxesStyle -> Directive[FontSize -> 15, FontFamily -> "CMU Serif"], 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 1}, {0.23606798713521754`, 0.9999999999999991}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
       "\"\\!\\(\\*OverscriptBox[\\(\[Lambda]\\), \\(_\\)]\\)(\[Rho])\"", 
        Directive[FontSize -> Large, FontFamily -> "Linux Libertine Display"],
         StripOnInput -> False], 
       StyleBox["\"\[Lambda](\[Rho])\"", 
        Directive[FontSize -> Large, FontFamily -> "Linux Libertine Display"],
         StripOnInput -> False]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.]], {
                    
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[
                    0.5450980392156862, 0.13725490196078433`, 0.]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3633986928104575, 0.09150326797385622, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5450980392156862, 0.13725490196078433, 0.]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.], 
                    Editable -> False, Selectable -> False]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.6567528941885567`*^9, 3.65675290134804*^9}, 
   3.656753002389586*^9, {3.6567530587421837`*^9, 3.6567530626361237`*^9}, 
   3.656753152990449*^9, 3.6567531989078608`*^9, 3.656753232811825*^9, 
   3.6567532769631*^9, {3.656753311229227*^9, 3.656753322842189*^9}, 
   3.6567535082154913`*^9, {3.6567662797705927`*^9, 3.656766288037812*^9}, 
   3.656769290529203*^9, {3.656824952780369*^9, 3.656824961559729*^9}, 
   3.65685165116959*^9, 3.657194352574148*^9, 3.6572627824064207`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<lb_lbb.pdf\>\""}], 
   ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.6567534505707703`*^9, 3.656753478291874*^9}}],

Cell[BoxData["\<\"/home/nicolas/git/talks/CMAC Days Grenoble \
2015/lb_lbb.pdf\"\>"], "Output",
 CellChangeTimes->{3.656753479249259*^9, 3.656753509590163*^9, 
  3.6567692906950893`*^9, 3.656824953051929*^9, 3.6568516513939342`*^9, 
  3.657194353029052*^9, 3.657262782707706*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Numerical computation of \[Lambda] and \[Lambda]b using ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["D", 
    RowBox[{"+", "\[Infinity]"}]], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "Section",
 CellChangeTimes->{{3.6567535805718412`*^9, 3.656753608828233*^9}}],

Cell[CellGroupData[{

Cell["Definitions concerning the fractal exponents", "Subsection",
 CellChangeTimes->{{3.630934451760487*^9, 3.63093445745586*^9}, {
  3.650529960455673*^9, 3.6505299613584337`*^9}, {3.6567581826397943`*^9, 
  3.656758193495636*^9}}],

Cell["\<\
We define general functions computing fractal dimensions from lists, rather \
than functions adapted to our specific case.\
\>", "Text",
 CellChangeTimes->{{3.6309975019888783`*^9, 3.630997549157268*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[TextData[{
 "We compute ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[Chi]", "q"], "n"], "(", "i", ")"}], "=", 
    RowBox[{
     SubscriptBox["\[CapitalSigma]", "a"], "|", 
     RowBox[{
      SuperscriptBox["\[Psi]", "n"], "(", 
      RowBox[{"i", ",", "a"}], ")"}], 
     SuperscriptBox["|", 
      RowBox[{"2", "q"}]]}]}], TraditionalForm]]],
 ".\nWe define the local dimension of the wavefunctions:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["D", "q"], "(", "i", ")"}], "=", 
    RowBox[{
     SubscriptBox["lim", 
      RowBox[{"n", "\[Rule]", "\[Infinity]"}]], 
     RowBox[{
      FractionBox["1", 
       RowBox[{"q", "-", "1"}]], 
      FractionBox[
       RowBox[{"log", "(", 
        RowBox[{
         SuperscriptBox[
          SubscriptBox["\[Chi]", "q"], "n"], "(", "i", ")"}], ")"}], 
       RowBox[{"log", "(", 
        RowBox[{"1", "/", 
         SubscriptBox["F", "n"]}], ")"}]]}]}]}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.6297819505151176`*^9, 3.629782150655591*^9}, {
  3.6303260562655563`*^9, 3.630326139818005*^9}, {3.630934477152502*^9, 
  3.630934567217009*^9}, {3.630934630673167*^9, 3.630934631297505*^9}, {
  3.6309354307593203`*^9, 3.630935516815362*^9}, {3.6309356538549843`*^9, 
  3.630935654575048*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "wf", " ", "is", " ", "a", " ", "list", " ", "of", " ", "numbers", " ", 
     "that", " ", "are", " ", "a", " ", "priori", " ", "the", " ", 
     "coefficients", " ", "of", " ", "a", " ", 
     RowBox[{"wavefunction", ".", " ", "They"}], " ", "can", " ", "be", " ", 
     "coefficients", " ", "in", " ", "the", " ", "position", " ", "basis"}], 
    ",", " ", 
    RowBox[{"for", " ", "a", " ", "given", " ", "energy"}], ",", " ", 
    RowBox[{
    "or", " ", "coefficients", " ", "in", " ", "the", " ", "energy", " ", 
     "basis", " ", "for", " ", "a", " ", "particular", " ", 
     RowBox[{"position", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"WfD", "[", 
     RowBox[{"int_", ",", "q_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"q", "-", "1"}], ")"}], 
       RowBox[{"-", "1"}]]}], 
     FractionBox[
      RowBox[{"Log", "[", 
       RowBox[{"Plus", "@@", 
        SuperscriptBox["int", "q"]}], "]"}], 
      RowBox[{"Log", "[", 
       RowBox[{"Length", "@", "int"}], "]"}]]}]}], ";"}]}]], "Input",
 CellChangeTimes->{{3.630997267210726*^9, 3.630997456587614*^9}, {
  3.630997567916525*^9, 3.630997642602827*^9}, {3.6313445925282907`*^9, 
  3.631344626817724*^9}, {3.656768832152775*^9, 3.656768844976712*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "a", " ", "more", " ", "precise", " ", "way", " ", "of", " ", "computing",
      " ", "the", " ", "dimensions"}], ",", " ", 
    RowBox[{
    "using", " ", "data", " ", "from", " ", "two", " ", "systems", " ", "of", 
     " ", "consecutive", " ", "size"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"tauqxloc", "[", 
     RowBox[{"int_", ",", "intN_", ",", "q_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Log", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"Total", "@", 
          RowBox[{"(", 
           RowBox[{"int", "^", "q"}], ")"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"Total", "@", 
          RowBox[{"(", 
           RowBox[{"intN", "^", "q"}], ")"}]}], ")"}]}], "]"}]}], "/", 
     RowBox[{"Log", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Length", "@", "int"}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"Length", "@", "intN"}], ")"}]}], "]"}]}]}], ";"}]}]], "Input",\

 CellChangeTimes->{{3.638596075723093*^9, 3.638596124392284*^9}}],

Cell[TextData[{
 "We compute the partition function ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SuperscriptBox[
      SubscriptBox["\[CapitalGamma]", 
       RowBox[{"\[Tau]", ",", "q"}]], "n"], "(", "i", ")"}], "=", 
    RowBox[{
     SubscriptBox["\[CapitalSigma]", "a"], 
     FractionBox[
      RowBox[{"|", 
       RowBox[{
        SuperscriptBox["\[Psi]", "n"], 
        RowBox[{"(", 
         RowBox[{"i", ",", "a"}], ")"}]}], 
       SuperscriptBox["|", 
        RowBox[{"2", "q"}]]}], 
      SuperscriptBox[
       RowBox[{"(", 
        SuperscriptBox[
         SubscriptBox["\[CapitalDelta]", "a"], "n"], ")"}], "\[Tau]"]]}]}], 
   TraditionalForm]]],
 ".\nWe define the local dimension of the wavefunctions:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{
      SubscriptBox["\[Tau]", "i"], "(", "q", ")"}], " ", "such", " ", "that", 
     " ", 
     RowBox[{
      SubscriptBox["lim", 
       RowBox[{"n", "\[Rule]", "\[Infinity]"}]], 
      FractionBox[
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[CapitalGamma]", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Tau]", "i"], "(", "q", ")"}], ",", "q"}]], 
         RowBox[{"n", "+", "1"}]], "(", "i", ")"}], 
       RowBox[{
        SuperscriptBox[
         SubscriptBox["\[CapitalGamma]", 
          RowBox[{
           RowBox[{
            SubscriptBox["\[Tau]", "i"], "(", "q", ")"}], ",", "q"}]], "n"], 
        "(", "i", ")"}]]}]}], "=", "1"}], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.6297819505151176`*^9, 3.629782150655591*^9}, {
  3.6303260562655563`*^9, 3.630326139818005*^9}, {3.630934477152502*^9, 
  3.630934567217009*^9}, {3.630934630673167*^9, 3.630934631297505*^9}, {
  3.6309354307593203`*^9, 3.630935667729848*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"compute", " ", "fractal", " ", "dimension", " ", 
     SubscriptBox["D", "q"], " ", "from", " ", "2", " ", "lists", " ", "of", 
     " ", "weights", " ", "and", " ", "box", " ", "lengths"}], ",", " ", 
    RowBox[{"using", " ", "the", " ", "thermodynamic", " ", "formalism"}]}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"PartD", "[", 
    RowBox[{
    "weights_", ",", "weightsN_", ",", "lengths_", ",", "lengthsN_", ",", 
     "q_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"gam", ",", "gamN", ",", "\[Tau]", ",", "\[Tau]0", ",", "q0"}], 
      "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"gam", "=", 
       RowBox[{"Plus", "@@", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", "weights", ")"}], "q0"], 
          SuperscriptBox[
           RowBox[{"(", "lengths", ")"}], 
           RowBox[{"-", "\[Tau]"}]]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"gamN", "=", 
       RowBox[{"Plus", "@@", 
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox[
           RowBox[{"(", "weightsN", ")"}], "q0"], 
          SuperscriptBox[
           RowBox[{"(", "lengthsN", ")"}], 
           RowBox[{"-", "\[Tau]"}]]}], ")"}]}]}], ";", "\[IndentingNewLine]", 
      
      RowBox[{"(*", " ", 
       SubscriptBox["D", "q"], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"\[Tau]0", "=", 
       RowBox[{"\[Tau]", "/.", 
        RowBox[{"FindRoot", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             FractionBox["gamN", "gam"], "/.", 
             RowBox[{"q0", "\[Rule]", "q"}]}], ")"}], "-", "1"}], ",", 
          RowBox[{"{", 
           RowBox[{"\[Tau]", ",", "0"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      FractionBox["\[Tau]0", 
       RowBox[{"q", "-", "1"}]]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.630997864395117*^9, 3.630997940972649*^9}, {
   3.630998058701036*^9, 3.630998151711904*^9}, {3.6309981817454863`*^9, 
   3.6309983368371696`*^9}, 3.630998958714292*^9, {3.630999209213921*^9, 
   3.630999246524372*^9}, {3.632048811113677*^9, 3.632048811171896*^9}, 
   3.632048900297194*^9}],

Cell[CellGroupData[{

Cell["Tree structure", "Subsubsection",
 CellChangeTimes->{{3.632042006415544*^9, 3.632042008959408*^9}, {
  3.6505334056990423`*^9, 3.6505334069834146`*^9}}],

Cell[TextData[{
 "After a renormalization step, a given site i of the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["n", "th"], TraditionalForm]]],
 " approximant becomes either molecular (in which case n becomes n-2) or \
atomic (n becomes n-3). \nWe can thus associate to each site a unique \
\[OpenCurlyDoubleQuote]renormalization path\[CloseCurlyDoubleQuote]: the \
sequence of molecular/atomic sites that has led to it, starting from the \
trivial ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     SubscriptBox["F", "n"], "=", "1"}], ")"}], TraditionalForm]]],
 " chain and inflating it.\n\nMore details in the \
\[OpenCurlyDoubleQuote]renormalization_path.nb\[CloseCurlyDoubleQuote] file."
}], "Text",
 CellChangeTimes->{{3.631365638464468*^9, 3.6313658553137217`*^9}, {
  3.631365896018684*^9, 3.6313659003057003`*^9}, {3.631426761322414*^9, 
  3.6314267847002087`*^9}},
 Background->RGBColor[0.94, 0.91, 0.88]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"take", " ", "a", " ", "renormalization", " ", "path", " ", 
     RowBox[{"(", "seq", ")"}]}], ",", " ", 
    RowBox[{"a", " ", "site", " ", "label", " ", 
     RowBox[{"(", "i", ")"}], " ", "and", " ", "an", " ", "approximant", " ", 
     "size", " ", 
     RowBox[{"(", "n", ")"}], " ", "and", " ", "return", " ", "the", " ", 
     "new", " ", "renormalization", " ", "path"}], ",", " ", 
    RowBox[{
    "the", " ", "new", " ", "site", " ", "label", " ", "and", " ", "the", " ",
      "new", " ", "size", " ", "after", " ", "one", " ", "renormalization", 
     " ", "group", " ", "operation"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ClearAll", "[", 
     RowBox[{"i", ",", "n"}], "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"iterSeq", "[", 
     RowBox[{"{", 
      RowBox[{"seq_", ",", "i_", ",", "n_"}], "}"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"inew", "=", "i"}], ",", 
        RowBox[{"seqn", "=", "seq"}], ",", 
        RowBox[{"nnew", "=", "n"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"i", ">", 
          RowBox[{"Fibonacci", "[", 
           RowBox[{"n", "-", "1"}], "]"}]}], ",", 
         RowBox[{
          RowBox[{"seqn", "=", 
           RowBox[{"\"\<m\>\"", "<>", "seq"}]}], ";", 
          RowBox[{"inew", "=", 
           RowBox[{"i", "-", 
            RowBox[{"Fibonacci", "[", 
             RowBox[{"n", "-", "1"}], "]"}]}]}], ";", 
          RowBox[{"nnew", "=", 
           RowBox[{"n", "-", "2"}]}], ";"}], ",", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"i", ">", 
            RowBox[{"Fibonacci", "[", 
             RowBox[{"n", "-", "2"}], "]"}]}], ",", 
           RowBox[{
            RowBox[{"seqn", "=", 
             RowBox[{"\"\<a\>\"", "<>", "seq"}]}], ";", 
            RowBox[{"inew", "=", 
             RowBox[{"i", "-", 
              RowBox[{"Fibonacci", "[", 
               RowBox[{"n", "-", "2"}], "]"}]}]}], ";", 
            RowBox[{"nnew", "=", 
             RowBox[{"n", "-", "3"}]}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"seqn", "=", 
             RowBox[{"\"\<m\>\"", "<>", "seq"}]}], ";", 
            RowBox[{"nnew", "=", 
             RowBox[{"n", "-", "2"}]}], ";"}]}], "]"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"seqn", ",", "inew", ",", "nnew"}], "}"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"false", " ", "when", " ", "n"}], "<", "3"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"test", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "\[GreaterEqual]", "3"}], "&"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"take", " ", "a", " ", "site", " ", 
      RowBox[{"(", "i", ")"}]}], ",", " ", 
     RowBox[{"a", " ", "size", " ", 
      RowBox[{"(", "n", ")"}], " ", "and", " ", "return", " ", "the", " ", 
      "renormalization", " ", "path", " ", "for", " ", "this", " ", 
      "site"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"path", "[", 
     RowBox[{"i_", ",", "n_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"NestWhile", "[", 
      RowBox[{"iterSeq", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<\>\"", ",", "i", ",", "n"}], "}"}], ",", "test"}], "]"}],
      "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "compute", " ", "the", " ", "relative", " ", "time", " ", "spent", " ", 
     "on", " ", "molecular", " ", "sites", " ", 
     RowBox[{"(", "x", ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"xPath", "[", 
     RowBox[{"i_", ",", "n_"}], "]"}], ":=", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{
       RowBox[{"StringCount", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"NestWhile", "[", 
           RowBox[{"iterSeq", ",", 
            RowBox[{"{", 
             RowBox[{"\"\<\>\"", ",", "i", ",", "n"}], "}"}], ",", "test"}], 
           "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}], ",", "\"\<m\>\""}], "]"}], "/", 
       "n"}]}], "}"}]}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"generate", " ", "the", " ", "whole", " ", 
     RowBox[{"(", "x", ")"}], " ", 
     RowBox[{"tree", "!"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"tree", "[", "n_", "]"}], ":=", 
    RowBox[{
     RowBox[{
      RowBox[{"xPath", "[", 
       RowBox[{"#", ",", "n"}], "]"}], "&"}], "/@", " ", 
     RowBox[{"Range", "[", 
      RowBox[{"Fibonacci", "[", "n", "]"}], "]"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.6313589574343977`*^9, 3.6313590302798233`*^9}, {
   3.631359076279845*^9, 3.6313593102066603`*^9}, {3.631359391471822*^9, 
   3.6313594047194157`*^9}, {3.6313594593282537`*^9, 3.631359462513579*^9}, {
   3.6313595010407*^9, 3.631359521955605*^9}, {3.631359596818037*^9, 
   3.631359606915451*^9}, {3.631359651491734*^9, 3.6313596831724777`*^9}, {
   3.6313634417688093`*^9, 3.631363482904171*^9}, {3.631364258193778*^9, 
   3.631364318864571*^9}, {3.6313647703411922`*^9, 3.63136477755731*^9}, {
   3.6313648216112947`*^9, 3.631364823625928*^9}, {3.631364880726359*^9, 
   3.631364887510838*^9}, {3.631364979383456*^9, 3.631365063114964*^9}, 
   3.631365189625307*^9, {3.631365920448059*^9, 3.6313659926244802`*^9}, {
   3.631426798788385*^9, 3.631426807777585*^9}, {3.631430687105792*^9, 
   3.631430691090613*^9}, 3.631516490573141*^9, {3.632049521570463*^9, 
   3.632049521680777*^9}, 3.632055040279293*^9, {3.6320551561537037`*^9, 
   3.632055177849278*^9}, {3.632055451480164*^9, 3.632055517600219*^9}, {
   3.632055616163237*^9, 3.632055618257159*^9}, {3.6320557064324903`*^9, 
   3.632055721461688*^9}, {3.651411367980667*^9, 3.651411368156102*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"paths", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"path", "[", 
     RowBox[{"#", ",", "n"}], "]"}], "&"}], "/@", 
   RowBox[{"Range", "[", 
    RowBox[{"Fibonacci", "[", "n", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.632049607276568*^9, 3.632049630389175*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"count", " ", "the", " ", "numbers", " ", 
    SubscriptBox["n", "A"], " ", "and", " ", 
    SubscriptBox["n", "M"]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"count", "[", "n_", "]"}], ":=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"StringCount", "@@@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"paths", "[", "n", "]"}], ",", "#"}], "}"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"\"\<m\>\"", ",", "\"\<a\>\""}], "}"}]}], ")"}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.651411239403208*^9, 3.651411320437634*^9}, {
  3.651411373654388*^9, 3.651411374613475*^9}, {3.6514114056223993`*^9, 
  3.651411653463367*^9}, {3.651411689447432*^9, 3.651411721094989*^9}, {
  3.6514117861820602`*^9, 3.651411801481333*^9}, {3.6514128745049753`*^9, 
  3.651412900313101*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"tree", "[", "7", "]"}], ",", 
   RowBox[{"Joined", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632049297283428*^9, 3.63204929744164*^9}, {
  3.632049360308915*^9, 3.632049372484646*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.012833333333333334`],
      AbsoluteThickness[1.6], 
     PointBox[{{1., 0.42857142857142855`}, {2., 0.42857142857142855`}, {3., 
      0.14285714285714285`}, {4., 0.42857142857142855`}, {5., 
      0.42857142857142855`}, {6., 0.14285714285714285`}, {7., 0.}, {8., 
      0.14285714285714285`}, {9., 0.42857142857142855`}, {10., 
      0.42857142857142855`}, {11., 0.14285714285714285`}, {12., 
      0.42857142857142855`}, {13., 0.42857142857142855`}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 13.}, {0, 0.42857142857142855`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.632049297740069*^9, 3.632049325836025*^9}, {
   3.632049360724947*^9, 3.632049372828106*^9}, 3.6354952898718863`*^9, 
   3.6367162329633923`*^9, 3.637655514205216*^9, 3.6385961663440237`*^9, 
   3.6386805216221533`*^9, 3.638781175783618*^9, 3.6467292638237267`*^9, 
   3.649498911451948*^9, 3.649670096403277*^9, 3.650533409629578*^9, 
   3.650718391633026*^9, 3.650777808838047*^9, 3.650860559104454*^9, 
   3.6514086683856792`*^9, 3.65141137091581*^9, 3.651903989900375*^9, 
   3.653985068483418*^9, 3.6567581779006357`*^9, 3.6567691985864573`*^9, 
   3.656824989131777*^9, 3.656851654025013*^9, 3.6571943575092773`*^9, 
   3.6572627842769213`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MapThread", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"2", "#1"}], "+", 
     RowBox[{"3", "#2"}]}], "&"}], ",", 
   RowBox[{"Transpose", "[", 
    RowBox[{"count", "[", "9", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.651412024051244*^9, 3.651412092486965*^9}, {
  3.6514121353360243`*^9, 3.651412159832211*^9}, {3.651412889784054*^9, 
  3.6514128913672037`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "8", ",", "8", ",", "7", ",", "8", ",", "8", ",", "7", ",", "8", ",", "7", 
   ",", "8", ",", "8", ",", "7", ",", "8", ",", "8", ",", "7", ",", "8", ",", 
   "7", ",", "8", ",", "8", ",", "7", ",", "8", ",", "7", ",", "8", ",", "8", 
   ",", "7", ",", "8", ",", "8", ",", "7", ",", "8", ",", "7", ",", "8", ",", 
   "8", ",", "7", ",", "8", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{{3.651412032695732*^9, 3.65141203540511*^9}, {
   3.6514120817363663`*^9, 3.651412092936001*^9}, {3.651412140803094*^9, 
   3.651412160818954*^9}, {3.651412879819468*^9, 3.651412902849704*^9}, 
   3.651903990074747*^9, 3.653985068818076*^9, 3.6567581779146757`*^9, 
   3.6567691985997*^9, 3.656824989163801*^9, 3.656851654086403*^9, 
   3.6571943575327463`*^9, 3.657262784293126*^9}]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Numerical tests: can we compute ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["D", 
    RowBox[{"+", "\[Infinity]"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " selecting only the largest component of the wavefunction?"
}], "Subsection",
 CellChangeTimes->{{3.6567604947375383`*^9, 3.656760520121619*^9}}],

Cell[TextData[{
 "Fix a system size, we want to compute ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["D", 
    RowBox[{"+", "\[Infinity]"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "(x) for several values of \[Rho], and then compare with the theoretical \
predictions.\n\nFirst, let us try to compute ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["D", "q"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " for increasing values of q, to see the convergence"
}], "Text",
 CellChangeTimes->{{3.656758273495674*^9, 3.656758312855749*^9}, {
  3.6567597581769238`*^9, 3.6567597861529417`*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "keep", " ", "at", " ", "least", " ", "one", " ", "processor", " ", "free",
     " ", "to", " ", "prevent", " ", "freeze"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"LaunchKernels", "[", "$ProcessorCount", "]"}], ";"}]}]], "Input",
 CellChangeTimes->{{3.651408733195664*^9, 3.6514087897483873`*^9}, {
  3.656759027032777*^9, 3.6567590365605593`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", "=", "17"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Rho]", "=", "0.15"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tol", "=", 
    SuperscriptBox["10", 
     RowBox[{"-", "14"}]]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"compute", " ", "wavefunctions", " ", "and", " ", "energies"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"val", ",", "vec"}], "}"}], "=", 
    RowBox[{"Eigensystem", "[", 
     RowBox[{"hp", "[", 
      RowBox[{"n", ",", "\[Rho]", ",", "1."}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "order", " ", "wavefunctions", " ", "by", " ", "increasing", " ", 
    "energy"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"vec", "=", 
    RowBox[{"vec", "[", 
     RowBox[{"[", 
      RowBox[{"Ordering", "[", "val", "]"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"drop", " ", "small", " ", "components"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"vec", "=", 
     RowBox[{"Chop", "[", 
      RowBox[{"vec", ",", "tol"}], "]"}]}], ";"}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"compute", " ", "x", " ", "for", " ", "each", " ", "site"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xlist", "=", 
    RowBox[{"tree", "[", 
     RowBox[{"n", "+", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"drop", " ", "the", " ", "site", " ", "labels"}], ",", " ", 
    RowBox[{
    "they", " ", "are", " ", "unecessary", " ", "as", " ", "x", " ", "is", 
     " ", "indexed", " ", "by", " ", "increasing", " ", "x", " ", "label"}]}],
    " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xlist", "=", 
    RowBox[{"Last", "@", 
     RowBox[{"(", 
      RowBox[{"Transpose", "[", "xlist", "]"}], ")"}]}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "list", " ", "all", " ", "possible", " ", "values", " ", "of", " ", "x"}], 
   " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"xvalues", "=", 
    RowBox[{"Sort", "@", 
     RowBox[{"DeleteDuplicates", "[", "xlist", "]"}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "list", " ", "all", " ", "positions", " ", "by", " ", "increasing", " ", 
    "value", " ", "of", " ", "x"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listPos", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"Position", "[", 
       RowBox[{"xlist", ",", "#"}], "]"}], "]"}], "&"}], "/@", "xvalues"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6376637410535107`*^9, 3.6376637612913322`*^9}, {
   3.637663903594638*^9, 3.637663904074048*^9}, {3.637664044065216*^9, 
   3.6376640443671303`*^9}, {3.638781296946495*^9, 3.6387812971536083`*^9}, {
   3.638781345298437*^9, 3.63878134803356*^9}, {3.649671679506936*^9, 
   3.649671679809421*^9}, 3.649672746111318*^9, {3.650533554503845*^9, 
   3.6505335545986958`*^9}, {3.650719857989237*^9, 3.650719859419755*^9}, {
   3.650719916441803*^9, 3.6507199166696*^9}, {3.6507199788689747`*^9, 
   3.650719979052927*^9}, {3.650860569022455*^9, 3.6508605693827963`*^9}, 
   3.6508627603366213`*^9, 3.650862815839922*^9, {3.6508632579523973`*^9, 
   3.650863258047233*^9}, {3.650877507081016*^9, 3.650877507302705*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"compute", " ", 
      SubscriptBox["D", 
       RowBox[{"+", "\[Infinity]"}]], " ", "brute"}], "-", 
     RowBox[{"force", " ", "style"}]}], ",", " ", 
    RowBox[{
     RowBox[{"ie", " ", "by", " ", "taking", " ", "some", " ", "q"}], " ", ">>",
      " ", "1"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"qRange", "=", 
     RowBox[{"Range", "[", 
      RowBox[{"0.1", ",", "100", ",", "1."}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     SubscriptBox["D", "q"], 
     RowBox[{"(", "0", ")"}], " ", "for", " ", "large", " ", "qs"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"wf0", "=", 
     RowBox[{"vec", "[", 
      RowBox[{"[", 
       RowBox[{"listPos", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Dq0", "=", 
     RowBox[{"ParallelMap", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"WfD", "[", 
         RowBox[{"wf0", ",", "#"}], "]"}], "&"}], ",", "qRange"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.65675826139824*^9, 3.656758267223871*^9}, {
   3.656758486711874*^9, 3.656758513216124*^9}, 3.656758946264366*^9, {
   3.656759134024499*^9, 3.656759147840493*^9}, {3.6567591912884893`*^9, 
   3.6567592970169477`*^9}, {3.6567593524651127`*^9, 3.656759375304862*^9}, {
   3.656759422169289*^9, 3.656759476272935*^9}, {3.656759685417183*^9, 
   3.656759685705052*^9}, {3.6567603052338543`*^9, 3.656760305521696*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Dq0", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6567593824723253`*^9, 3.6567593876967697`*^9}, {
  3.656759690353116*^9, 3.6567596954911013`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1yVtI0wEUx/ERQWKaI8pplFS0CpFwy8xabr/pbhlNGhF2B2Pp6MGhe1hr
pl1QY0YQZAg+7O4sWhoJlmUXMFdM03Cu1sM/t2pzQVmRWf1jFf3PgcPhc75r
qut0+gU8Hk/8d//d/zMrk3/PG9LNJ2XcA30hg/XJx4ec0zAelOb8fOPnzMeB
F0m9JcPHeRlSJbW7jO0ezjkQdDF+jcLNeSUyz+bdeW51cV4N3ilN1f05J+e1
ODESKa3rIK+DKSC9nNhNXg9v4bRVt5y8EeO/bZ9m4w7O+Uj7EXXee0wuwDQT
7/S7yJtwwxipPHKBXIgm556Wp/VkEU4ar9SIj5LFSDS+U6dryZtRMLj0dUxK
LkJWjZ41iMhbEOuPH9wvJBfDF4gusa4gb0VVJ455+eQSSHztl24vIm9DrnuA
bUvZOW8H0/qLTZ8nS/Bs7PCE8DN5B9gPLxMjSXIpvk3mV0TfkqXg7727qpYh
y5B1PlSpjZCBHq9daQtxbgbC5mZ79gR1ObLbwhkzQepydDX05bIB6mUoetUi
qBimXgat4yY7+oh6OQ51G7TnhqiXQ23ryDw+SF2BueQZb/0AdQVUC4UxTz91
JcYsZoa9RV0JkceSMvVSV+Fr0PF+sZ+6ClOKJuOD69TVOP2l+trFHupqDDeG
R03d1DUQYErS4KGuwaT7qrnVRX0n9hXPbOh12GV/AHU28uk=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 50.}, {0, 0.8428128922748571}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.656759388026494*^9, {3.656759423446603*^9, 3.656759477232699*^9}, {
   3.656759687759079*^9, 3.656759695804908*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    SubscriptBox["D", "q"], 
    RowBox[{"(", 
     RowBox[{"1", "/", "2"}], ")"}], " ", "for", " ", "large", " ", "qs"}], 
   " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"wfmol", "=", 
     RowBox[{"vec", "[", 
      RowBox[{"[", 
       RowBox[{"listPos", "[", 
        RowBox[{"[", 
         RowBox[{"-", "1"}], "]"}], "]"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"avWfD", "[", 
     RowBox[{"wfl_", ",", "q_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "dl", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"dl", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"WfD", "[", 
            RowBox[{"#", ",", "q"}], "]"}], "&"}], ",", "wfl"}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"Mean", "[", "dl", "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Dqmol", "=", 
     RowBox[{"ParallelMap", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"avWfD", "[", 
         RowBox[{"wfmol", ",", "#"}], "]"}], "&"}], ",", "qRange"}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6567594915287657`*^9, 3.656759505760977*^9}, {
  3.656759559024919*^9, 3.6567596324091253`*^9}, {3.656759703170062*^9, 
  3.6567597038411207`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"Dqmol", ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.656759656979443*^9, 3.6567596603610086`*^9}, {
  3.656759711156567*^9, 3.656759723291072*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1y31M1HUAx3EeHB4Jl7v8A5U0jBgk8WQRgScfDg7kQeSekTkSOCdIBIrH
QxYQD50gIJxCiUIqCcSsFmg8KUeSG0gyNTfCGoIaDw5BQEcJtmrd57d999vr
+/5+HOJT5XstzMzMtP+e//7/f0/8x2IW57LUM/6mC1zc1dTrL5wyWQDroFv1
adpJk1ejdfyytPMteg3cNKX9IlvaDuIgXcLEwoTJ9nDWprfpRujXsFF03PP9
AXoTjIP6HPNO2hHOd2y2WDbTThj5oMjX9RTtjP092huqMvpNZBqXRAl5tCsa
qoe14kO0G+qz5LidSHvgyui9l0WxtCem/fSJswraC3/M5hTHhtFbMD102VIV
QL+N+WrjR/0+9Dsot1rStXrQ3hj3PC9e5UK/i5r6I8Z+B9oHp4fPZU+uo99D
c6B1Utwa2he7z1gsuwlpP9QdOGYVIaC3QiW81d5qQYsxv/FhddyLcZO3oVs8
ckD2J+2PzcKWuNwFGphcHjBOzJicB4zqgzbpH7EHYG1SmSZmnD0AY3ZF8bH3
2SXw+300o2KEXQJv+7Fnj++yByJbF5x8aIg9EEMzuSUOd9iDYIi0cV24yR4E
QaN1+MQNdikCVs9aLF9nl6LXOaXMvY89GLL0g8i7xh6MKYGsdPoqewhsd1s+
P9jDHoLKFeUuom727XDv+PhmXxf7dqi6s9qrOthDMeC1eCWzjT0UtztfDKZc
Yg+D7evLUxmt7GFIaOqwN3zPHo7888qC7u/YwyHLUoQsfcMegdT8a3UhF9gj
UOuTPnCumX0HLkrs19l8zb4Dqd1Xx/Ib2SOR1WtRYNXAHolktW5f9VfsO1Fl
ucHcq559J9IS7/f/epY9Cl3LLwWWnDEZUVif/fNT6Zd8HwUryXDKqjqTe6Lg
Gvpccvc09zK4jX4rbDnFvQy+5r+kGWq4lyHzZLjw8EnuZfh0f3tF8hfcy2G5
YXNDwufcy6F0f2CWUM29HLMKoSapins51KKy+IwT3CsgEXeNFh/nXgG9zVZD
vYF7BZpP9Pv2VnKvgNOelWcnK7hXwntBU/4KDSVqrS4NBh7jXomY0BKP7HLu
ldj2iaGwtYx7FRQ//VA7X8q9CnV/zUZ503kqaOdcdDlHuVehONf5wfUS7tWw
dfpQt56GGsZIR0FaMfdq/PZsRXbfEe7V+PuCtNGRNtPgyb2C9EI99xq8Km0x
TnzGvQY1+1amRtI9GjR5P97bXsR9NNYenSt+g0Y0Hla2/VhVyH00Dts+eiqg
e6Kh2uNmk1vA/S64K+zmFvPH/f8Bb/TsSg==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.691258950999861},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 100.}, {0.7034873684775443, 0.9480557180312098}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6567596607200336`*^9, {3.65675971897184*^9, 3.656759723569523*^9}, 
   3.656760378915181*^9}]
}, Open  ]],

Cell[TextData[{
 "It seems that for both x = 0, 1/2 the q -> ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["D", "q"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " function converges nicely as q increases.\nNow, let us try to compute \
directly ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["D", 
    RowBox[{"+", "\[Infinity]"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " using that taking q -> \[Infinity] selects the largest component(s) of the \
wavefunction, and see if we get the correct asymptotic value."
}], "Text",
 CellChangeTimes->{{3.656759794504925*^9, 3.656759884705098*^9}},
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "select", " ", "the", " ", "largest", " ", "component", " ", "of", " ", 
     "the", " ", "x"}], "=", 
    RowBox[{"0", " ", "wavefunction"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"wf0max", "=", 
     RowBox[{"Max", "[", "wf0", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"compute", " ", "the", " ", "associated", " ", "exponent"}], " ", 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Dinf0", "=", 
     RowBox[{
      RowBox[{"-", "2"}], 
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{"Abs", "[", "wf0max", "]"}], "]"}], "/", 
       RowBox[{"Log", "[", 
        RowBox[{"Fibonacci", "[", 
         RowBox[{"n", "+", "2"}], "]"}], "]"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"Dq0", ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "Dinf0"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Max", "[", "qRange", "]"}], "+", "1"}], ",", "Dinf0"}], 
          "}"}]}], "}"}], "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.656760062188493*^9, 3.6567601122496967`*^9}, {
  3.6567601722736397`*^9, 3.6567602010585623`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.011000000000000001`],
      AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1yVtI0wEUx/ERQWKaI8pplFS0CpFwy8xabr/pbhlNGhF2B2Pp6MGhe1hr
pl1QY0YQZAg+7O4sWhoJlmUXMFdM03Cu1sM/t2pzQVmRWf1jFf3PgcPhc75r
qut0+gU8Hk/8d//d/zMrk3/PG9LNJ2XcA30hg/XJx4ec0zAelOb8fOPnzMeB
F0m9JcPHeRlSJbW7jO0ezjkQdDF+jcLNeSUyz+bdeW51cV4N3ilN1f05J+e1
ODESKa3rIK+DKSC9nNhNXg9v4bRVt5y8EeO/bZ9m4w7O+Uj7EXXee0wuwDQT
7/S7yJtwwxipPHKBXIgm556Wp/VkEU4ar9SIj5LFSDS+U6dryZtRMLj0dUxK
LkJWjZ41iMhbEOuPH9wvJBfDF4gusa4gb0VVJ455+eQSSHztl24vIm9DrnuA
bUvZOW8H0/qLTZ8nS/Bs7PCE8DN5B9gPLxMjSXIpvk3mV0TfkqXg7727qpYh
y5B1PlSpjZCBHq9daQtxbgbC5mZ79gR1ObLbwhkzQepydDX05bIB6mUoetUi
qBimXgat4yY7+oh6OQ51G7TnhqiXQ23ryDw+SF2BueQZb/0AdQVUC4UxTz91
JcYsZoa9RV0JkceSMvVSV+Fr0PF+sZ+6ClOKJuOD69TVOP2l+trFHupqDDeG
R03d1DUQYErS4KGuwaT7qrnVRX0n9hXPbOh12GV/AHU28uk=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->LineBox[{{0, 0.031822002285427566`}, {50.1, 0.031822002285427566`}}],
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 50.}, {0, 0.8428128922748571}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.656760204819757*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "select", " ", "the", " ", "largest", " ", "components", " ", "of", " ", 
     "the", " ", "x"}], "=", 
    RowBox[{
     RowBox[{"1", "/", "2"}], " ", "wavefunctions"}]}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"wfmolmax", "=", 
     RowBox[{"Max", "/@", "wfmol"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"compute", " ", "the", " ", "associated", " ", "exponents"}], " ",
     "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Dinfmols", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], 
        RowBox[{
         RowBox[{"Log", "[", 
          RowBox[{"Abs", "[", "#", "]"}], "]"}], "/", 
         RowBox[{"Log", "[", 
          RowBox[{"Fibonacci", "[", 
           RowBox[{"n", "+", "2"}], "]"}], "]"}]}]}], "&"}], "/@", 
      "wfmolmax"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"take", " ", "the", " ", "average"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Dinfmol", "=", 
     RowBox[{"Mean", "[", "Dinfmols", "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"Dqmol", ",", 
     RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
     RowBox[{"Epilog", "\[Rule]", 
      RowBox[{"Line", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "Dinfmol"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Max", "[", "qRange", "]"}], "+", "1"}], ",", "Dinfmol"}],
           "}"}]}], "}"}], "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.656760062188493*^9, 3.6567601122496967`*^9}, {
  3.6567601722736397`*^9, 3.656760280697681*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJw1y31M1HUAx3EeHB4Jl7v8A5U0jBgk8WQRgScfDg7kQeSekTkSOCdIBIrH
QxYQD50gIJxCiUIqCcSsFmg8KUeSG0gyNTfCGoIaDw5BQEcJtmrd57d999vr
+/5+HOJT5XstzMzMtP+e//7/f0/8x2IW57LUM/6mC1zc1dTrL5wyWQDroFv1
adpJk1ejdfyytPMteg3cNKX9IlvaDuIgXcLEwoTJ9nDWprfpRujXsFF03PP9
AXoTjIP6HPNO2hHOd2y2WDbTThj5oMjX9RTtjP092huqMvpNZBqXRAl5tCsa
qoe14kO0G+qz5LidSHvgyui9l0WxtCem/fSJswraC3/M5hTHhtFbMD102VIV
QL+N+WrjR/0+9Dsot1rStXrQ3hj3PC9e5UK/i5r6I8Z+B9oHp4fPZU+uo99D
c6B1Utwa2he7z1gsuwlpP9QdOGYVIaC3QiW81d5qQYsxv/FhddyLcZO3oVs8
ckD2J+2PzcKWuNwFGphcHjBOzJicB4zqgzbpH7EHYG1SmSZmnD0AY3ZF8bH3
2SXw+300o2KEXQJv+7Fnj++yByJbF5x8aIg9EEMzuSUOd9iDYIi0cV24yR4E
QaN1+MQNdikCVs9aLF9nl6LXOaXMvY89GLL0g8i7xh6MKYGsdPoqewhsd1s+
P9jDHoLKFeUuom727XDv+PhmXxf7dqi6s9qrOthDMeC1eCWzjT0UtztfDKZc
Yg+D7evLUxmt7GFIaOqwN3zPHo7888qC7u/YwyHLUoQsfcMegdT8a3UhF9gj
UOuTPnCumX0HLkrs19l8zb4Dqd1Xx/Ib2SOR1WtRYNXAHolktW5f9VfsO1Fl
ucHcq559J9IS7/f/epY9Cl3LLwWWnDEZUVif/fNT6Zd8HwUryXDKqjqTe6Lg
Gvpccvc09zK4jX4rbDnFvQy+5r+kGWq4lyHzZLjw8EnuZfh0f3tF8hfcy2G5
YXNDwufcy6F0f2CWUM29HLMKoSapins51KKy+IwT3CsgEXeNFh/nXgG9zVZD
vYF7BZpP9Pv2VnKvgNOelWcnK7hXwntBU/4KDSVqrS4NBh7jXomY0BKP7HLu
ldj2iaGwtYx7FRQ//VA7X8q9CnV/zUZ503kqaOdcdDlHuVehONf5wfUS7tWw
dfpQt56GGsZIR0FaMfdq/PZsRXbfEe7V+PuCtNGRNtPgyb2C9EI99xq8Km0x
TnzGvQY1+1amRtI9GjR5P97bXsR9NNYenSt+g0Y0Hla2/VhVyH00Dts+eiqg
e6Kh2uNmk1vA/S64K+zmFvPH/f8Bb/TsSg==
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.691258950999861},
  DisplayFunction->Identity,
  Epilog->LineBox[{{0, 0.7001903804865008}, {100.1, 0.7001903804865008}}],
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 100.}, {0.7034873684775443, 0.9480557180312098}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6567602813634863`*^9, 3.656760383875215*^9}]
}, Open  ]],

Cell[TextData[{
 "Conclusion:\nAlthough the convergence is very slow for the molecular \
states, the results compare well in both cases. We will chose the compute ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["D", 
    RowBox[{"+", "\[Infinity]"}]], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " using the \[OpenCurlyDoubleQuote]largest coefficient\
\[CloseCurlyDoubleQuote] method because it is much faster.\n\nRk: convergence \
is slow for molecular states, because these states have a lot of components \
of about the same amplitude."
}], "Text",
 CellChangeTimes->{{3.656759794504925*^9, 3.656759884705098*^9}, {
  3.6567604111695337`*^9, 3.6567604756255503`*^9}, {3.656760529537661*^9, 
  3.656760552313715*^9}},
 Background->GrayLevel[0.85]]
}, Closed]],

Cell[CellGroupData[{

Cell["Compare with theory, without finite-size corrections", "Subsection",
 CellChangeTimes->{{3.656760637009672*^9, 3.656760657162232*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"theoretical", " ", "expression"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Dinf", "[", 
    RowBox[{"\[Rho]_", ",", "x_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", " ", 
       RowBox[{"Log", "[", 
        RowBox[{"\[Lambda]", "[", "\[Rho]", "]"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", "x"}]}], ")"}], "/", "3"}], 
       RowBox[{"Log", "[", 
        RowBox[{"\[Lambda]b", "[", "\[Rho]", "]"}], "]"}]}]}], ")"}], "/", 
    RowBox[{"Log", "[", "\[Omega]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6567560074136467`*^9, 3.6567560654381323`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Dinflist", "[", "\[Rho]_", "]"}], ":=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Dinf", "[", 
      RowBox[{"\[Rho]", ",", "x"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "0.5", ",", "0.1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.656756102675733*^9, 3.65675612218194*^9}, {
  3.656756176726305*^9, 3.656756230510285*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Dinf", "[", 
      RowBox[{"\[Rho]", ",", "0"}], "]"}], ",", 
     RowBox[{"Dinf", "[", 
      RowBox[{"\[Rho]", ",", 
       RowBox[{"1", "/", "2"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", "\"\<\[Rho]\>\"", "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"st", "/@", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(D\), \(+\[Infinity]\)]\)(atom)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(D\), \(+\[Infinity]\)]\)(mol)\>\""}], 
      "}"}]}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", "comp"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<CMU Serif\>\""}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6567561239337053`*^9, 3.6567561472952213`*^9}, {
  3.656756248006296*^9, 3.65675631103848*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[2], 
        RGBColor[0.368417, 0.506779, 0.709798]], 
       LineBox[CompressedData["
1:eJwVjnk81AkDhx2tlEjlCJWj2BC1GR3KfF3ZSghDvDFLotxsWNdoXUlCmBQN
hXWu+84dMjNi3fG679y/Dsrbobf94/k8n8/z1yN9zc3YjouDgyP5B//6ot18
d+OCKflYO2nHA4XWs28KzK6Ni5GQfyaTphgYRBbh648uFdMBh1/UiXFaKvl5
faDzH3IGOCvfGxyYX0pWPi2UkSxGQduuk3ue016QOfYsxH+XtEBFMZ+2HeUV
uXu5LthGjgp24o15m/xespEtu8omwQaCloZUR9YQWa1LpShO7DoUGE84M2mT
5IPqKVnNDHsI7r7vxH1wjrwjl/fpmqQDKln/c9anLJHXRG4lyKY7Ic7hPVfT
3bfk0ZDRKDM5V/j0yDwxyf9Att1Ib2qmuGO/quDtYdFP5AFlC7JlggfYj0oL
LFifyY1PmlWjxDwxey/ah0HjBKnHp1j2qhfWXq1wdtRzI4dXWame4Q01T+ni
DRkexHk9PkRI+mJMaPNPTQofePL0n4Xb+KE9OyWVKi0AvymufVLp/uiW4fas
uSsIW0OXPUZygRh2237rUv4eDIbJxCzcuI3ZGwMG3RbCkBtz+ukF5U9MU/zr
ekVFkSQkHWSREASSrKqJEUscIUGRPvfEQsEcXix8RJNG/T77CrPqUMjnjN/s
SpTBRqXGmszVMJAaZJeY9QfhvLruVsO4A9fNOL0PMnKgXLW+sSwZAT3hC/5n
KIqI/qiWUdUYgd+d5QIdK46AFSs8HWpzD0GTkhfNpZWhzmqj7k+PxMDe1ANV
d49BTlXVzEAuGtddIpjn81Vg3bWTLs6Mhpp6r/PVIBKeOC12z92IgVKQv3eH
hSp4uzszGygPcDiDWdEpehIBW8NkzBNiodpqvHiJpYbrnoRYhBgdLkHV2x7S
NKHCHedX4k6H+sMZeoyIFrjiSMPDTDpObn1FSJRo4WmhL0PZ+yFOrSQLLb7V
xtAit2RfTwKCuIi9llG6MLTZe0jyfiL6hbM3EzQv4cDb6tDz04lIziwLLODW
x3Kg1ayHWhLuunt0XGHp4x4jLbNlPglsZ8br3ywM0TJwRN7xHAOV/Z5tMvpG
UDPQVC7fTMGgSXNv6SsKeEeno8dMn2JAL4/LQNMUA053iK35T/FU+73oL1Wm
qG6xM89XeobbcZrr3TlmMJ/KFeMYeQZ1K5pPIMMccftVGRmn0nB3q39kcIMl
eOkXUt+++wun7CW2SGxew5dTk19SxTPQdkaB7+h5W6yO+piZaGegr+Cle0+c
LXp/zuaroGfgpvnlK0z560ip4fH2P5mJ+GtXYxyodiBNN1/koWWhjm8mIWbq
BqyPk9ckeHOxm5alY2PmApOBfoOOY7mwiutdsi5xgW6AS06gRS7ywz+tEAKu
UGxlUCdzc2ETFslVy3bFR4svrEz9v+FQpE7iOeiO+0FVyb/E5yEp5w0HM88D
lV3Hf/31QCF2jfRGbPvoieiF5fNHdAvxx8VHKouKXrDnyrq4y7UQ0Zbr9Tuv
eUGEJGEwXFcIyemf/OQ7vVDzKii3UrkI34U2aY/yvCFx1LFY758iGCsvP7Xy
9MHQulrDLf4SBK7QdWNPBkCXa6+GvXQJyuyzx/i9A1AisN5orlqCZeFwk86y
ANz7ubBJ3aoEcUFveqRUaFCzONi6Nb8EV7JHZDaPByKxlq/jyaVS7D18c6VL
8k+Yh4wMNUeW4YSs2i5d3WAITsgduZFaBoE2z97XzsFgn/Wgba8sw2/7KcIP
4oOh9vEnKaOpMjy+bSgaMBkMCYejdmOnyuGpqrVT7XYIxgyCiY3ZcizVP8zQ
bwrFdfHDW5Q1KsGj+Jmzxz4cbsW3lB6vPYezhr+klnwUVs9O9rJ5q1G1+k6o
yCwKziwDvy/7qmEfla6lGRqFm+PyTOq5amSeSDnXMR4Fa/4Ja9mEaiSK7p+K
fByNyw6X6CUna7Ct62KSEe8DHJOW/dLuV4vPfx3dwYiKxfsHr1mcnA0Y/eBX
8qGdDtaL1obOs00YtL5TMcRkwMH3Ar/FcgscpnP201fT8GLb8e95LkxQ6LVC
RFUWMtNbNsVl25CvuBosGpoPDZG6NJOCdoi3quwMrSuGEnOkqlWhEzzSLdsL
l8rQp2GymrPaBcPOb68vZVXBebtTT/+xHvTfOlCpY1eLV4NX6gSie/G1Rslw
07IRJrrmkzMzfdiVbRme/bQJJ55FXnl26DWqX++9tzbYgonN+L6btweQ3Kak
d9OGidkLnekizYPQfyec5jrERlHiuG+39BBCZvz7BTPakXGXO0LebxiipCU3
4cBOrNv+Z9G+ZgRq39zI8Qe6wadzx7hYdAyJehJb7LN6ECA4u2PSchzxuU0p
VKk+7KhX5BjQn4DXHJu3Lakf6t6G35o/T+Al9RGXB3kAjL/upx9kTKLofcK5
Nx2DoJqSOrbpTYGvwE4i+c4Qyvvt4us/TiH445Yma/IITrcXcc0lTMPtSVE4
xkYhdc5+PV5nBqYyP08zM8ehSlKNLZubQTk7up6VO4Hx91Hs9LBZ5KmkXhi8
PYllFaMwseNzWBOxk56/OQW5JaVFzt45OIXxB0xoT6PlkFePe9AbdDgZ7c49
PoOYvn5b40PzkN92vrtx9ywIk8ZYrpZ5vP3ke/AyMYsSU2Ht0x4LSFKzopqO
zyG9IyR5avciFNpb/Rcb3uAT09J/d9MipElGU3Wl85iIbVgXdF3CZfY1mkv6
Aj52nxELFljGGnXp2+GQRbjTZRp9a5fRKE47xfZagmiHjOAMdQVm4anZp82X
YdKf93Xf5gp8zsQf4z+xgve/pTqP5K4iM2u14ne5VTRYF4YJXCIgxdaZduUh
UN3prDdmQEBdx07ZbDuBCrLCrgIjAv/dl+ahLkAgb18GQ/8KAf1yiwk+EQJJ
g0ml968REMo7QM2WJeB1+c7kdl8Cc2Eb/eM6BBQ1rNS3ZhKI1VOIOR9CQK5Q
nHsgmwD/zMse5XACMgcGWZl/E3icw+IXjiSw96sxRbeYgFbeisNkHAGeqvNO
YbUEtFMkqn3TCEweJSVy9xLgHCGXZ78gMJLyjtrbT8Bxs8Y5+iWBQf7CQ+mD
BFb4L0h4sgn8syRfpDVGwNadZoVuArVZksygBQJdUs+9+icIVImM3jdaJkD3
k5ytniFQGpZkLE0QyHjnqPdsnkCurfBY4xqBsI0nXx3f/ug9PekPPv34X/X+
9fKP/kzzgYP1ZwKm7dIRqhsEGEX6R499IxCt9+iF+FcCjyT51r9/J/Bdtuft
v/4/IAPHyw==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[2], 
        RGBColor[0.5450980392156862, 0.13725490196078433`, 0.]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Rho]\"", TraditionalForm], None}, AxesOrigin -> {0, 0}, 
     AxesStyle -> Directive[FontSize -> 15, FontFamily -> "CMU Serif"], 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 1}, {0., 0.9999999912086364}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(D\\), \\(+\[Infinity]\\)]\\)(atom)\"", 
        Directive[FontSize -> 20, FontFamily -> "CMU Serif"], StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(D\\), \\(+\[Infinity]\\)]\\)(mol)\"", 
        Directive[FontSize -> 20, FontFamily -> "CMU Serif"], StripOnInput -> 
        False]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.]], {
                    
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[
                    0.5450980392156862, 0.13725490196078433`, 0.]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3633986928104575, 0.09150326797385622, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5450980392156862, 0.13725490196078433, 0.]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.], 
                    Editable -> False, Selectable -> False]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.656756270357355*^9, 3.6567563117299023`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"numerics", "!"}], " ", "*)"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"return", " ", "the", " ", "eigenvectors"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"vecs", "[", 
     RowBox[{"n_", ",", "\[Rho]_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"val", ",", "vec"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"compute", " ", "wavefunctions", " ", "and", " ", "energies"}],
        " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"val", ",", "vec"}], "}"}], "=", 
        RowBox[{"Eigensystem", "[", 
         RowBox[{"hp", "[", 
          RowBox[{"n", ",", "\[Rho]", ",", "1."}], "]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", 
        RowBox[{
        "order", " ", "wavefunctions", " ", "by", " ", "increasing", " ", 
         "energy"}], "*)"}], "\[IndentingNewLine]", 
       RowBox[{"vec", "[", 
        RowBox[{"[", 
         RowBox[{"Ordering", "[", "val", "]"}], "]"}], "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "return", " ", "the", " ", "positions", " ", "ordered", " ", "by", " ", 
      "increasing", " ", "value", " ", "of", " ", "x"}], ",", " ", 
     RowBox[{
      RowBox[{"size", " ", "n"}], "+", "2"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"listPos", "[", "n_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"xlist", ",", " ", "xvalues", ",", " ", "listPos"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"compute", " ", "x", " ", "for", " ", "each", " ", "site"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xlist", "=", 
        RowBox[{"tree", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"drop", " ", "the", " ", "site", " ", "labels"}], ",", " ", 
         RowBox[{
         "they", " ", "are", " ", "unecessary", " ", "as", " ", "x", " ", 
          "is", " ", "indexed", " ", "by", " ", "increasing", " ", "x", " ", 
          "label"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"xlist", "=", 
        RowBox[{"Last", "@", 
         RowBox[{"(", 
          RowBox[{"Transpose", "[", "xlist", "]"}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "list", " ", "all", " ", "possible", " ", "values", " ", "of", " ", 
         "x"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"xvalues", "=", 
        RowBox[{"Sort", "@", 
         RowBox[{"DeleteDuplicates", "[", "xlist", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "list", " ", "all", " ", "positions", " ", "by", " ", "increasing", 
         " ", "value", " ", "of", " ", "x"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"listPos", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Position", "[", 
            RowBox[{"xlist", ",", "#"}], "]"}], "]"}], "&"}], "/@", 
         "xvalues"}]}], ";", "\[IndentingNewLine]", "listPos"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"returns", " ", "the", " ", "average", " ", 
     SubscriptBox["D", 
      RowBox[{"+", "\[Infinity]"}]], " ", "for", " ", "a", " ", "list", " ", 
     "of", " ", "wavefunctions"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dinf", "[", 
     RowBox[{"wfs_", ",", " ", "n_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"wfsmax", ",", " ", "dinfs"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "select", " ", "the", " ", "largest", " ", "component", " ", "for", 
        " ", "each", " ", "wf"}], " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"wfsmax", "=", 
        RowBox[{"Max", "/@", 
         RowBox[{"Abs", "[", "wfs", "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"compute", " ", "the", " ", "associated", " ", "exponents"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"dinfs", "=", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "2"}], 
           RowBox[{
            RowBox[{"Log", "[", 
             RowBox[{"Abs", "[", "#", "]"}], "]"}], "/", 
            RowBox[{"Log", "[", 
             RowBox[{"Fibonacci", "[", 
              RowBox[{"n", "+", "2"}], "]"}], "]"}]}]}], "&"}], "/@", 
         "wfsmax"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"Mean", "[", "dinfs", "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.656760685860655*^9, 3.656760713497891*^9}, {
   3.656760751978684*^9, 3.656760864780663*^9}, 3.6567609091786823`*^9, {
   3.6567609520346413`*^9, 3.656761033762638*^9}, {3.656761184506638*^9, 
   3.6567612701066723`*^9}, {3.6567613190833263`*^9, 
   3.6567613195547113`*^9}, {3.656762337013874*^9, 3.656762349059492*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "17"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"list", " ", "all", " ", "positions"}], ",", " ", 
    RowBox[{
    "sorted", " ", "by", " ", "increasing", " ", "value", " ", "of", " ", 
     "x"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pos", "=", 
    RowBox[{"listPos", "[", "n", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"iterate", " ", "over", " ", "\[Rho]"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]Range", "=", 
    RowBox[{"Range", "[", 
     RowBox[{"0.01", ",", "1.01", ",", "0.1"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "compute", " ", "the", " ", "wf", " ", "for", " ", "each", " ", "value", 
    " ", "of", " ", "\[Rho]"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wfs", "=", 
    RowBox[{"ParallelMap", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"vecs", "[", 
        RowBox[{"n", ",", "#"}], "]"}], "&"}], ",", "\[Rho]Range"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"x", "=", 
    RowBox[{"0", " ", "wfs"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wfs0", "=", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"wfs", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "wfs", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"x", "=", 
    RowBox[{
     RowBox[{"1", "/", "2"}], " ", "wfs"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wfsMol", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"wfs", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", 
        RowBox[{"pos", "[", 
         RowBox[{"[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "wfs", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.656760918555667*^9, 3.656760938874062*^9}, {
  3.6567610701061583`*^9, 3.656761143370266*^9}, {3.656761521690754*^9, 
  3.656761558330723*^9}, {3.6567616996826353`*^9, 3.656761733550178*^9}, {
  3.656761789786869*^9, 3.6567617993389263`*^9}, {3.656761895027584*^9, 
  3.656761909738965*^9}, {3.656761969083329*^9, 3.656762020819199*^9}, {
  3.656762199403473*^9, 3.6567622029713087`*^9}, {3.656762380267499*^9, 
  3.656762394283513*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"dinfs", " ", "x"}], "=", "0"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"d0s", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"dinf", "[", 
        RowBox[{"#", ",", "n"}], "]"}], "&"}], "/@", "wfs0"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"dinfs", " ", "x"}], "=", 
     RowBox[{"1", "/", "2"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dMols", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"dinf", "[", 
        RowBox[{"#", ",", "n"}], "]"}], "&"}], "/@", "wfsMol"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.656762033436082*^9, 3.656762079139113*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"glue", "[", 
    RowBox[{"l1_", ",", "l2_"}], "]"}], ":=", 
   RowBox[{"MapThread", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
     RowBox[{"{", 
      RowBox[{"l1", ",", "l2"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.656762112669701*^9, 3.6567621306990757`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Dinf", "[", 
      RowBox[{"\[Rho]", ",", "0"}], "]"}], ",", 
     RowBox[{"Dinf", "[", 
      RowBox[{"\[Rho]", ",", 
       RowBox[{"1", "/", "2"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Point", "[", 
        RowBox[{"glue", "[", 
         RowBox[{"\[Rho]Range", ",", "#"}], "]"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"d0s", ",", "dMols"}], "}"}]}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.656762084813036*^9, 3.656762175715067*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVjnk81AkDhx2tlEjlCJWj2BC1GR3KfF3ZSghDvDFLotxsWNdoXUlCmBQN
hXWu+84dMjNi3fG679y/Dsrbobf94/k8n8/z1yN9zc3YjouDgyP5B//6ot18
d+OCKflYO2nHA4XWs28KzK6Ni5GQfyaTphgYRBbh648uFdMBh1/UiXFaKvl5
faDzH3IGOCvfGxyYX0pWPi2UkSxGQduuk3ue016QOfYsxH+XtEBFMZ+2HeUV
uXu5LthGjgp24o15m/xespEtu8omwQaCloZUR9YQWa1LpShO7DoUGE84M2mT
5IPqKVnNDHsI7r7vxH1wjrwjl/fpmqQDKln/c9anLJHXRG4lyKY7Ic7hPVfT
3bfk0ZDRKDM5V/j0yDwxyf9Att1Ib2qmuGO/quDtYdFP5AFlC7JlggfYj0oL
LFifyY1PmlWjxDwxey/ah0HjBKnHp1j2qhfWXq1wdtRzI4dXWame4Q01T+ni
DRkexHk9PkRI+mJMaPNPTQofePL0n4Xb+KE9OyWVKi0AvymufVLp/uiW4fas
uSsIW0OXPUZygRh2237rUv4eDIbJxCzcuI3ZGwMG3RbCkBtz+ukF5U9MU/zr
ekVFkSQkHWSREASSrKqJEUscIUGRPvfEQsEcXix8RJNG/T77CrPqUMjnjN/s
SpTBRqXGmszVMJAaZJeY9QfhvLruVsO4A9fNOL0PMnKgXLW+sSwZAT3hC/5n
KIqI/qiWUdUYgd+d5QIdK46AFSs8HWpzD0GTkhfNpZWhzmqj7k+PxMDe1ANV
d49BTlXVzEAuGtddIpjn81Vg3bWTLs6Mhpp6r/PVIBKeOC12z92IgVKQv3eH
hSp4uzszGygPcDiDWdEpehIBW8NkzBNiodpqvHiJpYbrnoRYhBgdLkHV2x7S
NKHCHedX4k6H+sMZeoyIFrjiSMPDTDpObn1FSJRo4WmhL0PZ+yFOrSQLLb7V
xtAit2RfTwKCuIi9llG6MLTZe0jyfiL6hbM3EzQv4cDb6tDz04lIziwLLODW
x3Kg1ayHWhLuunt0XGHp4x4jLbNlPglsZ8br3ywM0TJwRN7xHAOV/Z5tMvpG
UDPQVC7fTMGgSXNv6SsKeEeno8dMn2JAL4/LQNMUA053iK35T/FU+73oL1Wm
qG6xM89XeobbcZrr3TlmMJ/KFeMYeQZ1K5pPIMMccftVGRmn0nB3q39kcIMl
eOkXUt+++wun7CW2SGxew5dTk19SxTPQdkaB7+h5W6yO+piZaGegr+Cle0+c
LXp/zuaroGfgpvnlK0z560ip4fH2P5mJ+GtXYxyodiBNN1/koWWhjm8mIWbq
BqyPk9ckeHOxm5alY2PmApOBfoOOY7mwiutdsi5xgW6AS06gRS7ywz+tEAKu
UGxlUCdzc2ETFslVy3bFR4svrEz9v+FQpE7iOeiO+0FVyb/E5yEp5w0HM88D
lV3Hf/31QCF2jfRGbPvoieiF5fNHdAvxx8VHKouKXrDnyrq4y7UQ0Zbr9Tuv
eUGEJGEwXFcIyemf/OQ7vVDzKii3UrkI34U2aY/yvCFx1LFY758iGCsvP7Xy
9MHQulrDLf4SBK7QdWNPBkCXa6+GvXQJyuyzx/i9A1AisN5orlqCZeFwk86y
ANz7ubBJ3aoEcUFveqRUaFCzONi6Nb8EV7JHZDaPByKxlq/jyaVS7D18c6VL
8k+Yh4wMNUeW4YSs2i5d3WAITsgduZFaBoE2z97XzsFgn/Wgba8sw2/7KcIP
4oOh9vEnKaOpMjy+bSgaMBkMCYejdmOnyuGpqrVT7XYIxgyCiY3ZcizVP8zQ
bwrFdfHDW5Q1KsGj+Jmzxz4cbsW3lB6vPYezhr+klnwUVs9O9rJ5q1G1+k6o
yCwKziwDvy/7qmEfla6lGRqFm+PyTOq5amSeSDnXMR4Fa/4Ja9mEaiSK7p+K
fByNyw6X6CUna7Ct62KSEe8DHJOW/dLuV4vPfx3dwYiKxfsHr1mcnA0Y/eBX
8qGdDtaL1obOs00YtL5TMcRkwMH3Ar/FcgscpnP201fT8GLb8e95LkxQ6LVC
RFUWMtNbNsVl25CvuBosGpoPDZG6NJOCdoi3quwMrSuGEnOkqlWhEzzSLdsL
l8rQp2GymrPaBcPOb68vZVXBebtTT/+xHvTfOlCpY1eLV4NX6gSie/G1Rslw
07IRJrrmkzMzfdiVbRme/bQJJ55FXnl26DWqX++9tzbYgonN+L6btweQ3Kak
d9OGidkLnekizYPQfyec5jrERlHiuG+39BBCZvz7BTPakXGXO0LebxiipCU3
4cBOrNv+Z9G+ZgRq39zI8Qe6wadzx7hYdAyJehJb7LN6ECA4u2PSchzxuU0p
VKk+7KhX5BjQn4DXHJu3Lakf6t6G35o/T+Al9RGXB3kAjL/upx9kTKLofcK5
Nx2DoJqSOrbpTYGvwE4i+c4Qyvvt4us/TiH445Yma/IITrcXcc0lTMPtSVE4
xkYhdc5+PV5nBqYyP08zM8ehSlKNLZubQTk7up6VO4Hx91Hs9LBZ5KmkXhi8
PYllFaMwseNzWBOxk56/OQW5JaVFzt45OIXxB0xoT6PlkFePe9AbdDgZ7c49
PoOYvn5b40PzkN92vrtx9ywIk8ZYrpZ5vP3ke/AyMYsSU2Ht0x4LSFKzopqO
zyG9IyR5avciFNpb/Rcb3uAT09J/d9MipElGU3Wl85iIbVgXdF3CZfY1mkv6
Aj52nxELFljGGnXp2+GQRbjTZRp9a5fRKE47xfZagmiHjOAMdQVm4anZp82X
YdKf93Xf5gp8zsQf4z+xgve/pTqP5K4iM2u14ne5VTRYF4YJXCIgxdaZduUh
UN3prDdmQEBdx07ZbDuBCrLCrgIjAv/dl+ahLkAgb18GQ/8KAf1yiwk+EQJJ
g0ml968REMo7QM2WJeB1+c7kdl8Cc2Eb/eM6BBQ1rNS3ZhKI1VOIOR9CQK5Q
nHsgmwD/zMse5XACMgcGWZl/E3icw+IXjiSw96sxRbeYgFbeisNkHAGeqvNO
YbUEtFMkqn3TCEweJSVy9xLgHCGXZ78gMJLyjtrbT8Bxs8Y5+iWBQf7CQ+mD
BFb4L0h4sgn8syRfpDVGwNadZoVuArVZksygBQJdUs+9+icIVImM3jdaJkD3
k5ytniFQGpZkLE0QyHjnqPdsnkCurfBY4xqBsI0nXx3f/ug9PekPPv34X/X+
9fKP/kzzgYP1ZwKm7dIRqhsEGEX6R499IxCt9+iF+FcCjyT51r9/J/Bdtuft
v/4/IAPHyw==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    PointBox[{{0.01, 0.04191143644753741}, {0.11, 0.017246123305226357`}, {
     0.21000000000000002`, 0.061450306929991275`}, {0.31000000000000005`, 
     0.1296973693351017}, {0.41000000000000003`, 0.2179224017322336}, {0.51, 
     0.3212956871717131}, {0.6100000000000001, 0.43499340785632307`}, {
     0.7100000000000001, 0.5550385697314755}, {0.81, 0.6785989186277547}, {
     0.91, 0.8038078792923666}, {1.01, 0.9053510541041907}}], 
    PointBox[{{0.01, 0.5775520134137154}, {0.11, 0.7069326509548999}, {
     0.21000000000000002`, 0.6874438818659917}, {0.31000000000000005`, 
     0.6826927558379781}, {0.41000000000000003`, 0.6904045928684241}, {0.51, 
     0.708366692437817}, {0.6100000000000001, 0.7327297076415394}, {
     0.7100000000000001, 0.7634814368284047}, {0.81, 0.7993944763299414}, {
     0.91, 0.8452742100502961}, {1.01, 0.9030759738816068}}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0., 0.9999999912086364}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.656762176589758*^9, 3.6567622075441017`*^9}, {
   3.6567623551502333`*^9, 3.656762382982121*^9}, 3.6567624812655573`*^9, 
   3.656765200417157*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"wfs0", "[", 
    RowBox[{"[", "1", "]"}], "]"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.656762251505426*^9, 3.6567623039877157`*^9}, 
   3.6567633101805897`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.004583333333333334], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
xMMMH+VOhcmEbz48zDuedvG53SfZfP152Dn6QhftJYQfQTx0NNYaX8ghfAvj
wd68LmxYE7u/gAf3TrrfO30gfIvhIShq1p85kyi+TpCOb/+KLykifztFKq/1
drcmvKbzC65UXo4L/91o85Q983kw0/+ZZW94ivxlHozbNif/C6N8iFweCkM/
Pc82ovuJ8nkY0XPYkNf3ib8u5GEavyov9+E+Ok/h4aegU6dx6+7I2g9I9W3L
r+OVTaay7ynlIarLidHmjN8r40GnTunPoPG9Ze3lPBQkBio2f6H8nwoenKr6
mmix+5mqeFj5kGM97SHFB9U8BMRlLNBSoPigRqqvTg0edQtI/nXS7+ll2XdW
EJ3v1EvtheeouXoD+dt3pesd3tw0ZSXl/zTw0KNHru/FERQfNPKwJO/2pSb7
D7L3S6T2MfWKRj8WvzXxkKVjZ2DWl+K3Zh5eqC/jWCwn/f/Aw3fbssfZYorf
WngQBq+6Lb8/q5WHZz8Upixk+T/tPPSOGnLtBovfOniIb1fI09Zn+T+ZsD9b
u+ahEsVvSpkIO+uuUzKU/HmVTHxyunK6/hyz/0w4HH982Y3FbxqZkP454caQ
BNn5gmYmqp0bN/5i8bVWJg67Jua8ZfyoTiacej6uqGf8qG4muj9WG/SK8aP6
meAvGbzsLeNHDTLh4ebsHsT4UaNMnNKLGyznR00zofs426uc8aPm0v7muTOj
GT9qkSn115cc28r4UctMcGZNd3Jg/CgyYVA6Yfkexo/aZMJ7s7ryZWPiR20z
oVo3Iu4040fnZ+Kl2v7dY8cSP2qfiUV5JjesYui8xiETenWTnaJYPZOj9Ps3
OFrdiyJ+1CUT2srtCu2MH3XNRM8BL0QvGT/qlgnlnwWLRs6i8y+PTETmLRz2
ahTxo5uk6zdYsHD7a+JHfTLRReOsnegI8aP+mRBzU8y+96L1C8rE9Belth4i
4kfDMjFDMVVp8yXiRzmZMH5kuPffHuJHYzIxp+d3bnvtIjoPycStXkvGW/4k
fjRFuv6fVlv/DmD8aCbSZnl6RakSP8rPhPqtYNM3b8aS/f+nH5Lhnxk/mpuJ
CbGjDR8xfjQ/E4f+WH+bpU78aGEmfM+07bn5ms6PizMxr2Kt86EZdH58IBNN
J0tVuyXR+XFpJqZcuPZEXUz8aJl0vuknB807yPJtM2Fb4dYnjvGjFZk463a2
+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
BoI/rzgB87s9+teY+Ue/JKDVT2WGpQmNh2Xk+IUu2Sdm0vYpT0C7xeanK0Ko
f7QiASs0xYZS5h80kaBSNTk2iPlHq0uw/ED+0e7MP2oqQXTx1pC3ybR9aknQ
7HWY+RIR9Y+aSXBmlLPz4np0fNeVYGF799HbfOj7h7kEA2e2nmfB/KMNJHBp
u2Ib909aSPDNLcj+rInOuN1Ygq3OJ2dvrE/9o00lMJm69f3fM9Q/2lyCSLuM
N5nNqX/UUoLPd3qP/DiT6petyPk6hGxu1Z36R60kSGjewnx9Pfr+0VaCWxmp
gn+0vQR9OprJ2r/pYHye1hJMbRpgE3GLvo/bSGDxyu3m/isPjMfvLMG/Ghcm
jWhmRtcnEiTZl2/7fpten60EuiuZ7+uX5NH3FQn+tntcON6Nrld6SXCj1xen
iIctjOezk6DkScL1pAV0/WYvQXKtCp1ld/r8HCRQBOi7rX3hYdzfX4KhrYou
JrYYYvz7gRJktt36dwbz9zpKYLa8VT/xQLp+GyJBk85Wbgl2dP3mJEHAyFNT
zOZMo7xqCd6HYeG7Kd7G44+Q4JKoZ6zpGNp/RpG/T1l25e7uGcbfj5Hg4KRe
w+rVYP5oCQbFD11z5nQn4/Z4CU4sX99nws0nxm0XCbz6HrTZYqDHd5XA9MG9
PYt3p1L9VILZXxdYJu1UGo/vLkFHiWwj9197SHCg4y1H9YsPxv2eEnQd5FPr
ZJiB+qsluPD25IaZDleN29Ml6N39euDW59eNf+8tweOxdi1HWtHx7SPBmuTD
3d5rM6j/WoLp7eZ69L+SZvz9XAn8C24J/vP5ElhvDLtZazttH18JaiwOSJty
7hOdnyWoWLnl2hoRbR9/CT51/9rZNhPG4wdIIH0lf9yI+eOXSvC84aO81W1o
+wRKsPvPn+MBDrR9giRY/CItfZjldON2sATDt/sPet9qtvH4IRLMU5S/u6Sh
7RMqwf0D1l2bHvM2/j6M9FdF/0/yxvT5hUtwfOpqH14fIEKCzdZXvNY5NzXu
j5SgV2WrlQ//XjMeb4MEk8NPlYpHmxj3R0mgnOL8sLJHHeP2Zgne9t6R0YTV
L9hK7ndjWM1CmY3x/NslGHlgwYHAS7k0XkjQLuLotEmDio3buyRIS5wWI86k
9RFiJEiMU50Lmd7NuH+vBO7XWq24u5zGt/3kfn2HpLx7TuPbQQmyD2yu1EbQ
+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
DpAwffSHFE39XnVayPTRchLvZMP7bmb66G8p0nbHNF3P9NEKKQyNTZvmMX20
Uoo+UXkmXB81kWHNcYnfe6aPVpfh4v29DlwfNZWha95yJ66P1pLhhLNnGtdH
zWQoNZs2kuujdWWYsvyHoI+ayzD0gt1nro82IL8/7f3/+mHG31vIELb7Vw7X
RxvL8OlBjSKujzaVIXHkvkyujzaXocTCsJ7ro5YyXLvXdwbXR1vJsKhI1Zvr
o1Yy6HOyBH20rQwP3s8V9NH2MtyJWy/oo9YyNLrX6wfXR21kiLzsJuijnWWQ
60wFfbSrDEvKXgr6qK0M/TanCfpoDxmOnFkv6KO9ZFibWk/QR+1keOSSI+ij
9jKsKlUK+qiDDKJXh/tzfbS/DDPPLn7I9dGBMvTdWtie66OOMlisGdaP66ND
yPN6kj6d66NOMtxv1G8U10chQ8tlPo24PjpChijHP5+4PjpKhuJ+rQV9dIwM
fiNmrhP0URk69uv7H9dHx8sw99c6QR91kSFo4dpfXB91lUHTrMs5Xh/ATQYb
l6cj/Zg+6i6DZbR/LNdHPWR4tq/GiQqmj3rKoPD73Smb6aNeMnzudnNqCtNH
p8sQXevC4jZMH/WWYV6mpg3XR31k2F1v6zZ7po/OlmH/8Y6N13Wj8W2uDG0e
+2e2dqT66HzSfi4eFy660PjmK4N4fe9Vbkwf9SPPv2O6qBbTR/1lWO+wDkHr
qT4aIMPChIo7GUwfXSpDt5B5iho96f0HyvC1bOLXGBbfgmQYbr02vQPTR4PJ
9doPdK7P9NEQGVqVmZ66yfTRUBnMLPvf5/X9w2RoEdDONIvpo+Ey/EpcOfQ1
00cjyPPZZF9pwuJbpAzH9h5+3Y7poxtkOD81PDiS6aNRMiiz6gYfZfroZnK+
0j0NLzF9dCu53rSpmZla2j+3k/E7Y7OY66PRMqxYeX8010d3ydB0wdQoro/G
kPsx91nG9dG9ZLxXDKvH64vsl+FmPduzXB89SPZf2GfN41usDN9qPOrF9dEj
MjTL/3Kc66MiGex6hiZwfVRM5ocIn/FcH5WQ+WqN3JXrozIZnMP/3OH8CYUM
vw+eP/iQ6aMqGSSH3k0Yy/RRjQztVj+O+cr0UZ0M5UPiTx1h+qhBho+e5dNn
MH00UYY9pbYffVh8SyLz14AVtbk+mkza22ZRa1Omj54k/V93107E9NHTMhRY
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
vDza6grja5uqcSUgexLna9dSw7qa4fRtVj/eTI26Qa8GbGf513XVCC1Jb875
2uZq/J0TfIPztRuo4eG3VuBrW6iRfrx9MOdrN1ZjR7TNfc7XbqrG4LgBazlf
u7kaN8T6CgNbv1mq8bZuTyXPP2+lRp3I2xc5X9tKDfdF0oecr92W3N+f1/mc
r91ejffBV9rz+vHWaphkf2395DHNj7dRI+TfGIGv3VmNIfurCXztrmrssxom
8LVt1ah+e+kgztfuocbDH28FvnYvNfJ/Wgt8bTs1StwmbeZ8bXs1RjjbCnxt
BzWej/u3hPO1+6vx65BlIudrD1RD0trkB+drO6oxReEzkfO1h6gx33zQAM7X
dlKjWYMeIZyvDdJ++y7cmsH42iPUaFVxzZPztUepcW98naGcrz1GDYvIXl6c
r+2shupIeQLna49Xw9alURLna7uQ9hu66ir3b7iqcSbpyCDO13ZTw7v2spuc
r+2uxtodtgGcr+2hRg3vNmacr+2pxsGSgWc5X9tLjb4FHjGcrz1djdGiwmXD
GV/bW42agw+0Hsj42j5qLBx2bXYy42vPViOlZHNMT8bXnqvGGMdThzhfe74a
6/ST9CXvKV/bl/SPwIeZnK/tR86X0vEa52v7q+Gz6o5sBuNrB6hR+u7CIs7X
XqrGRadj/zhfO5Dsv1MUyvnaQWp4uS924nztYNL+6+RmIYyvHULGU2VELe4v
ClVj0qLGAl87TI2XDfQvOV87XA37Wn0EvnaEGkv8n23hfO1INR60SBP42hvU
+GRjJfC1o9Q4fzfrBudrb1Zjpq+7wNfeSu63b0+Br72djLf1jh04Xztajd6j
ywS+9i41HIb6CnztGDU+ul4Q/F97yfVtqMLX3q/GYY8qfO2D5H6eVOFrx5L2
fx4g8LWPqFFZowpfW6SG79IqfG2xGrNMq/C1JWq0f/RF4GvLyPwSW4WvrVDj
kWKVwNdWqSFKr8LX1qjR4oFO4GvryPO08Bf42gY1VjTyEPjaiaR9Jmxw4Hzt
JDXe7aol8LWTyXi8OHs+52ufVGPaK90gztc+rYbZhS4CX/usGgcaXxX42ufV
2OvvJfC1U9TI/GIt8LUvkfE/obrA104l1//cQuBrp6kx8vEega+drsYWUx9n
ztfOUOPYwpsCXztTjTyPoDzO185So127yQ04XztbjdSZU2dzvvZtNQyujnac
r52jRsCioR05X/semX9i/+ScZXztB2Q+tV8l8LVz1VhZa3UVvjbpr9tmrOJ8
7aekfZbeFPjaeWS+nNZL4Gu/IO2x5fxPztfOV2OqJFvga79WI/ZdP4GvXaCG
rKmXwNcuJO21vApfu0iNVaHDBb72B3K8aVX42sXkedSrwtcuIdezsgpf+wu5
X98qfO1SNRb8sxb42mVqDHeswtf+QeKJQxW+drka/V/dFPjav8n4G1yFr11B
2m98a4GvXamGtNpDwd9sokFxVb52dQ2uLq7C1zbVYHVVvnYtDXTNq/C1zTQw
VOVr19XgaFW+trkGzu2r8LUbaDCpKl/bQoODrlX42o01mHGkCl+7qQZzq/K1
m2twdlMVvralBjuanxf42q002K2vwte20mB70TKBr91Wg6W7q/C122vQ8FUV
vra1Bp97rBf42jYa9FxSha/dWYNGDRsKfO2uGlyqV4WvbatBlmMVvnYPDQ6Y
1xT42r00uHi9Cl/bjhyvfhW+tr0GQZ2jBb62gwbxrdwFvnZ/DeY0/vWV87UH
atD2TxW+tqMGqiyDwNceosExvwXrOF/bSYN3w38JfG1oYFqwvDHna4/QIGnD
BqE+wigNwu2GneN87TEa7MtIiuV8bWcNHsy//Jrztcdr0DIzxZbztV002Gu5
4xjna7tqsOrXz0mcr+2mgVlH3xGcr+2ugX9FzUheH8KDXL9LnMDX9tSgZntf
ga/tRZ7//n9KzteerkGi5Mt5ztf21iB3UnOBr+2jQaelewW+9mwNuv4KFfja
czVI94PA156vwSeHY7Gcr+1Ljv9n9TXO1/Yj7YNCga/tr4HscEOBrx2gwfQB
jkL9jqUa6B9W4WsHavDM64TA1w7SwGpsFb52sAbjBk0R+NohZLwMcRf42qGk
vR9W4WuHkfH7a7LA1w4n/WVdFb52hAZ3d1Tha0dqcD29hcDX3qDBt9wqfO0o
Dep22SfwtTdroM7Zvpzztbdq0GPFAoGvvV2DorTbkZyvHa2BY8Rjga+9S4P9
B+5mcr52jAb5WxrP4XztvRp8mOoq8LX3a3Bi6gaBr31Qg98dVAJfO1aDJZ/2
CHztIxpYJn24w/naIg0KNoUKfG2xBr0GVOFrSzSoM9FqDedryzTos79DDc7X
Vmhgs6vp63zG11Zp0DtxcT3O19ZokNpb25nztXUabNs519uG8bUNGliYd//G
+dqJ5H4s6p3ifO0k0h5/+2zj9X+SNZiYLvnRj/G1T2owoXz8gXuMr31ag3sO
GUOmMr72WQ3yptkH/mZ87fMazO91ceoRxtdO0aDVmwWubxhf+5IGAT/fuHK+
dqoGG4r/7uT1j9I0WGywPs752ukapFhEz+B87QwNIpTSmm0ZXzuTzBejW2x/
x/jaWeR4dgN7cb52tgb9XpwZzfnat8n8HTfEm/O1c8j4/Nhb4Gvf0+D13dnT
OF/7gQajcoqjOF87lzw/p1ofBL62BqUF6U6cr/1UgztWtV15fao8DaY8SRX4
2i802BrZR+Br52swzXuAwNd+rUFj760CX7tAgybDfQW+diGZv6s1FPjaRWT+
OjVF4Gt/0ODIza8iXp+rWIOFHSUCX7tEA/u7HgJf+wvZLn0m8LVLyXz3KUXg
a5dpQP6vvsmS8rV/aFDRo+tCztcu16BZcY2N+Uwf/a3BruBppzhfu0KD8mYl
szlfu1KDwubHJ3C+tokWLudGzeJ87epahHbrNZjro6ZanEu7OpPXT6ulhduU
Zl6cr22mxfc5T5Scr11Xi6UVfQS+trkW7ovP+XO+dgMt9pUXNX/L+NoWWrzc
Ka6TwvTRxlo8enG3Rpu+VB9tqsXKM3frOzG+dnMtNKsfylIZX9tSi4bq0DFP
GF+7lRae/uIunK9tpcXXIzf23mX6aFstnNoWtezE6tu112LJ+SXjSxhf25oc
v2mF71PG17bRYkW/rLVxjK/dWYvU+C0jPzG+dlcttrhmh2TEUn3UVot5+oKM
zYyv3YPcz6HT7ZYepPpoLy0eNnnW8T3ja9tp8b5R9gUHxte218JCmz/YfQ3V
Rx3I9XnUKpUzvnZ/LZYNVUhFHyhfe6CW9A9Jwy9MH3XUAu0+L3nC9NEhWpzf
tHmduj7VR5208D16zPwW42tDi7PhzdoeY3ztEVpE15Nb1GN87VFaJF8v8Cs6
TPXRMVqYfWionMT42s5a2FU73oLXXxxPrsdTIvC1XbSw+dPQn/O1XbUYeem6
wNd2I+0RlrmT87Xdtdht7iLwtT206Glo68n52p5aDPW6l8n1US8tPEpWBHK+
9nQtHJ79deB8bW8t1nleEXG+to8Weq31n+9MH52tRffex8Wcrz1XiwlbflTn
9THnaxFsukzga/tqYergvZbro35a3J3ZXtBH/bWoe+rHU66PBmhRZt6gLtdH
l2qRv2SRwNcO1OJ4xrit/PtxkBZxCzoJ/rdgLbZZbRb42iFahDwZNpPro6Hk
+CuPC3ztMC1ml0sEvna4Fg3eft3D+doRWqy58NJ0ItNHI7Vwdu670pLpoxu0
uOa6K57ro1FaVMRF5K5l+uhmLbouaTuQ66NbSf+9UaHifO3tWrgejyrTMn00
WosczdiTvH7rLi1UELXm+miMFl9SCibUY/roXnL9ty5W43zt/WQ8blec5Hzt
g2R8TPG84Mf00Vgyns7ZKqyZPnpES9Z/IbP+Mr62SIsh1Utz+jJ9VKzF04N7
rx5nfG2JlrwPzvk9N4d+P5Zp0fx6p5RUpo8qtEj6/mjMUsbXVmnx+Ub7Tpyv
rdHCp+90ga+t02Lh18en5UwfNWix/d+Ec5yvnahF7LBMd87XTiLzS7WF5zlf
O1lL3uf3zuB87ZOkP6Z8VXF99LQWv1ydv3J99KwWg0YcFvja57WYNMBZ4Gun
aPHgQhW+9iXSnz12CnztVC0WrL4g8LXTSPu+nS3wtdPJfFF3qsDXztBCd7uH
wNfOJP2vfL3A184i8+G+2g5cH83W4l6jUoGvfVuLHpFzBX00R4v0fK9JXB+9
p8WVp1X42g9If4h8K+ijuWT+q6jK19bi/qEqfO2nWkh2VeFr55H5rHoVvvYL
LZSRNwV9NF8LvzdV+NqvyXyxuApfu0AL/8xpgj5aSMZj81uCPlqkxa5VVfja
H0h8qJu5jOujxVqozXYLfO0SLbIWF+/m+ugXLSzPrBf42qWkvURTBL52mRYz
nSYJfO0fpP9Iuwp87XIy3/UUp3J99LcWhz+4CPpoBTlfLZHA167UwnrqdoGv
baLD6baOAl+7ug5LI/4IfG1THTpH1CnhfO1aOgzbFDaD66NmOmxuc2kN10fr
6vDC3m8L52ub62BimhjP+doNdBg8+tk6zte20GFWw7BPXB9trENR0+m9uD7a
VIfMilZ/ypk+2pz8/ZG4h+8ZX9tSh9eDvwRxvnYrHX73qmlixfjaVjpE3g6M
mMP00bY6rDj/PWED00fb65DcxPTZBMbXttZh3VSVBddHbcjff7U7zevnd9bB
9PycIM7X7kr2998u5XxtWx3CD475zvnaPXSQRs/du47po7106NGm3k/O17bT
YVBZezHXR+11GDfwjgfnazvoYFZauJPztfvr0M217TXO1x6ow89ou/Wcr+2o
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
ov77/xV15XE9dF841asU8SZFJaVIKVK9SVRHG1poEyo7UZJkpzehrKkk2XpJ
WRL33ikhXipJqJBsSUiSJbtCIb95P99z5/fnNDPfZu459z73nOecZ36eBF3V
H54LeH6lQ8R7g5uWw/7C/IEcgUe/V5q2GT/A+J+AmaNHwNZXOP8VCXwIGZ+w
6QDqHXQmUHyPNGtu3oP9/wQGbFlQ8WkQ4psKgWtVjxNd/0H/7kqgpmMFy1qM
+w81Avea3asmbcD9Rw8C9xe1PkjUw/VNnUDHZ7mXGr1w/6FBwKbtV1HRcsQ3
TQIZatvPafH8V28Cg65b3e8dg/y8NgH9tTkR93UQL3QJJFSYnYhajfimR2Dh
ku+Kzfz75/oEVrn9aD17jWD/P4HFblWmsT3RPkYEXEZ4x+0oQv8aSMBZ0y/Q
diTaZxCBtdvuGK40x/E2JaDKoh3670f7mBGIHv6479mZaJ8hBOaHncxJM8Hr
LcTxMowI762H+UlLAhe69dLVnOYp+31rAnNrfs0E7Tuy57Mh8HfUxAK/GMx/
2hIwfjPtzM8ktI8dgdVeC4MNTVJl/3+UeP28Jd/uv8P57kBgnfHriiOl2aj/
TyDAIqtP7y6Yn3UikBfl3D1RB/M7LgTivcr3Df8L57ObeP/XgtKiBhXZ/x9L
wP/EJMc0p5uy33MnIP5x580i9CdPAr5+W2auGrAS8Z/A2b4XF/+wRj0GbwIx
o6vH3inD/LQvAbtNRU9Wm2H+2J9A1Pxt59IScD8dQKDSta/fAE9L2fnJBFa6
benWMwjtHUjg+bRf2v14/jyYgN+pdYMN5RHfponvs3Rtv5AZ6N8ziBjfNv7y
UUB8myX68+CKvYMfIL7NEcfnyfSNdWFonxBxvPMzCjT1EN/mE7DVT52tE4b4
Fib660V5Pw/OH4SL9naav6pIHv0vgsCptzkN0Vm4n48ksERbvd/6NZg/jiKg
U325S6Ee+vdS8X2Vrw/34fzGcgK7F/cqn8fzxysJBDcuKzJwwN9fLc4Pu0KL
HnaYP44mIJTe2nD6HeaPYwi8G77ruSGv/4kl0Obi1t+C1/+sJ3A+2HDWaZ4/
jiPweX8GkfidjQROvLVYoqbI9X8IbH47YurCiTi/t4r2cMjpGL2A6/8Q2Kpi
n92T548TCXjm/+l+IF4d8V/0b6vIYT6WaJ8U8fjL+65q7zCfmUrgipVLZtIR
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
avjdS1+nbLD7HzUUMsQ=
      "]]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0, 4181.}, {-0.8396793507064212, 0.4030330642179038}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.656762256752429*^9, 3.6567623042657557`*^9}, 
   3.656763310662065*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["With finite-size corrections", "Subsection",
 CellChangeTimes->{{3.656758079575528*^9, 3.65675808501554*^9}}],

Cell[TextData[{
 "In the quasiperiodic limit,\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["D", 
     RowBox[{"+", "\[Infinity]"}]], "=", 
    RowBox[{
     RowBox[{"x", " ", "Log", " ", "\[Lambda]"}], " ", "+", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"2", "x"}]}], ")"}], "/", "3"}], " ", "Log", " ", 
      "\[Lambda]b"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", where Log is the base \[Omega] log.\n\nFinite-size effects affect the \
coefficients in front of the logs:\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["D", 
     RowBox[{
      RowBox[{"+", "\[Infinity]"}], ",", " ", "n"}]], " ", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"nm", "/", "n"}], " ", "Log", " ", "\[Lambda]"}], " ", "+", " ", 
     RowBox[{
      RowBox[{"na", "/", "n"}], " ", "Log", " ", "\[Lambda]b", " "}]}]}], 
   TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", where nm and na are resp the number of molecular/atomic inflation \
operations needed to construct the state \[Psi] at hand from a state on the \
trivial n=1 chain. \nAnother effect of the finite-size is that \[Omega] -> ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "/", 
    RowBox[{
     SubscriptBox["F", "n"], "^", 
     RowBox[{"(", 
      RowBox[{"1", "/", "n"}], ")"}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". All in all,\n",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["D", 
     RowBox[{
      RowBox[{"+", "\[Infinity]"}], ",", " ", "n", " "}]], "=", " ", 
    RowBox[{
     RowBox[{"nm", " ", "Log", " ", 
      RowBox[{"\[Lambda]", " ", "/", " ", "Log"}], " ", 
      SubscriptBox["F", "n"]}], " ", "+", " ", 
     RowBox[{"na", " ", "Log", " ", 
      RowBox[{"\[Lambda]b", " ", "/", " ", "Log"}], " ", 
      RowBox[{"1", "/", 
       SubscriptBox["F", "n"]}]}]}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "."
}], "Text",
 CellChangeTimes->{{3.6567640541084414`*^9, 3.6567642581572113`*^9}, {
  3.6567643023326893`*^9, 3.6567643716848173`*^9}, {3.656764573653397*^9, 
  3.656764579061495*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[
 RowBox[{
  RowBox[{"count", "[", "n_", "]"}], ":=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"Apply", "[", 
    RowBox[{"StringCount", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"paths", "[", "n", "]"}], ",", "#1"}], "}"}], "&"}], ")"}], 
      "/@", 
      RowBox[{"{", 
       RowBox[{"\"\<m\>\"", ",", "\"\<a\>\""}], "}"}]}], ",", 
     RowBox[{"{", "1", "}"}]}], "]"}], "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"list", " ", "the", " ", "possible", " ", "couples", " ", 
    RowBox[{"(", 
     RowBox[{"nm", ",", " ", "na"}], ")"}], " ", "for", " ", "every", " ", 
    "state", " ", "on", " ", "the", " ", "chain"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"DeleteDuplicates", "[", 
   RowBox[{"count", "[", 
    RowBox[{"n", "+", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.656763943737507*^9, 3.656763950788476*^9}, {
  3.65676439586901*^9, 3.65676442414889*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"9", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"7", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.656763951542697*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "number", " ", "of", " ", "molecular", " ", "deflations", " ", "for", " ",
      "x"}], " ", "=", " ", 
    RowBox[{"1", "/", "2"}]}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"nm", "=", "9"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "number", " ", "of", " ", "atomic", " ", "deflations", " ", "for", " ", 
      "x"}], " ", "=", " ", "0"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"na", "=", "6"}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6567639571074123`*^9, 3.656764004044632*^9}, {
  3.656764385205069*^9, 3.656764393620983*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"theoretical", " ", "expression"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Dinfn", "[", 
    RowBox[{"\[Rho]_", ",", "x_", ",", "nm_", ",", "na_", ",", " ", "n_"}], 
    "]"}], ":=", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"nm", " ", 
        RowBox[{"Log", "[", 
         RowBox[{"\[Lambda]", "[", "\[Rho]", "]"}], "]"}]}], "+", 
       RowBox[{"na", " ", 
        RowBox[{"Log", "[", 
         RowBox[{"\[Lambda]b", "[", "\[Rho]", "]"}], "]"}]}]}], ")"}]}], "/", 
    
    RowBox[{"Log", "[", 
     RowBox[{"Fibonacci", "[", 
      RowBox[{"n", "+", "2"}], "]"}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.656764456009061*^9, 3.656764496269082*^9}, 
   3.656764585805284*^9, {3.6567649607336683`*^9, 3.656764970557288*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Dinf", "[", 
      RowBox[{"\[Rho]", ",", "0"}], "]"}], ",", 
     RowBox[{"Dinf", "[", 
      RowBox[{"\[Rho]", ",", 
       RowBox[{"1", "/", "2"}]}], "]"}], ",", " ", 
     RowBox[{"Dinfn", "[", 
      RowBox[{"\[Rho]", ",", "0", ",", "0", ",", "na", ",", "n"}], "]"}], ",", 
     RowBox[{"Dinfn", "[", 
      RowBox[{"\[Rho]", ",", 
       RowBox[{"1", "/", "2"}], ",", "nm", ",", "0", ",", "n"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", "\"\<\[Rho]\>\"", "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"st", "/@", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(D\), \(+\[Infinity]\)]\)(atom)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(D\), \(+\[Infinity]\)]\)(mol)\>\""}], 
      "}"}]}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", "comp"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<CMU Serif\>\""}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6567561239337053`*^9, 3.6567561472952213`*^9}, {
  3.656756248006296*^9, 3.65675631103848*^9}, {3.656764513077223*^9, 
  3.656764559461227*^9}, {3.656764909749943*^9, 3.656764914056823*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[2], 
        RGBColor[0.368417, 0.506779, 0.709798]], 
       LineBox[CompressedData["
1:eJwVjnk81AkDhx2tlEjlCJWj2BC1GR3KfF3ZSghDvDFLotxsWNdoXUlCmBQN
hXWu+84dMjNi3fG679y/Dsrbobf94/k8n8/z1yN9zc3YjouDgyP5B//6ot18
d+OCKflYO2nHA4XWs28KzK6Ni5GQfyaTphgYRBbh648uFdMBh1/UiXFaKvl5
faDzH3IGOCvfGxyYX0pWPi2UkSxGQduuk3ue016QOfYsxH+XtEBFMZ+2HeUV
uXu5LthGjgp24o15m/xespEtu8omwQaCloZUR9YQWa1LpShO7DoUGE84M2mT
5IPqKVnNDHsI7r7vxH1wjrwjl/fpmqQDKln/c9anLJHXRG4lyKY7Ic7hPVfT
3bfk0ZDRKDM5V/j0yDwxyf9Att1Ib2qmuGO/quDtYdFP5AFlC7JlggfYj0oL
LFifyY1PmlWjxDwxey/ah0HjBKnHp1j2qhfWXq1wdtRzI4dXWame4Q01T+ni
DRkexHk9PkRI+mJMaPNPTQofePL0n4Xb+KE9OyWVKi0AvymufVLp/uiW4fas
uSsIW0OXPUZygRh2237rUv4eDIbJxCzcuI3ZGwMG3RbCkBtz+ukF5U9MU/zr
ekVFkSQkHWSREASSrKqJEUscIUGRPvfEQsEcXix8RJNG/T77CrPqUMjnjN/s
SpTBRqXGmszVMJAaZJeY9QfhvLruVsO4A9fNOL0PMnKgXLW+sSwZAT3hC/5n
KIqI/qiWUdUYgd+d5QIdK46AFSs8HWpzD0GTkhfNpZWhzmqj7k+PxMDe1ANV
d49BTlXVzEAuGtddIpjn81Vg3bWTLs6Mhpp6r/PVIBKeOC12z92IgVKQv3eH
hSp4uzszGygPcDiDWdEpehIBW8NkzBNiodpqvHiJpYbrnoRYhBgdLkHV2x7S
NKHCHedX4k6H+sMZeoyIFrjiSMPDTDpObn1FSJRo4WmhL0PZ+yFOrSQLLb7V
xtAit2RfTwKCuIi9llG6MLTZe0jyfiL6hbM3EzQv4cDb6tDz04lIziwLLODW
x3Kg1ayHWhLuunt0XGHp4x4jLbNlPglsZ8br3ywM0TJwRN7xHAOV/Z5tMvpG
UDPQVC7fTMGgSXNv6SsKeEeno8dMn2JAL4/LQNMUA053iK35T/FU+73oL1Wm
qG6xM89XeobbcZrr3TlmMJ/KFeMYeQZ1K5pPIMMccftVGRmn0nB3q39kcIMl
eOkXUt+++wun7CW2SGxew5dTk19SxTPQdkaB7+h5W6yO+piZaGegr+Cle0+c
LXp/zuaroGfgpvnlK0z560ip4fH2P5mJ+GtXYxyodiBNN1/koWWhjm8mIWbq
BqyPk9ckeHOxm5alY2PmApOBfoOOY7mwiutdsi5xgW6AS06gRS7ywz+tEAKu
UGxlUCdzc2ETFslVy3bFR4svrEz9v+FQpE7iOeiO+0FVyb/E5yEp5w0HM88D
lV3Hf/31QCF2jfRGbPvoieiF5fNHdAvxx8VHKouKXrDnyrq4y7UQ0Zbr9Tuv
eUGEJGEwXFcIyemf/OQ7vVDzKii3UrkI34U2aY/yvCFx1LFY758iGCsvP7Xy
9MHQulrDLf4SBK7QdWNPBkCXa6+GvXQJyuyzx/i9A1AisN5orlqCZeFwk86y
ANz7ubBJ3aoEcUFveqRUaFCzONi6Nb8EV7JHZDaPByKxlq/jyaVS7D18c6VL
8k+Yh4wMNUeW4YSs2i5d3WAITsgduZFaBoE2z97XzsFgn/Wgba8sw2/7KcIP
4oOh9vEnKaOpMjy+bSgaMBkMCYejdmOnyuGpqrVT7XYIxgyCiY3ZcizVP8zQ
bwrFdfHDW5Q1KsGj+Jmzxz4cbsW3lB6vPYezhr+klnwUVs9O9rJ5q1G1+k6o
yCwKziwDvy/7qmEfla6lGRqFm+PyTOq5amSeSDnXMR4Fa/4Ja9mEaiSK7p+K
fByNyw6X6CUna7Ct62KSEe8DHJOW/dLuV4vPfx3dwYiKxfsHr1mcnA0Y/eBX
8qGdDtaL1obOs00YtL5TMcRkwMH3Ar/FcgscpnP201fT8GLb8e95LkxQ6LVC
RFUWMtNbNsVl25CvuBosGpoPDZG6NJOCdoi3quwMrSuGEnOkqlWhEzzSLdsL
l8rQp2GymrPaBcPOb68vZVXBebtTT/+xHvTfOlCpY1eLV4NX6gSie/G1Rslw
07IRJrrmkzMzfdiVbRme/bQJJ55FXnl26DWqX++9tzbYgonN+L6btweQ3Kak
d9OGidkLnekizYPQfyec5jrERlHiuG+39BBCZvz7BTPakXGXO0LebxiipCU3
4cBOrNv+Z9G+ZgRq39zI8Qe6wadzx7hYdAyJehJb7LN6ECA4u2PSchzxuU0p
VKk+7KhX5BjQn4DXHJu3Lakf6t6G35o/T+Al9RGXB3kAjL/upx9kTKLofcK5
Nx2DoJqSOrbpTYGvwE4i+c4Qyvvt4us/TiH445Yma/IITrcXcc0lTMPtSVE4
xkYhdc5+PV5nBqYyP08zM8ehSlKNLZubQTk7up6VO4Hx91Hs9LBZ5KmkXhi8
PYllFaMwseNzWBOxk56/OQW5JaVFzt45OIXxB0xoT6PlkFePe9AbdDgZ7c49
PoOYvn5b40PzkN92vrtx9ywIk8ZYrpZ5vP3ke/AyMYsSU2Ht0x4LSFKzopqO
zyG9IyR5avciFNpb/Rcb3uAT09J/d9MipElGU3Wl85iIbVgXdF3CZfY1mkv6
Aj52nxELFljGGnXp2+GQRbjTZRp9a5fRKE47xfZagmiHjOAMdQVm4anZp82X
YdKf93Xf5gp8zsQf4z+xgve/pTqP5K4iM2u14ne5VTRYF4YJXCIgxdaZduUh
UN3prDdmQEBdx07ZbDuBCrLCrgIjAv/dl+ahLkAgb18GQ/8KAf1yiwk+EQJJ
g0ml968REMo7QM2WJeB1+c7kdl8Cc2Eb/eM6BBQ1rNS3ZhKI1VOIOR9CQK5Q
nHsgmwD/zMse5XACMgcGWZl/E3icw+IXjiSw96sxRbeYgFbeisNkHAGeqvNO
YbUEtFMkqn3TCEweJSVy9xLgHCGXZ78gMJLyjtrbT8Bxs8Y5+iWBQf7CQ+mD
BFb4L0h4sgn8syRfpDVGwNadZoVuArVZksygBQJdUs+9+icIVImM3jdaJkD3
k5ytniFQGpZkLE0QyHjnqPdsnkCurfBY4xqBsI0nXx3f/ug9PekPPv34X/X+
9fKP/kzzgYP1ZwKm7dIRqhsEGEX6R499IxCt9+iF+FcCjyT51r9/J/Bdtuft
v/4/IAPHyw==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[2], 
        RGBColor[0.5450980392156862, 0.13725490196078433`, 0.]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[2], 
        RGBColor[0.368417, 0.506779, 0.709798]], 
       LineBox[CompressedData["
1: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
skLA7ES06dQ9Ev8DtXbNVg==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[2], 
        RGBColor[0.5450980392156862, 0.13725490196078433`, 0.]], 
       LineBox[CompressedData["
1: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
NJcpsGvcjpil0bjLEJ9bWaGgvGnJjkf8H6ac7Os=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Rho]\"", TraditionalForm], None}, AxesOrigin -> {0, 0}, 
     AxesStyle -> Directive[FontSize -> 15, FontFamily -> "CMU Serif"], 
     DisplayFunction :> Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 1}, {0., 1.0387976951181566`}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(D\\), \\(+\[Infinity]\\)]\\)(atom)\"", 
        Directive[FontSize -> 20, FontFamily -> "CMU Serif"], StripOnInput -> 
        False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(D\\), \\(+\[Infinity]\\)]\\)(mol)\"", 
        Directive[FontSize -> 20, FontFamily -> "CMU Serif"], StripOnInput -> 
        False]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.]], {
                    
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[
                    0.5450980392156862, 0.13725490196078433`, 0.]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3633986928104575, 0.09150326797385622, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5450980392156862, 0.13725490196078433, 0.]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.], 
                    Editable -> False, Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3633986928104575, 0.09150326797385622, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5450980392156862, 0.13725490196078433, 0.]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.], 
                    Editable -> False, Selectable -> False]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.65676456060019*^9, 3.656764587538128*^9}, 
   3.656764915410727*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Dinfn", "[", 
      RowBox[{"\[Rho]", ",", "0", ",", "0", ",", "na", ",", "n"}], "]"}], ",", 
     RowBox[{"Dinfn", "[", 
      RowBox[{"\[Rho]", ",", 
       RowBox[{"1", "/", "2"}], ",", "nm", ",", "0", ",", "n"}], "]"}]}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Point", "[", 
        RowBox[{"glue", "[", 
         RowBox[{"\[Rho]Range", ",", "#"}], "]"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"d0s", ",", "dMols"}], "}"}]}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.656762084813036*^9, 3.656762175715067*^9}, {
   3.65676463631742*^9, 3.656764639277238*^9}, {3.656764677373494*^9, 
   3.6567646843973303`*^9}, {3.656764715925426*^9, 3.6567647555495043`*^9}, 
   3.656764839197198*^9, {3.656764933917616*^9, 3.656764935757547*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
skLA7ES06dQ9Ev8DtXbNVg==
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
NJcpsGvcjpil0bjLEJ9bWaGgvGnJjkf8H6ac7Os=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    PointBox[{{0.01, 0.04191143644753741}, {0.11, 0.017246123305226357`}, {
     0.21000000000000002`, 0.061450306929991275`}, {0.31000000000000005`, 
     0.1296973693351017}, {0.41000000000000003`, 0.2179224017322336}, {0.51, 
     0.3212956871717131}, {0.6100000000000001, 0.43499340785632307`}, {
     0.7100000000000001, 0.5550385697314755}, {0.81, 0.6785989186277547}, {
     0.91, 0.8038078792923666}, {1.01, 0.9053510541041907}}], 
    PointBox[{{0.01, 0.5775520134137154}, {0.11, 0.7069326509548999}, {
     0.21000000000000002`, 0.6874438818659917}, {0.31000000000000005`, 
     0.6826927558379781}, {0.41000000000000003`, 0.6904045928684241}, {0.51, 
     0.708366692437817}, {0.6100000000000001, 0.7327297076415394}, {
     0.7100000000000001, 0.7634814368284047}, {0.81, 0.7993944763299414}, {
     0.91, 0.8452742100502961}, {1.01, 0.9030759738816068}}]},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0., 1.0387976951181566`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.656764640810116*^9, {3.656764678357836*^9, 3.656764684757593*^9}, {
   3.656764716201704*^9, 3.656764745245726*^9}, {3.656764936199952*^9, 
   3.656764972002756*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["With finite-size corrections and q finite", "Subsection",
 CellChangeTimes->{{3.656758079575528*^9, 3.65675808501554*^9}, {
  3.6567650058214273`*^9, 3.6567650090133247`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{"theoretical", " ", "expression"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Dinf", "[", 
     RowBox[{"\[Rho]_", ",", "x_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", " ", 
        RowBox[{"Log", "[", 
         RowBox[{"\[Lambda]", "[", "\[Rho]", "]"}], "]"}]}], "+", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"2", "x"}]}], ")"}], "/", "3"}], 
        RowBox[{"Log", "[", 
         RowBox[{"\[Lambda]b", "[", "\[Rho]", "]"}], "]"}]}]}], ")"}], "/", 
     RowBox[{"Log", "[", "\[Omega]", "]"}]}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"glue", "[", 
      RowBox[{"l1_", ",", "l2_"}], "]"}], ":=", 
     RowBox[{"MapThread", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"#1", ",", "#2"}], "}"}], "&"}], ",", 
       RowBox[{"{", 
        RowBox[{"l1", ",", "l2"}], "}"}]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.6567560074136467`*^9, 3.6567560654381323`*^9}, {
  3.65682505192311*^9, 3.656825087547001*^9}, {3.6568252871074963`*^9, 
  3.656825311755775*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Dq", "[", 
   RowBox[{
   "\[Rho]_", ",", "x_", ",", "q_", ",", "na_", ",", "nm_", ",", "n_"}], 
   "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"q", "-", "1"}], ")"}]}], ")"}]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"nm", " ", 
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Lambda]", "[", "\[Rho]", "]"}], "^", "q"}], "/", 
         RowBox[{"\[Lambda]", "[", 
          RowBox[{
           RowBox[{"\[Rho]", "^", "q"}], ",", "q"}], "]"}]}], "]"}]}], "+", 
      RowBox[{"na", " ", 
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Lambda]b", "[", "\[Rho]", "]"}], "^", "q"}], "/", 
         RowBox[{"\[Lambda]b", "[", 
          RowBox[{"\[Rho]", "^", "q"}], "]"}]}], "]"}]}]}], ")"}], "/", 
    RowBox[{"(", 
     RowBox[{"Log", "[", 
      RowBox[{"Fibonacci", "[", 
       RowBox[{"n", "+", "2"}], "]"}], "]"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.656825773480021*^9, 3.656825809156282*^9}, {
   3.6568258668122387`*^9, 3.6568258955723352`*^9}, {3.656826017988584*^9, 
   3.656826023108575*^9}, 3.656826067844699*^9, {3.656826101044837*^9, 
   3.656826173557035*^9}, 3.65682629590909*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"return", " ", "the", " ", "intensities"}], ",", " ", 
    RowBox[{"sorted", " ", "by", " ", "incresaing", " ", "energy"}]}], " ", 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"sortedInts", "[", 
     RowBox[{"n_", ",", "k_", ",", "\[Rho]_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"val", ",", "vec"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{"val", ",", "vec"}], "}"}], "=", 
        RowBox[{"Eigensystem", "[", 
         RowBox[{"hk", "[", 
          RowBox[{"k", ",", "n", ",", "\[Rho]", ",", "1."}], "]"}], "]"}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"vec", "[", 
          RowBox[{"[", 
           RowBox[{"Ordering", "[", "val", "]"}], "]"}], "]"}], "]"}], "^", 
        "2"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ints", "[", 
     RowBox[{"n_", ",", "\[Rho]_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"ints", ",", " ", "ks", ",", 
        RowBox[{"L", "=", "5"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ks", "=", 
        RowBox[{"\[Pi]", " ", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{"0", ",", 
            RowBox[{"L", "-", "1"}], ",", "1"}], "]"}], "/", 
          RowBox[{"(", 
           RowBox[{"L", "-", "1"}], ")"}]}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "compute", " ", "wavefunctions", " ", "and", " ", "energies"}], " ", 
        "*)"}], "\[IndentingNewLine]", 
       RowBox[{"ints", "=", 
        RowBox[{"Map", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"sortedInts", "[", 
            RowBox[{"n", ",", "#", ",", "\[Rho]"}], "]"}], "&"}], ",", "ks"}],
          "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Apply", "[", 
         RowBox[{"Plus", ",", "ints"}], "]"}], "/", "L"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{
     "return", " ", "the", " ", "positions", " ", "ordered", " ", "by", " ", 
      "increasing", " ", "value", " ", "of", " ", "x"}], ",", " ", 
     RowBox[{
      RowBox[{"size", " ", "n"}], "+", "2"}]}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"listPos", "[", "n_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", " ", 
       RowBox[{"xlist", ",", " ", "xvalues", ",", " ", "listPos"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"compute", " ", "x", " ", "for", " ", "each", " ", "site"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"xlist", "=", 
        RowBox[{"tree", "[", 
         RowBox[{"n", "+", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
         RowBox[{"drop", " ", "the", " ", "site", " ", "labels"}], ",", " ", 
         RowBox[{
         "they", " ", "are", " ", "unecessary", " ", "as", " ", "x", " ", 
          "is", " ", "indexed", " ", "by", " ", "increasing", " ", "x", " ", 
          "label"}]}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"xlist", "=", 
        RowBox[{"Last", "@", 
         RowBox[{"(", 
          RowBox[{"Transpose", "[", "xlist", "]"}], ")"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "list", " ", "all", " ", "possible", " ", "values", " ", "of", " ", 
         "x"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"xvalues", "=", 
        RowBox[{"Sort", "@", 
         RowBox[{"DeleteDuplicates", "[", "xlist", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "list", " ", "all", " ", "positions", " ", "by", " ", "increasing", 
         " ", "value", " ", "of", " ", "x"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"listPos", "=", 
        RowBox[{
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"Position", "[", 
            RowBox[{"xlist", ",", "#"}], "]"}], "]"}], "&"}], "/@", 
         "xvalues"}]}], ";", "\[IndentingNewLine]", "listPos"}]}], "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"returns", " ", "the", " ", "average", " ", 
     SubscriptBox["D", "q"], " ", "for", " ", "a", " ", "list", " ", "of", 
     " ", "wavefunctions"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dq", "[", 
     RowBox[{"ints_", ",", "n_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", " ", "dinfs", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{"compute", " ", "the", " ", "associated", " ", "exponents"}], 
       " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"dinfs", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"WfD", "[", 
            RowBox[{"#", ",", "q"}], "]"}], "&"}], "/@", "ints"}]}], ";"}], 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"dinfs", "=", 
        RowBox[{"Max", "/@", "ints"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dinfs", "=", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Log", "[", "dinfs", "]"}]}], "/", 
         RowBox[{"Log", "[", 
          RowBox[{"Fibonacci", "[", 
           RowBox[{"n", "+", "2"}], "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "[", "dinfs", "]"}], ">", "1"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Mean", "[", "dinfs", "]"}], ",", " ", 
           RowBox[{"StandardDeviation", "[", "dinfs", "]"}]}], "}"}], ",", 
         RowBox[{"dinfs", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]}], "\[IndentingNewLine]", 
     "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"return", " ", "all", " ", "the", " ", 
     RowBox[{
      SubscriptBox["D", 
       RowBox[{"+", "\[Infinity]"}]], "'"}], "s", " ", "for", " ", "a", " ", 
     "list", " ", "a", " ", "wavefunctions"}], " ", "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"disp", "[", 
     RowBox[{"ints_", ",", "n_"}], "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", " ", "dinfs", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"dinfs", "=", 
        RowBox[{"Max", "/@", "ints"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"dinfs", "=", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"Log", "[", "dinfs", "]"}]}], "/", 
         RowBox[{"Log", "[", 
          RowBox[{"Fibonacci", "[", 
           RowBox[{"n", "+", "2"}], "]"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", "dinfs"}]}], 
     "\[IndentingNewLine]", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.656760685860655*^9, 3.656760713497891*^9}, {
   3.656760751978684*^9, 3.656760864780663*^9}, 3.6567609091786823`*^9, {
   3.6567609520346413`*^9, 3.656761033762638*^9}, {3.656761184506638*^9, 
   3.6567612701066723`*^9}, {3.6567613190833263`*^9, 
   3.6567613195547113`*^9}, {3.656762337013874*^9, 3.656762349059492*^9}, {
   3.656765032534642*^9, 3.656765047453836*^9}, {3.656765083741811*^9, 
   3.656765093077673*^9}, {3.656765267752335*^9, 3.6567652695504503`*^9}, {
   3.656768701849196*^9, 3.656768823816928*^9}, 3.6567688973533287`*^9, {
   3.656768975409124*^9, 3.656768979649247*^9}, {3.656769059353381*^9, 
   3.6567691095295877`*^9}, {3.656769234465591*^9, 3.6567692515294313`*^9}, {
   3.656769441665703*^9, 3.656769478874002*^9}, {3.656769527210023*^9, 
   3.656769658817974*^9}, {3.6567697253061647`*^9, 3.656769909570058*^9}, {
   3.65676995129033*^9, 3.6567699670821857`*^9}, {3.656770054082281*^9, 
   3.656770103802573*^9}, 3.656770142378758*^9, 3.6568249380675297`*^9, {
   3.656824994947719*^9, 3.6568249962033854`*^9}, 3.65682509773193*^9, {
   3.65683079593187*^9, 3.656830825939847*^9}, {3.6568311598363647`*^9, 
   3.6568311908767567`*^9}, {3.656831297476514*^9, 3.6568313156445847`*^9}, {
   3.656832148062316*^9, 3.656832148214056*^9}, {3.6568332862476263`*^9, 
   3.6568333289835987`*^9}, 3.656838114503151*^9, {3.65719460667264*^9, 
   3.657194607223031*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"n", "=", "17"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"list", " ", "all", " ", "positions"}], ",", " ", 
    RowBox[{
    "sorted", " ", "by", " ", "increasing", " ", "value", " ", "of", " ", 
     "x"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"pos", "=", 
    RowBox[{"listPos", "[", "n", "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"iterate", " ", "over", " ", "\[Rho]"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Rho]Range", "=", 
    RowBox[{"Range", "[", 
     RowBox[{"0.1", ",", "1.01", ",", "0.1"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
   "compute", " ", "the", " ", "wf", " ", "for", " ", "each", " ", "value", 
    " ", "of", " ", "\[Rho]"}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wfs", "=", 
    RowBox[{"ParallelMap", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"ints", "[", 
        RowBox[{"n", ",", "#"}], "]"}], "&"}], ",", "\[Rho]Range"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"x", "=", 
    RowBox[{"0", " ", "wfs"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wfs0", "=", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"wfs", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", 
         RowBox[{"pos", "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "wfs", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"x", "=", 
    RowBox[{
     RowBox[{"1", "/", "2"}], " ", "wfs"}]}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wfsMol", "=", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"wfs", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", 
         RowBox[{"pos", "[", 
          RowBox[{"[", 
           RowBox[{"-", "1"}], "]"}], "]"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "wfs", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"edge", " ", "of", " ", "the", " ", "spectrum", " ", "wf"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"wfsEd", "=", 
    RowBox[{"ParallelTable", "[", 
     RowBox[{
      RowBox[{"wfs", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{"Length", "[", "wfs", "]"}]}], "}"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"max", " ", "at", " ", "the", " ", "edge"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"wfsM", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Max", "[", 
      RowBox[{"wfsEd", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1"}], "]"}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", 
       RowBox[{"Length", "[", "wfs", "]"}]}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGCQAmIQzXbi4qntdq8dA39EnwXRy1IP3wXRFjdfPwPRK6TM
xHYAaY+pp6RAtNqNUh0QzT97owGI5tDbaQ6ia268sgDRPx4+cAHRs5ZudwPR
i1Yp+YHoh2azQkC0w8s3WSD6m0h8NoiO6u9oBNFdQp7NIPraX54bO4H0jURh
MK2g3KG0C0gztcwA02X25ZpgvmItmA6YP3sBiO6sXgCmW43a1+8GyWsEbAHR
MaGKl0B093tXMC2x+J/DdSDdoc3kCqLTds30A9E21//5g+icHIejIPrI+4RT
IFr56+qrIHrGlI1gWu6YwfubQPqefNxnEL2r8ibTLSBtEHYPTPNxsEwG0XfW
coHp+alKUk+A9J4GdTB9Ie5AOog+wnIcTC/Ztry82/61Y1zmTjA9YQvDRBDt
x8cDpgFbdtZK
  "]],

Cell[CellGroupData[{

Cell[BoxData["\<\"Updating from Wolfram Research server ...\"\>"], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.657262795528442*^9}],

Cell[BoxData["\<\"Updating from Wolfram Research server ...\"\>"], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.657262796726837*^9}],

Cell[BoxData["\<\"Updating from Wolfram Research server ...\"\>"], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.657262796850692*^9}],

Cell[BoxData["\<\"Updating from Wolfram Research server ...\"\>"], "Print",
 ShowCellLabel->True,
 CellChangeTimes->{3.657262797119191*^9}]
}, Open  ]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"dinfs", " ", "x"}], "=", "0"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dq0s", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"dq", "[", 
        RowBox[{"#", ",", "n"}], "]"}], "&"}], "/@", "wfs0"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"dinfs", " ", "x"}], "=", 
      RowBox[{"1", "/", "2"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"dqMols", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"dq", "[", 
         RowBox[{"#", ",", "qm", ",", "n"}], "]"}], "&"}], "/@", "wfsMol"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{"dinfs", " ", "edge"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"dqEds", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"dq", "[", 
         RowBox[{"#", ",", "qm", ",", "n"}], "]"}], "&"}], "/@", "wfsEd"}]}], 
     ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", "max", " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dqMaxs", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", 
         RowBox[{"Log", "[", 
          RowBox[{"Abs", "[", "#", "]"}], "]"}]}], "/", 
        RowBox[{"Log", "[", 
         RowBox[{"Fibonacci", "[", 
          RowBox[{"n", "+", "2"}], "]"}], "]"}]}], "&"}], "/@", "wfsM"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "standard", " ", "deviation", " ", "around", " ", "the", " ", "edge"}], 
    " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"stdMaxs", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"dq", "[", 
         RowBox[{"#", ",", "n"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", "wfsMol"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{"dipersion", " ", "of", " ", "the", " ", 
     SubscriptBox["D", 
      RowBox[{"+", "\[Infinity]"}]], 
     RowBox[{"(", 
      RowBox[{"1", "/", "2"}], ")"}]}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"dqDisp", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"disp", "[", 
        RowBox[{"#", ",", "n"}], "]"}], "&"}], "/@", "wfsMol"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.656762033436082*^9, 3.656762079139113*^9}, {
   3.656765138173628*^9, 3.656765184885684*^9}, {3.6567652315978603`*^9, 
   3.656765243637587*^9}, {3.656825494979958*^9, 3.656825511620482*^9}, {
   3.6568263344450083`*^9, 3.656826340356971*^9}, {3.656826402709071*^9, 
   3.656826407517107*^9}, {3.6568264940292177`*^9, 3.6568265079893427`*^9}, {
   3.656830916771923*^9, 3.656830993492029*^9}, 3.65683120945284*^9, {
   3.656833336767469*^9, 3.656833374231414*^9}, {3.657194413097828*^9, 
   3.657194421904565*^9}, {3.6571945689407454`*^9, 3.657194621962763*^9}}],

Cell[CellGroupData[{

Cell[BoxData["stdMaxs"], "Input",
 CellChangeTimes->{{3.656831733919525*^9, 3.6568317349749117`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.0026085691090799337`", ",", "0.008082343419662075`", ",", 
   "0.013893089924610502`", ",", "0.01873929657713717`", ",", 
   "0.02207127197396943`", ",", "0.02362126306479183`", ",", 
   "0.023320102285932287`", ",", "0.02125440350391279`", ",", 
   "0.020377886245068793`", ",", "0.0013146049002896697`"}], "}"}]], "Output",\

 CellChangeTimes->{3.656831735249969*^9, 3.656854268039713*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["dqMaxs"], "Input",
 CellChangeTimes->{{3.6568317375721188`*^9, 3.6568317410231333`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.7189361398596638`", ",", "0.7183461844377212`", ",", 
   "0.7355866112861774`", ",", "0.7631565306042206`", ",", 
   "0.7963795731763601`", ",", "0.8325690894467471`", ",", 
   "0.8702435365971246`", ",", "0.9085781970781159`", ",", 
   "0.9459448880603507`", ",", "0.9781344616311918`"}], "}"}]], "Output",
 CellChangeTimes->{3.656831741308731*^9, 3.656854269117556*^9}]
}, Open  ]],

Cell["\<\
dq0/dqMol(\[Rho] = 1, n = 14+2) = 0.90 while dq0/dqMol(\[Rho] = 1, n = 17+2) \
= 0.92 -> finite-size effect vanish quite rapidly. \
\>", "Text",
 CellChangeTimes->{{3.6567659911260843`*^9, 3.6567660542460203`*^9}},
 Background->GrayLevel[0.85]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Dinf", "[", 
      RowBox[{"\[Rho]", ",", "0"}], "]"}], ",", 
     RowBox[{"Dinf", "[", 
      RowBox[{"\[Rho]", ",", 
       RowBox[{"1", "/", "2"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.015", "]"}], ",", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Point", "[", 
          RowBox[{"glue", "[", 
           RowBox[{"\[Rho]Range", ",", "#"}], "]"}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"dq0s", ",", "dqMaxs"}], "}"}]}], ")"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", "\"\<\[Rho]\>\"", "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"st", "/@", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(D\), \(\[Infinity]\)]\)(0)\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(D\), \(\[Infinity]\)]\)(1/2)\>\""}], 
      "}"}]}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", "comp"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<CMU Serif\>\""}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.656762084813036*^9, 3.656762175715067*^9}, {
  3.656765216301735*^9, 3.656765219015317*^9}, {3.656765914614422*^9, 
  3.656765936614419*^9}, {3.6567665992955303`*^9, 3.656766646663121*^9}, {
  3.656766751959465*^9, 3.656766892659604*^9}, {3.656768999769332*^9, 
  3.656769002081047*^9}, {3.6567694136180973`*^9, 3.6567694137934847`*^9}, {
  3.65682551846064*^9, 3.6568255187000093`*^9}, {3.6568258157967663`*^9, 
  3.656825849668989*^9}, {3.656825905524856*^9, 3.6568259780931053`*^9}, {
  3.656826049485194*^9, 3.6568260564209127`*^9}, {3.656826126541061*^9, 
  3.656826132717415*^9}, {3.656826179709403*^9, 3.656826200589004*^9}, {
  3.656826304517301*^9, 3.6568263211014767`*^9}, {3.656826516031123*^9, 
  3.656826530639764*^9}, {3.656831356228874*^9, 3.656831358084701*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[2], 
        RGBColor[0.368417, 0.506779, 0.709798]], 
       LineBox[CompressedData["
1:eJwVjnk81AkDhx2tlEjlCJWj2BC1GR3KfF3ZSghDvDFLotxsWNdoXUlCmBQN
hXWu+84dMjNi3fG679y/Dsrbobf94/k8n8/z1yN9zc3YjouDgyP5B//6ot18
d+OCKflYO2nHA4XWs28KzK6Ni5GQfyaTphgYRBbh648uFdMBh1/UiXFaKvl5
faDzH3IGOCvfGxyYX0pWPi2UkSxGQduuk3ue016QOfYsxH+XtEBFMZ+2HeUV
uXu5LthGjgp24o15m/xespEtu8omwQaCloZUR9YQWa1LpShO7DoUGE84M2mT
5IPqKVnNDHsI7r7vxH1wjrwjl/fpmqQDKln/c9anLJHXRG4lyKY7Ic7hPVfT
3bfk0ZDRKDM5V/j0yDwxyf9Att1Ib2qmuGO/quDtYdFP5AFlC7JlggfYj0oL
LFifyY1PmlWjxDwxey/ah0HjBKnHp1j2qhfWXq1wdtRzI4dXWame4Q01T+ni
DRkexHk9PkRI+mJMaPNPTQofePL0n4Xb+KE9OyWVKi0AvymufVLp/uiW4fas
uSsIW0OXPUZygRh2237rUv4eDIbJxCzcuI3ZGwMG3RbCkBtz+ukF5U9MU/zr
ekVFkSQkHWSREASSrKqJEUscIUGRPvfEQsEcXix8RJNG/T77CrPqUMjnjN/s
SpTBRqXGmszVMJAaZJeY9QfhvLruVsO4A9fNOL0PMnKgXLW+sSwZAT3hC/5n
KIqI/qiWUdUYgd+d5QIdK46AFSs8HWpzD0GTkhfNpZWhzmqj7k+PxMDe1ANV
d49BTlXVzEAuGtddIpjn81Vg3bWTLs6Mhpp6r/PVIBKeOC12z92IgVKQv3eH
hSp4uzszGygPcDiDWdEpehIBW8NkzBNiodpqvHiJpYbrnoRYhBgdLkHV2x7S
NKHCHedX4k6H+sMZeoyIFrjiSMPDTDpObn1FSJRo4WmhL0PZ+yFOrSQLLb7V
xtAit2RfTwKCuIi9llG6MLTZe0jyfiL6hbM3EzQv4cDb6tDz04lIziwLLODW
x3Kg1ayHWhLuunt0XGHp4x4jLbNlPglsZ8br3ywM0TJwRN7xHAOV/Z5tMvpG
UDPQVC7fTMGgSXNv6SsKeEeno8dMn2JAL4/LQNMUA053iK35T/FU+73oL1Wm
qG6xM89XeobbcZrr3TlmMJ/KFeMYeQZ1K5pPIMMccftVGRmn0nB3q39kcIMl
eOkXUt+++wun7CW2SGxew5dTk19SxTPQdkaB7+h5W6yO+piZaGegr+Cle0+c
LXp/zuaroGfgpvnlK0z560ip4fH2P5mJ+GtXYxyodiBNN1/koWWhjm8mIWbq
BqyPk9ckeHOxm5alY2PmApOBfoOOY7mwiutdsi5xgW6AS06gRS7ywz+tEAKu
UGxlUCdzc2ETFslVy3bFR4svrEz9v+FQpE7iOeiO+0FVyb/E5yEp5w0HM88D
lV3Hf/31QCF2jfRGbPvoieiF5fNHdAvxx8VHKouKXrDnyrq4y7UQ0Zbr9Tuv
eUGEJGEwXFcIyemf/OQ7vVDzKii3UrkI34U2aY/yvCFx1LFY758iGCsvP7Xy
9MHQulrDLf4SBK7QdWNPBkCXa6+GvXQJyuyzx/i9A1AisN5orlqCZeFwk86y
ANz7ubBJ3aoEcUFveqRUaFCzONi6Nb8EV7JHZDaPByKxlq/jyaVS7D18c6VL
8k+Yh4wMNUeW4YSs2i5d3WAITsgduZFaBoE2z97XzsFgn/Wgba8sw2/7KcIP
4oOh9vEnKaOpMjy+bSgaMBkMCYejdmOnyuGpqrVT7XYIxgyCiY3ZcizVP8zQ
bwrFdfHDW5Q1KsGj+Jmzxz4cbsW3lB6vPYezhr+klnwUVs9O9rJ5q1G1+k6o
yCwKziwDvy/7qmEfla6lGRqFm+PyTOq5amSeSDnXMR4Fa/4Ja9mEaiSK7p+K
fByNyw6X6CUna7Ct62KSEe8DHJOW/dLuV4vPfx3dwYiKxfsHr1mcnA0Y/eBX
8qGdDtaL1obOs00YtL5TMcRkwMH3Ar/FcgscpnP201fT8GLb8e95LkxQ6LVC
RFUWMtNbNsVl25CvuBosGpoPDZG6NJOCdoi3quwMrSuGEnOkqlWhEzzSLdsL
l8rQp2GymrPaBcPOb68vZVXBebtTT/+xHvTfOlCpY1eLV4NX6gSie/G1Rslw
07IRJrrmkzMzfdiVbRme/bQJJ55FXnl26DWqX++9tzbYgonN+L6btweQ3Kak
d9OGidkLnekizYPQfyec5jrERlHiuG+39BBCZvz7BTPakXGXO0LebxiipCU3
4cBOrNv+Z9G+ZgRq39zI8Qe6wadzx7hYdAyJehJb7LN6ECA4u2PSchzxuU0p
VKk+7KhX5BjQn4DXHJu3Lakf6t6G35o/T+Al9RGXB3kAjL/upx9kTKLofcK5
Nx2DoJqSOrbpTYGvwE4i+c4Qyvvt4us/TiH445Yma/IITrcXcc0lTMPtSVE4
xkYhdc5+PV5nBqYyP08zM8ehSlKNLZubQTk7up6VO4Hx91Hs9LBZ5KmkXhi8
PYllFaMwseNzWBOxk56/OQW5JaVFzt45OIXxB0xoT6PlkFePe9AbdDgZ7c49
PoOYvn5b40PzkN92vrtx9ywIk8ZYrpZ5vP3ke/AyMYsSU2Ht0x4LSFKzopqO
zyG9IyR5avciFNpb/Rcb3uAT09J/d9MipElGU3Wl85iIbVgXdF3CZfY1mkv6
Aj52nxELFljGGnXp2+GQRbjTZRp9a5fRKE47xfZagmiHjOAMdQVm4anZp82X
YdKf93Xf5gp8zsQf4z+xgve/pTqP5K4iM2u14ne5VTRYF4YJXCIgxdaZduUh
UN3prDdmQEBdx07ZbDuBCrLCrgIjAv/dl+ahLkAgb18GQ/8KAf1yiwk+EQJJ
g0ml968REMo7QM2WJeB1+c7kdl8Cc2Eb/eM6BBQ1rNS3ZhKI1VOIOR9CQK5Q
nHsgmwD/zMse5XACMgcGWZl/E3icw+IXjiSw96sxRbeYgFbeisNkHAGeqvNO
YbUEtFMkqn3TCEweJSVy9xLgHCGXZ78gMJLyjtrbT8Bxs8Y5+iWBQf7CQ+mD
BFb4L0h4sgn8syRfpDVGwNadZoVuArVZksygBQJdUs+9+icIVImM3jdaJkD3
k5ytniFQGpZkLE0QyHjnqPdsnkCurfBY4xqBsI0nXx3f/ug9PekPPv34X/X+
9fKP/kzzgYP1ZwKm7dIRqhsEGEX6R499IxCt9+iF+FcCjyT51r9/J/Bdtuft
v/4/IAPHyw==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[2], 
        RGBColor[0.5450980392156862, 0.13725490196078433`, 0.]], 
       LineBox[CompressedData["
1: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
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Rho]\"", TraditionalForm], None}, AxesOrigin -> {0, 0}, 
     AxesStyle -> Directive[FontSize -> 15, FontFamily -> "CMU Serif"], 
     DisplayFunction :> Identity, Epilog -> {
       PointSize[0.015], {
        PointBox[{{0.1, 0.014311987652311854`}, {0.2, 0.05636935534655003}, {
         0.30000000000000004`, 0.12381534239991898`}, {0.4, 
         0.21302624807281179`}, {0.5, 0.3193190290913268}, {0.6, 
         0.43774119820360996`}, {0.7000000000000001, 0.5639435108095816}, {
         0.8, 0.6945417573839059}, {0.9, 0.8270425140047748}, {1., 
         0.9596950338964106}}], 
        PointBox[{{0.1, 0.7189361398596638}, {0.2, 0.7183461844377212}, {
         0.30000000000000004`, 0.7355866112861774}, {0.4, 
         0.7631565306042206}, {0.5, 0.7963795731763601}, {0.6, 
         0.8325690894467471}, {0.7000000000000001, 0.8702435365971246}, {0.8, 
         0.9085781970781159}, {0.9, 0.9459448880603507}, {1., 
         0.9781344616311918}}]}}, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 1}, {0., 0.9999999912086364}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox["\"\\!\\(\\*SubscriptBox[\\(D\\), \\(\[Infinity]\\)]\\)(0)\"", 
        Directive[FontSize -> Large, FontFamily -> "Linux Libertine Display"],
         StripOnInput -> False], 
       StyleBox[
       "\"\\!\\(\\*SubscriptBox[\\(D\\), \\(\[Infinity]\\)]\\)(1/2)\"", 
        Directive[FontSize -> Large, FontFamily -> "Linux Libertine Display"],
         StripOnInput -> False]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.]], {
                    
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[
                    0.5450980392156862, 0.13725490196078433`, 0.]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3633986928104575, 0.09150326797385622, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5450980392156862, 0.13725490196078433, 0.]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.], 
                    Editable -> False, Selectable -> False]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.656766846356823*^9, 3.656766892973919*^9}, 
   3.6567689490392933`*^9, {3.656768991404525*^9, 3.6567690028235197`*^9}, 
   3.656769282240822*^9, {3.656769334690428*^9, 3.6567693413795137`*^9}, 
   3.6567694142099667`*^9, 3.656769455575288*^9, 3.656769486902048*^9, 
   3.656770006957406*^9, {3.656770095337508*^9, 3.656770122438911*^9}, 
   3.656770167199029*^9, 3.656770234175061*^9, 3.656825043931802*^9, {
   3.656825079448073*^9, 3.6568251124014177`*^9}, {3.6568252903411283`*^9, 
   3.6568253144174147`*^9}, 3.6568255193135*^9, {3.65682582095427*^9, 
   3.656825852877578*^9}, {3.6568259120946093`*^9, 3.6568259786081*^9}, {
   3.656826045417563*^9, 3.656826071089054*^9}, {3.6568261198591833`*^9, 
   3.65682614346369*^9}, {3.656826176704671*^9, 3.656826200953455*^9}, {
   3.656826299739959*^9, 3.656826321623476*^9}, {3.656826517800362*^9, 
   3.656826532172847*^9}, 3.656828750451495*^9, 3.65683126764928*^9, 
   3.6568313200128403`*^9, 3.656831359454101*^9, 3.656833215496336*^9, 
   3.656851715654417*^9, 3.656854270841146*^9, 3.657194551999159*^9, 
   3.657194589572709*^9, 3.6571946270205927`*^9, 3.657264077812296*^9, 
   3.657264451159092*^9}]
}, Open  ]],

Cell["Plot the renormalization factors \[Lambda]/\[Lambda]b", "Text",
 CellChangeTimes->{{3.656829053136786*^9, 3.6568290686407423`*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"\[Lambda]num", "=", 
   RowBox[{"\[Omega]", "^", 
    RowBox[{"(", 
     RowBox[{"2", "dqMaxs"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]bnum", "=", 
   RowBox[{"\[Omega]", "^", 
    RowBox[{"(", 
     RowBox[{"3", "dq0s"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Lambda]disp", "=", 
   RowBox[{"\[Omega]", "^", 
    RowBox[{"(", 
     RowBox[{"2", " ", "dqDisp"}], ")"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ptsdisp", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Map", "[", 
      RowBox[{
       RowBox[{"Function", "[", 
        RowBox[{"u", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"u", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", "#"}], "}"}], "&"}], "/@", 
          
          RowBox[{"u", "[", 
           RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}], ",", 
       RowBox[{"glue", "[", 
        RowBox[{"\[Rho]Range", ",", "\[Lambda]disp"}], "]"}]}], "]"}], ",", 
     "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Delta]", "=", "4"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"std\[Lambda]", "=", 
   RowBox[{"Transpose", "@", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\[Omega]", "^", 
       RowBox[{"(", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"dqMaxs", "+", 
           RowBox[{"\[Delta]", " ", "stdMaxs"}]}], ")"}]}], ")"}]}], ",", 
      RowBox[{"\[Omega]", "^", 
       RowBox[{"(", 
        RowBox[{"2", 
         RowBox[{"(", 
          RowBox[{"dqMaxs", "-", 
           RowBox[{"\[Delta]", " ", "stdMaxs"}]}], ")"}]}], ")"}]}]}], 
     "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.656829098293915*^9, 3.656829158136879*^9}, {
  3.656829241689354*^9, 3.6568292572652073`*^9}, {3.6568316074367657`*^9, 
  3.656831705956873*^9}, {3.656831775549777*^9, 3.656831857149234*^9}, {
  3.6568320296935053`*^9, 3.656832100253436*^9}, {3.6568332551033163`*^9, 
  3.656833255199031*^9}, {3.656851740634583*^9, 3.656851759436352*^9}, {
  3.656851820531323*^9, 3.656851839258515*^9}, {3.6568521906350737`*^9, 
  3.656852195443124*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]b", "[", "\[Rho]", "]"}], ",", 
     RowBox[{"\[Lambda]", "[", "\[Rho]", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.015", "]"}], ",", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"Point", "[", 
            RowBox[{"glue", "[", 
             RowBox[{"\[Rho]Range", ",", "#"}], "]"}], "]"}], "&"}], "/@", 
          RowBox[{"{", 
           RowBox[{"\[Lambda]num", ",", "\[Lambda]bnum"}], "}"}]}], ")"}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"PointSize", "[", "0.005", "]"}], ",", 
        RowBox[{"Point", "[", "ptsdisp", "]"}]}], "}"}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", "\"\<\[Rho]\>\"", "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"st", "/@", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*OverscriptBox[\(\[Lambda]\), \(_\)]\)(\[Rho])\>\"", ",", 
       "\"\<\[Lambda](\[Rho])\>\""}], "}"}]}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "comp"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Linux Libertine Display\>\""}]}], 
     "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.656829159859724*^9, 3.656829223529351*^9}, {
  3.656829264297797*^9, 3.656829272649178*^9}, {3.656830471916205*^9, 
  3.656830492139256*^9}, {3.656851795890786*^9, 3.656851816562564*^9}, {
  3.656851865995111*^9, 3.656851876402793*^9}, {3.6568519677232*^9, 
  3.65685200429105*^9}, {3.656852202323662*^9, 3.656852247475355*^9}, {
  3.6568542850308733`*^9, 3.656854285193421*^9}, {3.6572643828889027`*^9, 
  3.657264395544201*^9}, {3.657264447960712*^9, 3.657264460744204*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[2], 
        RGBColor[0.368417, 0.506779, 0.709798]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[3], 
        RGBColor[0.5450980392156862, 0.13725490196078433`, 0.]], 
       LineBox[CompressedData["
1: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
Wa9ISeL/KS2fnJ+nEX73299ULlP4P4nh8UQ=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Rho]\"", TraditionalForm], None}, AxesOrigin -> {0, 0.2}, 
     AxesStyle -> 
     Directive[FontSize -> 15, FontFamily -> "Linux Libertine Display"], 
     DisplayFunction :> Identity, Epilog -> {{
        PointSize[0.015], {
         PointBox[{{0.1, 0.5006133942618795}, {0.2, 0.5008977167741769}, {
          0.30000000000000004`, 0.492655096392471}, {0.4, 
          0.4797549176056227}, {0.5, 0.46465757816968783`}, {0.6, 
          0.44875231427159373`}, {0.7000000000000001, 0.4327725572235068}, {
          0.8, 0.41709671865742187`}, {0.9, 0.4023633543836234}, {1., 
          0.39008924259431516`}}], 
         PointBox[{{0.1, 0.9795506889695729}, {0.2, 0.9218462733132131}, {
          0.30000000000000004`, 0.8363197853648482}, {0.4, 
          0.7352591558943008}, {0.5, 0.6306651150661972}, {0.6, 
          0.5315602534716929}, {0.7000000000000001, 0.44302509698665893`}, {
          0.8, 0.3669003036716836}, {0.9, 0.30302259275690163`}, {1., 
          0.2502112303948514}}]}}, {
        PointSize[0.005], 
        PointBox[CompressedData["
1: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
VRwoQPGvxPZAnxSud4wyLIxPAZsGuNSw2yH/qkrjf6sPvPgbp/WnIOCu5Ysj
hVB8epG29/RvlH99L9uaCgwAX4gMq3HZBPc7RlT+M0T9np9QtnesLrArn88f
k39Q77MUeRNuGHlG7q/Rpe9TNqS/p6ZHv2ffLfq945OLyHq2vaLrDSmg+1Fy
k+7Xpd10P/8a0/0WuELPo1aJnld5+w9yntsS6Xn/46T2IOpD7WXfQmpPhVrU
3kQsqD1WTY8Qe5V1pPb89ga1dz8v6g9Vt6i/HGih/mSdRv3t+XvqjwEZ1F9f
LKD+7CJP/T06lsaDJwtovOjooPEk5jiNN3eUaDwK20/j1cRrGs+e29J4JyFK
46HarHhZIU3jaUspjbdClTQev+Si8TpegcbzHVY03qttpvnAV5XmC9dZ+eSf
Mc03cbPyEaMRzVdzg2k+87tI811PK82HZjtovpzzkOZTj2aab4v1aD6+N0bz
9Tp7ms+fPaD5XnzwHqkHeH5vJ/WC+yJaT0g/o/XGgX9KpB5JjKT1yrPvtJ5x
FKb1zrkpWg/1CdB66fUrWk/FCNF6y+A5rcfKHWi91nec1nOplbTeC9al9eDa
JFov+pym9aSkNa03B6VoPRr39xWpV3mbaD17eietd70iaD38vIPWy+yptJ5m
76D1dm8jrccPvqT1+o61tJ5fVkvr/cG3tB9QcaP9Qi4j7ScWHaD9RpQP7Udk
zGm/8vMg7Wdmxmm/c31WPzTZSPullX9oP2ViSfuty7P6sSt8tF8rNaH93Nwp
c9LvdenSfrD2Pu0XX03QfvLoadpvPuWl/ehILu1X461oP2v2iPa7pWK0H1bq
pf1y113aTyvb0H77137aj1fa0n59bpkF6ed/CdF+f4cH1QNySnqJXnBwK9UT
/Dyp3uDFTfWILzuoXiG6iuoZojlU7yj3oXrIlBTVS3RHNIme8sSI6i3Mc6ke
cyGc6jWqnFTPucNJ9Z7jBVQPemVF9aLqaKonBcdRvYljN9WjqkqpXrV3PdWz
svZRvUvpBNXDXo0NE71sUTrV054PUr3tti3V41REqF53dqKN6Hnq66ne5zvy
m+iBrJ+oXqh6g+qJHJFUb4z7SvXI0NVUr3RopHrmN1Gqd24cpXpouTvVS5st
qJ7aakL11oWGVI919KJ67Z3JXqLnSp+neq+KGtWDa3WoXjy4gerJcneo3syX
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
YALaz1KJqs0TwKZlFmeSUf6oKA10e+kNHHq32fsZI9hb957YV3zIf8fyWNwF
kP9eDgwbmlcEXLmC4wjraniewfvAF4l0FL81QlZYXAZOs9eaGELrKQ7RSJjy
ARb0CfRmfYv2O7YlvNUN+b9gv4VfFnD081ul25+i+LPg3Iv5p4Hbwhj7zl5F
9Z1p3lQZ8he7SNbVJmi9CsEBesMHULzn5liZhPK7S5JGvYsmMK//eeYYV+D2
yIbXLxrRfiX3PG1zB/5VXTpSpgZcwnQw9AWyH/+MBK9yVtjPrTv6B9MDUb46
p9Cqb4nidWeSbiiy/1TGSzlKeSgeaHxv/b9/H/L/+L1Z/rxcDng/i/DEtO4x
4IE3WxMCUTxzqGdIVDoHfKizkJP5JfCZ4dCZvOXwfFpC0jBLG7K3m8m+yndQ
fXTjXbU7qs+PN/te8EHx4qXKpswb2ai+YePl9UT5Jq/y85UPAcAPhZa72qLz
zV+6ViSUAb7n2pmcZkGUH+qsD3WfR/aZdqiTqeUP8LHGhSrYntKHZX6m7ALe
smJycdUJYK2R3cVKscABXCxFi9D+nA9tOMGL4kU5z/eLbqi+Nv30y1AH2VeZ
XkTvS2RfQpoG33qrUL+w0EZL+yJw7JrRVAtpYFXdn4Rfq1uT+7Ml6fv4Zenv
7XhHv8eWjX7vjdt0PSasdL3neuh+8PLR/dreTfdTrpbu96H99DwsLOl5NRnS
8zzKTs/7Lx+1B+5yai8HWKg93Vem9qb5mdpjx3Vqr04e1J6NH1F7H+ul/tDX
Sv3lYzX1p5sl1N86llN/ZDtK/dVUjvpzyshF4u8xX2k8sD5N48WtWfFkXTqN
N4Wz4lFwFY1XDik0nqlH0XiX4EvjoWkijZfPZ8VT7yAabw9H0HhcYkzjdZU/
jefKc2m858um+WA5P80Xe2NoPtnhTfPNwlCaj96eofnKTY3ms24vmu9il9F8
uMGH5ss92TSfsmrSfMt8nuZj52Kar3Vf0XzOXkbzveAFWg+sPEbrhemHtJ4I
1KL1BoMYrUfYWWi9siGF1jOmv2m9c/ISrYdMjWm9tKOT1lNCXrTeevxPhdRj
trq0XjNZSOu5zatpvbfoDa0HtQZpvbgvjtaTXdG03rzuQetR0zm0XrU0o/Ws
fjitd19k03r4/GpaL9vl0Xo6cgutt39vovX430Jar6vtp/V8Xj2t9ytZaD8w
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
xvbqV2l/DdvbhFxfKD6/PKegjT8Qy7MNt2F/cec9Eo3Xq1LYcxPbv2fg8178
fd8k/6ZIGgC/2uba/Rxd78xnrcD2nOFbN43jx9LDV8n1vdvrKvB6+0Z8HbF9
7Lh1jhHbk4Si4j78/aOjtz7ieLiVc64Ijm9pNpd/4PN7yrXstyuyj+qD607g
/LpoVeIfvN53/af0cby35Nxagd936azaBI7XTipidvj7lV/Os8H5I81MMRXb
m+qrMleSH5VDDROw/emIHipHnDwato8PcZF3hiqudzJ0+65IWKD93V+2Yhz5
x11O2QBsD/2Zod04f1zJzzfF55Wn/1IT23dJ5pwduN5gWdciiJ9/0n7dB/ub
9GL+abzea/nOTtheT61gmoP359LxYn+8n0mFJ57Z4fXlsm16jfi0yZ5UnH8K
cnIrcP3xcH5YO7a3U1/K7ojgeDeduwaf51SPUh/2N/OoCz/bEc9N97+Nv/9g
xNjXfBxfrtwzq8b5XprpRB3iO86uk0cRr/DIV8D7+W5R1qtviKdb3rzD++/4
WCIR50s2/eIn2D7qtIJd8POX3fj88f3xzaGPNZF9cJgHXcbxLMzTxegZtvcZ
Ni0cDzLvF23G9qG/lKEG+0foywzeI4jnCdapYns79FS4Gu+3ybftN7D/2Tfe
WZKFuFJp86AS8lfPtqfp77C9BijU4ny0YMLEBfuThr4RIz5P+zP2Vbg+jJuT
thif173Uybs4n2d3b6nE8fH7j3+LcX49a5ndjPfv7rnhhhKcDziH3/nh9380
eyWG6hOeSfM7Uqg/GeqQy3iB1uvo6H0S229eWsxNnM83tEfnYH9LvbDCENt/
x2vWElxPaPGUf/XH9YShzQv8fM+GTel4PfmDmx2xP3J43C7H32P4ICMOn3fm
8/RW/Hu8q63scD0vq3bEGvcLz+IG7PB5ddibziX2X6Y0hPuFiBV11fh6V/fp
DjNsv/O1LPB5aditJefbUtUljO1P2zvYB6+3jTEvQRHv//IHrfj5hZ4rx/H9
ipKPArF96WwOHw/C8dmjJcke5z8Xw4f4fPhNytbj83zBWjTRh36ff6hZKgTb
6/aK6TIcL+SH3uP6Pn90QEIKPX9M06kS++upzwERuN9T6NJ1xfE55U2jM7aH
PDPJLLyfzJ212Xj9pvI57Xg/I2dSjuPzMq5s2Yz9s4H3e1Q84vPZIk9w/dct
3l+P4wnHFonNOH5oyu5swPXgVP2CARwPGjfZ1uF8YvRxc6Af2o/FjEG6b7F9
LJZlxvf7OlpE4fOwqdMcxf36kG3+eRwP3ca7RHF+KHgo0Yzr+12mNf24X7dS
MZl3EOXjYx8jhfB+Xxc9XYDrG6mlNc64nhDgTU/D979IyjpggerhJrG34fj5
LgnXq9h+lQJ70u/i80rX6sH9rtjagUxsz1ORleT8OFf2XniJfs8sb8wW52fJ
R7p9uF+fqW8Rw/VqSuOm1zh/5mQl+OH8NHmL6UI0YtXy2HfY3o4KWZ3F9W3z
zcgQHM9D4lsCcbzh0Z57F+dflXVtJL5fk7zwGOcfgXATGdwfHWxuL8b6jM5M
aCF+vwJfRjzeHz05qUl8XT5eVRnv754sSVccT3Uqn3Jie7kmtE4Ln1dOWZov
9qeBD6Kj+uj7+uy2PcL++WVzhSDuB9U1guyceYH/zjFT34+uP8j7xKGMv2fT
tmR8Ps6bjufh8/BeFWeJ/fOM19NOHD8mKtyEsD/d5kh7iff7T6xHJI7/yawC
y/H+30nYfAPHE4H5r1pxvHfe67r7DmIZsw+5eH9HT2X9w/6Rn6Z1FO/vktbE
amzfJdqFN3E8LBX9zYXtqbgwowznuxXtT8JxPHpcPzyNrzcbiCaloPPxtTtx
Nxz1s4t4wl5hvWvh5U0OeP/ce4UF8XWG08u58fq3BftqYPuKtU5nx/5x0r5z
E9YPOcWPucvi/P/nfimOD/s/RI7heDbyej0frjf7pzefxfHPU96zHp+vn8sz
SZxfrokYMIyj+ubD2mCnfWg/BI+fdML+cvJq0ze8373+2do4P1hnsS/E+W5b
26l9+Pmi3NzLeP+6Ria1cTyZ2NHNjvPtwadJS/H+MKgKX8L+xj0eOIX70W35
rIvxeS/0qj6M/XGZdugjzEFsXN34vBYuZxDH/lLN/m+yEMX/xQekh3G9sFyE
eXHUCZRvdUqHRlC8DTQYVMTnF9IRVYafZ2y7EoF/T1bw/FLcP3sNnFqD61OB
8soU7G+lyg1qeYgjHnpcwfrO9zzpSRy/UgaC3HF8VWb3NUtDfO7dmU+eOD+e
/XyZ5LdH9/sdEH9b6UTizzf57zHYv2aM7wji83dWsU/A9shwL2kO9m+3qrRa
XF/e5WgLwPtjtzPdEMfLTJ4f5jg/Fhbtb5BG9qvV0qqB45esynAOzs995wvX
4Hhj/qF4F+mXGkT/4PVMn/NywvmsQ674KI7nQzuYv+H9vqGtb4/X93e0azOu
f5rcdYXx/tY0ZYfjfNzzyvE2rs/nyIr7r8P7+VhRA+9P6o+1ydj++WvSF+D+
gcehNQ/34yJ7uFPxepc5JyTh73e+r8yC+6Hzv25txPFa/nNhK9ZzOqe7xRYh
Nno2uTsGncfgEg2WY8g/RhNfa0ag+7Nu8K7E8cs70JsB28uI1r9JfJ5pE53h
OD44OI4LYH1FxdVkCscr5soCZRxvAion4vH5nrnfM5OFvjeOldUBP2/0yVsO
328rs+gRjler1C+9XYPfX9Gvga/L7GCWxfXsGbnMDzh+G2zhycH+qRVzjPTj
DNFnPHE+Ubb1TsL2d67k3tJg9P0fVEaE8fNCzWrPcbw8s9cqCPtDYriULc6v
vZPONdgfd63pOEb0+B8Jtng/7PpbbXLwfkmwlmXg/Bc0qI3jjYmc4CWcD4eq
vG3wfv+UdU/A+e7gzcGXRD9JWbsax0vVioqGD2j9owFNClhfnO6YuobXz6mW
a4r7se7rNWNEDxR0c4nD6z8kZYDzxWrufY34/OT5q7bLIOa7wd6N94epz08e
r2fVD6/teP2+3apLrXD8WK/Zj/OVQD6PKLb/XWdfW6fjfHZOJhX7SwVDgw+O
vyKRF7ywvwfKa7Rj+/w9ctcF+0frnYpp3M96SzUl4f7AWvO4CdbHl13VO4r1
tZf6PzqwPaeXcG4gek7e9+RAxGOyucfx9zh/5PmE92tlbWsR7s90thVEYD3O
913/Q2wPG+3kjLG9tSoXeON4q8qiMIx/7x+PKJn3xs1/loLtR/1E1nkcj/vi
LYpwvdzfffIPztdPVm4NwP4SHFhsjeOn5a30RHy/cYb4JH7fkvRNJfj+ydJ3
DGS+nFNojq+/mfiY5YhYz0zNrRv5Q/t6vWU+uN5dfSaGBd3Pol3Ldw/HW44r
0XxmyL/VS47i+OV6XzoY21PuY9X/zfv/P3X92Q8=
         "]]}}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 1}, {0.23606798713521754`, 0.9999999999999991}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
       "\"\\!\\(\\*OverscriptBox[\\(\[Lambda]\\), \\(_\\)]\\)(\[Rho])\"", 
        Directive[FontSize -> Large, FontFamily -> "Linux Libertine Display"],
         StripOnInput -> False], 
       StyleBox["\"\[Lambda](\[Rho])\"", 
        Directive[FontSize -> Large, FontFamily -> "Linux Libertine Display"],
         StripOnInput -> False]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[3], 
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.]], {
                    
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[3], 
                    RGBColor[
                    0.5450980392156862, 0.13725490196078433`, 0.]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3633986928104575, 0.09150326797385622, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5450980392156862, 0.13725490196078433, 0.]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.], 
                    Editable -> False, Selectable -> False]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.656829224159657*^9, 3.656829273918192*^9, {3.6568304759097767`*^9, 
   3.656830492606365*^9}, 3.656833227341655*^9, 3.6568517263541327`*^9, 
   3.6568517609807997`*^9, 3.656851798414571*^9, 3.656851926100462*^9, {
   3.65685220893398*^9, 3.656852247776272*^9}, {3.65685427566531*^9, 
   3.6568542860153303`*^9}, 3.6572641115132217`*^9, {3.657264438833639*^9, 
   3.657264461183996*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]b", "[", "\[Rho]", "]"}], ",", 
     RowBox[{"\[Lambda]", "[", "\[Rho]", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"PointSize", "[", "0.018", "]"}], ",", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"Point", "[", 
           RowBox[{"glue", "[", 
            RowBox[{"\[Rho]Range", ",", "#"}], "]"}], "]"}], "&"}], "/@", 
         RowBox[{"{", 
          RowBox[{"\[Lambda]num", ",", "\[Lambda]bnum"}], "}"}]}], ")"}]}], 
      "}"}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", "\"\<\[Rho]\>\"", "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"st", "/@", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*OverscriptBox[\(\[Lambda]\), \(_\)]\)(\[Rho])\>\"", ",", 
       "\"\<\[Lambda](\[Rho])\>\""}], "}"}]}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", "comp"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<Linux Libertine Display\>\""}]}], 
     "]"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.656829159859724*^9, 3.656829223529351*^9}, {
   3.656829264297797*^9, 3.656829272649178*^9}, {3.656830471916205*^9, 
   3.656830492139256*^9}, {3.656851795890786*^9, 3.656851816562564*^9}, {
   3.656851865995111*^9, 3.656851876402793*^9}, {3.6568519677232*^9, 
   3.65685200429105*^9}, {3.656852202323662*^9, 3.656852247475355*^9}, {
   3.6568542850308733`*^9, 3.656854285193421*^9}, 3.657264343864213*^9, {
   3.657264467680689*^9, 3.657264493784266*^9}, {3.657264982761005*^9, 
   3.657264982960638*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[3], 
        RGBColor[0.368417, 0.506779, 0.709798]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[3], 
        RGBColor[0.5450980392156862, 0.13725490196078433`, 0.]], 
       LineBox[CompressedData["
1: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
Wa9ISeL/KS2fnJ+nEX73299ULlP4P4nh8UQ=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Rho]\"", TraditionalForm], None}, AxesOrigin -> {0, 0.2}, 
     AxesStyle -> 
     Directive[FontSize -> 15, FontFamily -> "Linux Libertine Display"], 
     DisplayFunction :> Identity, Epilog -> {{
        PointSize[0.018], {
         PointBox[{{0.1, 0.5006133942618795}, {0.2, 0.5008977167741769}, {
          0.30000000000000004`, 0.492655096392471}, {0.4, 
          0.4797549176056227}, {0.5, 0.46465757816968783`}, {0.6, 
          0.44875231427159373`}, {0.7000000000000001, 0.4327725572235068}, {
          0.8, 0.41709671865742187`}, {0.9, 0.4023633543836234}, {1., 
          0.39008924259431516`}}], 
         PointBox[{{0.1, 0.9795506889695729}, {0.2, 0.9218462733132131}, {
          0.30000000000000004`, 0.8363197853648482}, {0.4, 
          0.7352591558943008}, {0.5, 0.6306651150661972}, {0.6, 
          0.5315602534716929}, {0.7000000000000001, 0.44302509698665893`}, {
          0.8, 0.3669003036716836}, {0.9, 0.30302259275690163`}, {1., 
          0.2502112303948514}}]}}}, Frame -> {{False, False}, {False, False}},
      FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 1}, {0.23606798713521754`, 0.9999999999999991}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
       "\"\\!\\(\\*OverscriptBox[\\(\[Lambda]\\), \\(_\\)]\\)(\[Rho])\"", 
        Directive[FontSize -> Large, FontFamily -> "Linux Libertine Display"],
         StripOnInput -> False], 
       StyleBox["\"\[Lambda](\[Rho])\"", 
        Directive[FontSize -> Large, FontFamily -> "Linux Libertine Display"],
         StripOnInput -> False]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[3], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[3], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[3], 
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.]], {
                    
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[3], 
                    RGBColor[
                    0.5450980392156862, 0.13725490196078433`, 0.]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "3", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3633986928104575, 0.09150326797385622, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5450980392156862, 0.13725490196078433, 0.]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.], 
                    Editable -> False, Selectable -> False]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.6572643445825987`*^9, {3.657264464727448*^9, 3.657264494149889*^9}, 
   3.657264983534788*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    "\"\</renorm_th_num.pdf\>\""}], ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.656854333334352*^9, 3.656854372598194*^9}}],

Cell[BoxData["\<\"/home/nicolas/git/talks/CMAC Days Grenoble \
2015//renorm_th_num.pdf\"\>"], "Output",
 CellChangeTimes->{3.656854373702783*^9, 3.657264506583725*^9, 
  3.657264987458967*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"\[Lambda]b", "[", "\[Rho]", "]"}], ",", 
     RowBox[{"\[Lambda]", "[", "\[Rho]", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.015", "]"}], ",", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Point", "[", 
          RowBox[{"glue", "[", 
           RowBox[{"\[Rho]Range", ",", "#"}], "]"}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"\[Lambda]num", ",", "\[Lambda]bnum"}], "}"}]}], ")"}], ",", 
      
      RowBox[{
       RowBox[{
        RowBox[{"Line", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", 
               RowBox[{"2", ",", "2"}], "]"}], "]"}]}], "}"}]}], "}"}], "]"}],
         "&"}], "/@", 
       RowBox[{"glue", "[", 
        RowBox[{"\[Rho]Range", ",", "std\[Lambda]"}], "]"}]}]}], "}"}]}], ",", 
   RowBox[{"AxesLabel", "\[Rule]", 
    RowBox[{"{", "\"\<\[Rho]\>\"", "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"st", "/@", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*OverscriptBox[\(\[Lambda]\), \(_\)]\)(\[Rho])\>\"", ",", 
       "\"\<\[Lambda](\[Rho])\>\""}], "}"}]}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", 
          RowBox[{"97", ",", "\"\<ColorList\>\""}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", "comp"}], "}"}]}], 
     "}"}]}], ",", 
   RowBox[{"AxesStyle", "\[Rule]", 
    RowBox[{"Directive", "[", 
     RowBox[{
      RowBox[{"FontSize", "\[Rule]", "15"}], ",", 
      RowBox[{"FontFamily", "\[Rule]", "\"\<CMU Serif\>\""}]}], "]"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.656829159859724*^9, 3.656829223529351*^9}, {
  3.656829264297797*^9, 3.656829272649178*^9}, {3.656830471916205*^9, 
  3.656830492139256*^9}, {3.6568318830936337`*^9, 3.6568319174693527`*^9}, {
  3.656831958925459*^9, 3.656832008317542*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[2], 
        RGBColor[0.368417, 0.506779, 0.709798]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[2], 
        RGBColor[0.5450980392156862, 0.13725490196078433`, 0.]], 
       LineBox[CompressedData["
1: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
Wa9ISeL/KS2fnJ+nEX73299ULlP4P4nh8UQ=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {
       FormBox["\"\[Rho]\"", TraditionalForm], None}, AxesOrigin -> {0, 0.2}, 
     AxesStyle -> Directive[FontSize -> 15, FontFamily -> "CMU Serif"], 
     DisplayFunction :> Identity, Epilog -> {
       PointSize[0.015], {
        PointBox[{{0.1, 0.5205226049187598}, {0.2, 0.518949374134036}, {
         0.30000000000000004`, 0.5084646403204607}, {0.4, 
         0.4932329802192924}, {0.5, 0.47589742418957526`}, {0.6, 
         0.45792097738417037`}, {0.7000000000000001, 0.440071073686205}, {0.8,
          0.42275663380088946`}, {0.9, 0.406200377509027}, {1., 
         0.39181183005266434`}}], 
        PointBox[{{0.1, 0.9794143552838473}, {0.2, 0.9215431855313019}, {
         0.30000000000000004`, 0.8361973240928648}, {0.4, 
         0.7357451264500101}, {0.5, 0.6319838544054123}, {0.6, 
         0.5336709314545102}, {0.7000000000000001, 0.445715842629286}, {0.8, 
         0.36991392172671733`}, {0.9, 0.3061403736320092}, {1., 
         0.25329739162047354`}}]}, {
        LineBox[{{0.1, 0.5150839286409905}, {0.1, 0.526018707177053}}], 
        LineBox[{{0.2, 0.5020442053630573}, {0.2, 0.5364237850715855}}], 
        LineBox[{{0.30000000000000004`, 0.47993838375337655`}, {
         0.30000000000000004`, 0.5386864214408578}}], 
        LineBox[{{0.4, 0.45593855879573003`}, {0.4, 0.5335779746696064}}], 
        LineBox[{{0.5, 0.433525521584496}, {0.5, 0.5224106703626465}}], 
        LineBox[{{0.6, 0.41412490014487235`}, {0.6, 0.5063487403320059}}], 
        LineBox[{{0.7000000000000001, 0.39821922797187215`}, {
         0.7000000000000001, 0.4863214437978079}}], 
        LineBox[{{0.8, 0.38589413504580733`}, {0.8, 0.4631404190723037}}], 
        LineBox[{{0.9, 0.372738336415483}, {0.9, 0.4426664245894892}}], 
        LineBox[{{1., 0.38723709804853906`}, {1., 0.39644060691203475`}}]}}, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{0, 1}, {0.23606798713521754`, 0.9999999999999991}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       StyleBox[
       "\"\\!\\(\\*OverscriptBox[\\(\[Lambda]\\), \\(_\\)]\\)(\[Rho])\"", 
        Directive[FontSize -> 20, FontFamily -> "CMU Serif"], StripOnInput -> 
        False], 
       StyleBox["\"\[Lambda](\[Rho])\"", 
        Directive[FontSize -> 20, FontFamily -> "CMU Serif"], StripOnInput -> 
        False]}, "LineLegend", DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[0.368417, 0.506779, 0.709798]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.]], {
                    
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[2], 
                    RGBColor[
                    0.5450980392156862, 0.13725490196078433`, 0.]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "2", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.3633986928104575, 0.09150326797385622, 0.], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.5450980392156862, 0.13725490196078433, 0.]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.5450980392156862, 0.13725490196078433`, 0.], 
                    Editable -> False, Selectable -> False]}], "]"}]}], "}"}],
            ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.656832010810725*^9, 3.65683210168804*^9}, {
   3.656833230114544*^9, 3.6568332567881937`*^9}, 3.656851773620747*^9}]
}, Open  ]],

Cell["\<\
What about the q dependance of \[Gamma]? We took \[Gamma](\[Rho],q) = 1/(1+\
\[Rho]^q), and while this is justified for q=0, q=1, in the q->\[Infinity] \
limit it is clearly wrong that \[Gamma]->0 for \[Rho] finite. So the correct \
q-dependance of \[Gamma] in this limit remains to be understood.\
\>", "Text",
 CellChangeTimes->{{3.656766400278442*^9, 3.656766500150626*^9}},
 Background->GrayLevel[0.85]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"d2th", "[", 
     RowBox[{"\[Rho]_", ",", "q_", ",", "x_", ",", "n_"}], "]"}], ":=", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"n", "+", "2"}], ")"}]}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", " ", 
         RowBox[{"Log", "[", 
          SuperscriptBox[
           RowBox[{"\[Lambda]", "[", 
            RowBox[{"\[Rho]", ",", "q"}], "]"}], "q"], "]"}]}], "+", 
        RowBox[{
         FractionBox[
          RowBox[{"1", "-", 
           RowBox[{"2", "x"}]}], "3"], " ", 
         RowBox[{"Log", "[", 
          SuperscriptBox[
           RowBox[{"\[Lambda]b", "[", "\[Rho]", "]"}], "q"], "]"}]}], "+", 
        RowBox[{"x", " ", 
         RowBox[{"Log", "[", "2", "]"}]}]}], ")"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"q", "-", "1"}], ")"}], 
        RowBox[{"Log", "[", 
         RowBox[{"Fibonacci", "[", 
          RowBox[{"n", "+", "2"}], "]"}], "]"}]}], ")"}]}]}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{"in", " ", "the", " ", "finite", " ", "size", " ", "case"}], ",", 
    " ", 
    RowBox[{
     RowBox[{
      RowBox[{"3", 
       SubscriptBox["n", 
        RowBox[{"A", " "}]]}], "+", " ", 
      RowBox[{"2", 
       SubscriptBox["n", "M"]}]}], " ", "\[NotEqual]", " ", "n"}], ",", " ", 
    RowBox[{
    "so", " ", "that", " ", "it", " ", "is", " ", "more", " ", "accurate", 
     " ", "to", " ", "replace", " ", "x", " ", "by", " ", 
     SubscriptBox["n", "M"], " ", "and", " ", 
     SubscriptBox["n", "A"], " ", "in", " ", "the", " ", "fractal", " ", 
     "dimensions"}]}], " ", "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dfinite", "[", 
    RowBox[{"\[Rho]_", ",", "q_", ",", 
     RowBox[{"{", 
      RowBox[{"nm_", ",", "na_"}], "}"}], ",", "n_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"q", "<", "3"}], ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          FractionBox["nm", 
           RowBox[{"n", "+", "2"}]], " ", 
          RowBox[{"Log", "[", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"\[Lambda]", "[", 
              RowBox[{"\[Rho]", ",", "q"}], "]"}], "q"], 
            RowBox[{"\[Lambda]", "[", 
             RowBox[{
              SuperscriptBox["\[Rho]", "q"], ",", "q"}], "]"}]], "]"}]}], "+", 
         RowBox[{
          FractionBox["na", 
           RowBox[{"n", "+", "2"}]], " ", 
          RowBox[{"Log", "[", 
           FractionBox[
            SuperscriptBox[
             RowBox[{"\[Lambda]b", "[", "\[Rho]", "]"}], "q"], 
            RowBox[{"\[Lambda]b", "[", 
             SuperscriptBox["\[Rho]", "q"], "]"}]], "]"}]}]}], ")"}]}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"q", "-", "1"}], ")"}], 
        RowBox[{"Log", "[", 
         SuperscriptBox[
          RowBox[{"Fibonacci", "[", 
           RowBox[{"n", "+", "2"}], "]"}], 
          RowBox[{"1", "/", 
           RowBox[{"(", 
            RowBox[{"n", "+", "2"}], ")"}]}]], "]"}]}], ")"}]}], ",", 
     RowBox[{"d2th", "[", 
      RowBox[{"\[Rho]", ",", "q", ",", 
       RowBox[{"nm", "/", 
        RowBox[{"(", 
         RowBox[{"n", "+", "2"}], ")"}]}], ",", "n"}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.656766174071015*^9, 3.656766181286721*^9}, {
  3.65676632327917*^9, 3.656766329070805*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"dfinite", "[", 
      RowBox[{"\[Rho]", ",", "qm", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "9"}], "}"}], ",", "n"}], "]"}], ",", 
     RowBox[{"dfinite", "[", 
      RowBox[{"\[Rho]", ",", "qm", ",", 
       RowBox[{"{", 
        RowBox[{"6", ",", "0"}], "}"}], ",", "n"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Rho]", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"Epilog", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"PointSize", "[", "0.012", "]"}], ",", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"Point", "[", 
          RowBox[{"glue", "[", 
           RowBox[{"\[Rho]Range", ",", "#"}], "]"}], "]"}], "&"}], "/@", 
        RowBox[{"{", 
         RowBox[{"dq0s", ",", "dqMols"}], "}"}]}], ")"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.656762084813036*^9, 3.656762175715067*^9}, {
  3.656765216301735*^9, 3.656765219015317*^9}, {3.656765914614422*^9, 
  3.656765936614419*^9}, {3.6567661021271477`*^9, 3.6567661342385063`*^9}, {
  3.6567663396632547`*^9, 3.656766375270597*^9}, {3.656825173019402*^9, 
  3.656825218747435*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
PvbvB/j4LxavzK4=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
5+ZYODQ/te4PHxv/AR0Sk8Y=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{
    PointSize[0.012], {
     PointBox[{{0.1, 0.014702452667938924`}, {0.2, 0.05775218331095589}, {
      0.30000000000000004`, 0.1264456942784314}, {0.4, 
      0.21690669507066473`}, {0.5, 0.3243592799598923}, {0.6, 
      0.4438736150249299}, {0.7000000000000001, 0.5711725483359196}, {0.8, 
      0.702934066766577}, {0.9, 0.8366850403921261}, {1., 
      0.9568591983462951}}], 
     PointBox[{{0.1, 0.6815835310544321}, {0.2, 0.6660060328827734}, {
      0.30000000000000004`, 0.6655987498091143}, {0.4, 0.677989405764556}, {
      0.5, 0.7010122903116506}, {0.6, 0.7330271391663747}, {
      0.7000000000000001, 0.773035658764991}, {0.8, 0.8204785609888798}, {0.9,
       0.8780081223216301}, {1., 0.9617810548446819}}]}},
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->{{0, 1}, {0., 1.2700846287176035`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.656766136032455*^9, {3.656766330697233*^9, 3.6567663756368093`*^9}, 
   3.656766566408348*^9, {3.656825187289933*^9, 3.6568252193167753`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dfinite", "[", 
  RowBox[{"\[Rho]", ",", "qm", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "na"}], "}"}], ",", "n"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "0.0155009548515612`"}], " ", 
  RowBox[{"Log", "[", 
   SuperscriptBox[
    RowBox[{"lb", "[", "\[Rho]", "]"}], "50.`"], "]"}]}]], "Output",
 CellChangeTimes->{3.656766143463153*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1920, 1141},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.3 for Linux x86 (64-bit) (October 9, 2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 789, 20, 77, "Input"],
Cell[1350, 42, 300, 7, 55, "Input"],
Cell[CellGroupData[{
Cell[1675, 53, 146, 2, 71, "Section"],
Cell[CellGroupData[{
Cell[1846, 59, 150, 2, 49, "Subsection"],
Cell[1999, 63, 2524, 66, 165, "Input"],
Cell[4526, 131, 2808, 74, 187, "Input"],
Cell[7337, 207, 3023, 79, 187, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[10409, 292, 128, 1, 57, "Section"],
Cell[10540, 295, 2105, 68, 371, "Input"],
Cell[12648, 365, 1524, 47, 77, "Input"],
Cell[CellGroupData[{
Cell[14197, 416, 1682, 42, 67, "Input"],
Cell[15882, 460, 17839, 340, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33758, 805, 237, 6, 32, "Input"],
Cell[33998, 813, 279, 4, 70, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[34326, 823, 294, 8, 57, "Section"],
Cell[CellGroupData[{
Cell[34645, 835, 233, 3, 49, "Subsection"],
Cell[34881, 840, 255, 5, 47, "Text"],
Cell[35139, 847, 1377, 41, 109, "Text"],
Cell[36519, 890, 1400, 34, 113, "Input"],
Cell[37922, 926, 1135, 34, 55, "Input"],
Cell[39060, 962, 1826, 55, 136, "Text"],
Cell[40889, 1019, 2339, 61, 297, "Input"],
Cell[CellGroupData[{
Cell[43253, 1084, 158, 2, 40, "Subsubsection"],
Cell[43414, 1088, 933, 21, 147, "Text"],
Cell[44350, 1111, 6144, 146, 407, "Input"],
Cell[50497, 1259, 322, 9, 32, "Input"],
Cell[50822, 1270, 928, 23, 55, "Input"],
Cell[CellGroupData[{
Cell[51775, 1297, 269, 6, 32, "Input"],
Cell[52047, 1305, 1871, 39, 70, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53955, 1349, 412, 11, 32, "Input"],
Cell[54370, 1362, 815, 13, 70, "Output"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[55246, 1382, 336, 9, 41, "Subsection"],
Cell[55585, 1393, 640, 17, 90, "Text"],
Cell[56228, 1412, 433, 10, 55, "Input"],
Cell[56664, 1424, 3594, 95, 429, "Input"],
Cell[60261, 1521, 1639, 44, 122, "Input"],
Cell[CellGroupData[{
Cell[61925, 1569, 247, 5, 32, "Input"],
Cell[62175, 1576, 1693, 39, 241, "Output"]
}, Open  ]],
Cell[63883, 1618, 1419, 43, 166, "Input"],
Cell[CellGroupData[{
Cell[65327, 1665, 245, 5, 32, "Input"],
Cell[65575, 1672, 2301, 49, 239, "Output"]
}, Open  ]],
Cell[67891, 1724, 643, 17, 71, "Text"],
Cell[CellGroupData[{
Cell[68559, 1745, 1454, 42, 121, "Input"],
Cell[70016, 1789, 1674, 38, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71727, 1832, 1793, 51, 165, "Input"],
Cell[73523, 1885, 2324, 48, 239, "Output"]
}, Open  ]],
Cell[75862, 1936, 756, 16, 106, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[76655, 1957, 140, 1, 41, "Subsection"],
Cell[76798, 1960, 747, 22, 55, "Input"],
Cell[77548, 1984, 428, 12, 32, "Input"],
Cell[CellGroupData[{
Cell[78001, 2000, 1511, 42, 55, "Input"],
Cell[79515, 2044, 17482, 337, 227, "Output"]
}, Open  ]],
Cell[97012, 2384, 5404, 132, 693, "Input"],
Cell[102419, 2518, 2687, 78, 253, "Input"],
Cell[105109, 2598, 749, 25, 99, "Input"],
Cell[105861, 2625, 392, 12, 32, "Input"],
Cell[CellGroupData[{
Cell[106278, 2641, 713, 21, 32, "Input"],
Cell[106994, 2664, 8491, 151, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[115522, 2820, 277, 7, 32, "Input"],
Cell[115802, 2829, 58916, 977, 228, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[174767, 3812, 115, 1, 41, "Subsection"],
Cell[174885, 3815, 2151, 63, 176, "Text"],
Cell[177039, 3880, 478, 15, 32, "Input"],
Cell[CellGroupData[{
Cell[177542, 3899, 531, 12, 55, "Input"],
Cell[178076, 3913, 508, 17, 32, "Output"]
}, Open  ]],
Cell[178599, 3933, 710, 19, 99, "Input"],
Cell[179312, 3954, 849, 24, 55, "Input"],
Cell[CellGroupData[{
Cell[180186, 3982, 1860, 49, 55, "Input"],
Cell[182049, 4033, 29012, 542, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211098, 4580, 1003, 25, 32, "Input"],
Cell[212104, 4607, 8521, 152, 234, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[220674, 4765, 181, 2, 41, "Subsection"],
Cell[220858, 4769, 1223, 36, 77, "Input"],
Cell[222084, 4807, 1305, 37, 32, "Input"],
Cell[223392, 4846, 8635, 205, 980, "Input"],
Cell[CellGroupData[{
Cell[232052, 5055, 3787, 115, 341, "Input"],
Cell[CellGroupData[{
Cell[235864, 5174, 139, 2, 23, "Print"],
Cell[236006, 5178, 139, 2, 23, "Print"],
Cell[236148, 5182, 139, 2, 23, "Print"],
Cell[236290, 5186, 139, 2, 23, "Print"]
}, Open  ]]
}, Open  ]],
Cell[236456, 5192, 2904, 80, 275, "Input"],
Cell[CellGroupData[{
Cell[239385, 5276, 101, 1, 32, "Input"],
Cell[239489, 5279, 436, 9, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239962, 5293, 102, 1, 32, "Input"],
Cell[240067, 5296, 416, 8, 32, "Output"]
}, Open  ]],
Cell[240498, 5307, 254, 5, 47, "Text"],
Cell[CellGroupData[{
Cell[240777, 5316, 2596, 63, 55, "Input"],
Cell[243376, 5381, 19412, 365, 227, "Output"]
}, Open  ]],
Cell[262803, 5749, 167, 2, 46, "Text"],
Cell[262973, 5753, 2219, 62, 143, "Input"],
Cell[CellGroupData[{
Cell[265217, 5819, 2446, 62, 67, "Input"],
Cell[267666, 5883, 62379, 1075, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[330082, 6963, 2293, 58, 67, "Input"],
Cell[332378, 7023, 18284, 350, 235, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[350699, 7378, 244, 6, 32, "Input"],
Cell[350946, 7386, 192, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351175, 7394, 2726, 75, 94, "Input"],
Cell[353904, 7471, 19073, 361, 235, "Output"]
}, Open  ]],
Cell[372992, 7835, 417, 7, 47, "Text"],
Cell[373412, 7844, 3513, 103, 144, "Input"],
Cell[CellGroupData[{
Cell[376950, 7951, 1211, 32, 32, "Input"],
Cell[378164, 7985, 10711, 190, 234, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[388912, 8180, 159, 4, 32, "Input"],
Cell[389074, 8186, 222, 6, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
